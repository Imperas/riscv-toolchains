/* This file is auto-generated by opth-gen.awk.  */

#ifndef OPTIONS_H
#define OPTIONS_H

#include "flag-types.h"

#include "config/riscv/riscv-opts.h"

#if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS) && !defined(IN_RTS)
#ifndef GENERATOR_FILE
#if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS)
struct GTY(()) gcc_options
#else
struct gcc_options
#endif
{
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT function_entry_patch_area_size;
#else
  HOST_WIDE_INT x_function_entry_patch_area_size;
#define function_entry_patch_area_size global_options.x_function_entry_patch_area_size
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT function_entry_patch_area_start;
#else
  HOST_WIDE_INT x_function_entry_patch_area_start;
#define function_entry_patch_area_start global_options.x_function_entry_patch_area_start
#endif
#ifdef GENERATOR_FILE
extern bool dump_base_name_prefixed;
#else
  bool x_dump_base_name_prefixed;
#define dump_base_name_prefixed global_options.x_dump_base_name_prefixed
#endif
#ifdef GENERATOR_FILE
extern bool exit_after_options;
#else
  bool x_exit_after_options;
#define exit_after_options global_options.x_exit_after_options
#endif
#ifdef GENERATOR_FILE
extern bool flag_disable_hsa;
#else
  bool x_flag_disable_hsa;
#define flag_disable_hsa global_options.x_flag_disable_hsa
#endif
#ifdef GENERATOR_FILE
extern bool flag_dump_all_passed;
#else
  bool x_flag_dump_all_passed;
#define flag_dump_all_passed global_options.x_flag_dump_all_passed
#endif
#ifdef GENERATOR_FILE
extern bool flag_opts_finished;
#else
  bool x_flag_opts_finished;
#define flag_opts_finished global_options.x_flag_opts_finished
#endif
#ifdef GENERATOR_FILE
extern bool flag_stack_usage_info;
#else
  bool x_flag_stack_usage_info;
#define flag_stack_usage_info global_options.x_flag_stack_usage_info
#endif
#ifdef GENERATOR_FILE
extern bool flag_warn_unused_result;
#else
  bool x_flag_warn_unused_result;
#define flag_warn_unused_result global_options.x_flag_warn_unused_result
#endif
#ifdef GENERATOR_FILE
extern bool in_lto_p;
#else
  bool x_in_lto_p;
#define in_lto_p global_options.x_in_lto_p
#endif
#ifdef GENERATOR_FILE
extern bool use_gnu_debug_info_extensions;
#else
  bool x_use_gnu_debug_info_extensions;
#define use_gnu_debug_info_extensions global_options.x_use_gnu_debug_info_extensions
#endif
#ifdef GENERATOR_FILE
extern char *help_enum_printed;
#else
  char * x_help_enum_printed;
#define help_enum_printed global_options.x_help_enum_printed
#endif
#ifdef GENERATOR_FILE
extern char *help_printed;
#else
  char * x_help_printed;
#define help_printed global_options.x_help_printed
#endif
#ifdef GENERATOR_FILE
extern const char *main_input_basename;
#else
  const char * x_main_input_basename;
#define main_input_basename global_options.x_main_input_basename
#endif
#ifdef GENERATOR_FILE
extern const char *main_input_filename;
#else
  const char * x_main_input_filename;
#define main_input_filename global_options.x_main_input_filename
#endif
#ifdef GENERATOR_FILE
extern enum debug_info_levels debug_info_level;
#else
  enum debug_info_levels x_debug_info_level;
#define debug_info_level global_options.x_debug_info_level
#endif
#ifdef GENERATOR_FILE
extern enum debug_info_type write_symbols;
#else
  enum debug_info_type x_write_symbols;
#define write_symbols global_options.x_write_symbols
#endif
#ifdef GENERATOR_FILE
extern enum debug_struct_file debug_struct_generic[DINFO_USAGE_NUM_ENUMS];
#else
  enum debug_struct_file x_debug_struct_generic[DINFO_USAGE_NUM_ENUMS];
#define debug_struct_generic global_options.x_debug_struct_generic
#endif
#ifdef GENERATOR_FILE
extern enum debug_struct_file debug_struct_ordinary[DINFO_USAGE_NUM_ENUMS];
#else
  enum debug_struct_file x_debug_struct_ordinary[DINFO_USAGE_NUM_ENUMS];
#define debug_struct_ordinary global_options.x_debug_struct_ordinary
#endif
#ifdef GENERATOR_FILE
extern enum dwarf_gnat_encodings gnat_encodings;
#else
  enum dwarf_gnat_encodings x_gnat_encodings;
#define gnat_encodings global_options.x_gnat_encodings
#endif
#ifdef GENERATOR_FILE
extern enum incremental_link flag_incremental_link;
#else
  enum incremental_link x_flag_incremental_link;
#define flag_incremental_link global_options.x_flag_incremental_link
#endif
#ifdef GENERATOR_FILE
extern enum stack_check_type flag_stack_check;
#else
  enum stack_check_type x_flag_stack_check;
#define flag_stack_check global_options.x_flag_stack_check
#endif
#ifdef GENERATOR_FILE
extern int *param_values;
#else
  int * x_param_values;
#define param_values global_options.x_param_values
#endif
#ifdef GENERATOR_FILE
extern int flag_complex_method;
#else
  int x_flag_complex_method;
#define flag_complex_method global_options.x_flag_complex_method
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_asm;
#else
  int x_flag_debug_asm;
#define flag_debug_asm global_options.x_flag_debug_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_rtl_in_asm;
#else
  int x_flag_dump_rtl_in_asm;
#define flag_dump_rtl_in_asm global_options.x_flag_dump_rtl_in_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_gen_aux_info;
#else
  int x_flag_gen_aux_info;
#define flag_gen_aux_info global_options.x_flag_gen_aux_info
#endif
#ifdef GENERATOR_FILE
extern int flag_generate_lto;
#else
  int x_flag_generate_lto;
#define flag_generate_lto global_options.x_flag_generate_lto
#endif
#ifdef GENERATOR_FILE
extern int flag_generate_offload;
#else
  int x_flag_generate_offload;
#define flag_generate_offload global_options.x_flag_generate_offload
#endif
#ifdef GENERATOR_FILE
extern int flag_print_asm_name;
#else
  int x_flag_print_asm_name;
#define flag_print_asm_name global_options.x_flag_print_asm_name
#endif
#ifdef GENERATOR_FILE
extern int flag_shlib;
#else
  int x_flag_shlib;
#define flag_shlib global_options.x_flag_shlib
#endif
#ifdef GENERATOR_FILE
extern int main_input_baselength;
#else
  int x_main_input_baselength;
#define main_input_baselength global_options.x_main_input_baselength
#endif
#ifdef GENERATOR_FILE
extern int optimize;
#else
  int x_optimize;
#define optimize global_options.x_optimize
#endif
#ifdef GENERATOR_FILE
extern int optimize_debug;
#else
  int x_optimize_debug;
#define optimize_debug global_options.x_optimize_debug
#endif
#ifdef GENERATOR_FILE
extern int optimize_fast;
#else
  int x_optimize_fast;
#define optimize_fast global_options.x_optimize_fast
#endif
#ifdef GENERATOR_FILE
extern int optimize_size;
#else
  int x_optimize_size;
#define optimize_size global_options.x_optimize_size
#endif
#ifdef GENERATOR_FILE
extern int rtl_dump_and_exit;
#else
  int x_rtl_dump_and_exit;
#define rtl_dump_and_exit global_options.x_rtl_dump_and_exit
#endif
#ifdef GENERATOR_FILE
extern int target_flags;
#else
  int x_target_flags;
#define target_flags global_options.x_target_flags
#endif
#ifdef GENERATOR_FILE
extern unsigned int flag_sanitize;
#else
  unsigned int x_flag_sanitize;
#define flag_sanitize global_options.x_flag_sanitize
#endif
#ifdef GENERATOR_FILE
extern unsigned int flag_sanitize_coverage;
#else
  unsigned int x_flag_sanitize_coverage;
#define flag_sanitize_coverage global_options.x_flag_sanitize_coverage
#endif
#ifdef GENERATOR_FILE
extern unsigned int flag_sanitize_recover;
#else
  unsigned int x_flag_sanitize_recover;
#define flag_sanitize_recover global_options.x_flag_sanitize_recover
#endif
#ifdef GENERATOR_FILE
extern unsigned int help_columns;
#else
  unsigned int x_help_columns;
#define help_columns global_options.x_help_columns
#endif
#ifdef GENERATOR_FILE
extern unsigned int initial_max_fld_align;
#else
  unsigned int x_initial_max_fld_align;
#define initial_max_fld_align global_options.x_initial_max_fld_align
#endif
#ifdef GENERATOR_FILE
extern void *flag_instrument_functions_exclude_files;
#else
  void * x_flag_instrument_functions_exclude_files;
#define flag_instrument_functions_exclude_files global_options.x_flag_instrument_functions_exclude_files
#endif
#ifdef GENERATOR_FILE
extern void *flag_instrument_functions_exclude_functions;
#else
  void * x_flag_instrument_functions_exclude_functions;
#define flag_instrument_functions_exclude_functions global_options.x_flag_instrument_functions_exclude_functions
#endif
#ifdef GENERATOR_FILE
extern int help_flag;
#else
  int x_help_flag;
#define help_flag global_options.x_help_flag
#endif
#ifdef GENERATOR_FILE
extern int no_sysroot_suffix;
#else
  int x_no_sysroot_suffix;
#define no_sysroot_suffix global_options.x_no_sysroot_suffix
#endif
#ifdef GENERATOR_FILE
extern int flag_preprocess_only;
#else
  int x_flag_preprocess_only;
#define flag_preprocess_only global_options.x_flag_preprocess_only
#endif
#ifdef GENERATOR_FILE
extern int warn_abi;
#else
  int x_warn_abi;
#define warn_abi global_options.x_warn_abi
#endif
#ifdef GENERATOR_FILE
extern int warn_abi_tag;
#else
  int x_warn_abi_tag;
#define warn_abi_tag global_options.x_warn_abi_tag
#endif
#ifdef GENERATOR_FILE
extern int warn_absolute_value;
#else
  int x_warn_absolute_value;
#define warn_absolute_value global_options.x_warn_absolute_value
#endif
#ifdef GENERATOR_FILE
extern int warn_address;
#else
  int x_warn_address;
#define warn_address global_options.x_warn_address
#endif
#ifdef GENERATOR_FILE
extern int warn_address_of_packed_member;
#else
  int x_warn_address_of_packed_member;
#define warn_address_of_packed_member global_options.x_warn_address_of_packed_member
#endif
#ifdef GENERATOR_FILE
extern int warn_aggregate_return;
#else
  int x_warn_aggregate_return;
#define warn_aggregate_return global_options.x_warn_aggregate_return
#endif
#ifdef GENERATOR_FILE
extern int warn_aggressive_loop_optimizations;
#else
  int x_warn_aggressive_loop_optimizations;
#define warn_aggressive_loop_optimizations global_options.x_warn_aggressive_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int warn_aliasing;
#else
  int x_warn_aliasing;
#define warn_aliasing global_options.x_warn_aliasing
#endif
#ifdef GENERATOR_FILE
extern int warn_align_commons;
#else
  int x_warn_align_commons;
#define warn_align_commons global_options.x_warn_align_commons
#endif
#ifdef GENERATOR_FILE
extern int warn_aligned_new;
#else
  int x_warn_aligned_new;
#define warn_aligned_new global_options.x_warn_aligned_new
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT warn_alloc_size_limit;
#else
  HOST_WIDE_INT x_warn_alloc_size_limit;
#define warn_alloc_size_limit global_options.x_warn_alloc_size_limit
#endif
#ifdef GENERATOR_FILE
extern int warn_alloc_zero;
#else
  int x_warn_alloc_zero;
#define warn_alloc_zero global_options.x_warn_alloc_zero
#endif
#ifdef GENERATOR_FILE
extern int warn_alloca;
#else
  int x_warn_alloca;
#define warn_alloca global_options.x_warn_alloca
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT warn_alloca_limit;
#else
  HOST_WIDE_INT x_warn_alloca_limit;
#define warn_alloca_limit global_options.x_warn_alloca_limit
#endif
#ifdef GENERATOR_FILE
extern int warn_ampersand;
#else
  int x_warn_ampersand;
#define warn_ampersand global_options.x_warn_ampersand
#endif
#ifdef GENERATOR_FILE
extern int warn_array_bounds;
#else
  int x_warn_array_bounds;
#define warn_array_bounds global_options.x_warn_array_bounds
#endif
#ifdef GENERATOR_FILE
extern int warn_array_temporaries;
#else
  int x_warn_array_temporaries;
#define warn_array_temporaries global_options.x_warn_array_temporaries
#endif
#ifdef GENERATOR_FILE
extern int warn_assign_intercept;
#else
  int x_warn_assign_intercept;
#define warn_assign_intercept global_options.x_warn_assign_intercept
#endif
#ifdef GENERATOR_FILE
extern int warn_attribute_alias;
#else
  int x_warn_attribute_alias;
#define warn_attribute_alias global_options.x_warn_attribute_alias
#endif
#ifdef GENERATOR_FILE
extern int warn_attribute_warning;
#else
  int x_warn_attribute_warning;
#define warn_attribute_warning global_options.x_warn_attribute_warning
#endif
#ifdef GENERATOR_FILE
extern int warn_attributes;
#else
  int x_warn_attributes;
#define warn_attributes global_options.x_warn_attributes
#endif
#ifdef GENERATOR_FILE
extern int warn_bad_function_cast;
#else
  int x_warn_bad_function_cast;
#define warn_bad_function_cast global_options.x_warn_bad_function_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_bool_compare;
#else
  int x_warn_bool_compare;
#define warn_bool_compare global_options.x_warn_bool_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_bool_op;
#else
  int x_warn_bool_op;
#define warn_bool_op global_options.x_warn_bool_op
#endif
#ifdef GENERATOR_FILE
extern int warn_builtin_declaraion_mismatch;
#else
  int x_warn_builtin_declaraion_mismatch;
#define warn_builtin_declaraion_mismatch global_options.x_warn_builtin_declaraion_mismatch
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_builtin_macro_redefined;
#else
  int x_cpp_warn_builtin_macro_redefined;
#define cpp_warn_builtin_macro_redefined global_options.x_cpp_warn_builtin_macro_redefined
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx_compat;
#else
  int x_warn_cxx_compat;
#define warn_cxx_compat global_options.x_warn_cxx_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx11_compat;
#else
  int x_warn_cxx11_compat;
#define warn_cxx11_compat global_options.x_warn_cxx11_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx14_compat;
#else
  int x_warn_cxx14_compat;
#define warn_cxx14_compat global_options.x_warn_cxx14_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx17_compat;
#else
  int x_warn_cxx17_compat;
#define warn_cxx17_compat global_options.x_warn_cxx17_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx20_compat;
#else
  int x_warn_cxx20_compat;
#define warn_cxx20_compat global_options.x_warn_cxx20_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_c_binding_type;
#else
  int x_warn_c_binding_type;
#define warn_c_binding_type global_options.x_warn_c_binding_type
#endif
#ifdef GENERATOR_FILE
extern int warn_c11_c2x_compat;
#else
  int x_warn_c11_c2x_compat;
#define warn_c11_c2x_compat global_options.x_warn_c11_c2x_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_c90_c99_compat;
#else
  int x_warn_c90_c99_compat;
#define warn_c90_c99_compat global_options.x_warn_c90_c99_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_c99_c11_compat;
#else
  int x_warn_c99_c11_compat;
#define warn_c99_c11_compat global_options.x_warn_c99_c11_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cannot_profile;
#else
  int x_warn_cannot_profile;
#define warn_cannot_profile global_options.x_warn_cannot_profile
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_align;
#else
  int x_warn_cast_align;
#define warn_cast_align global_options.x_warn_cast_align
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_function_type;
#else
  int x_warn_cast_function_type;
#define warn_cast_function_type global_options.x_warn_cast_function_type
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_qual;
#else
  int x_warn_cast_qual;
#define warn_cast_qual global_options.x_warn_cast_qual
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_result;
#else
  int x_warn_cast_result;
#define warn_cast_result global_options.x_warn_cast_result
#endif
#ifdef GENERATOR_FILE
extern int warn_catch_value;
#else
  int x_warn_catch_value;
#define warn_catch_value global_options.x_warn_catch_value
#endif
#ifdef GENERATOR_FILE
extern int warn_char_subscripts;
#else
  int x_warn_char_subscripts;
#define warn_char_subscripts global_options.x_warn_char_subscripts
#endif
#ifdef GENERATOR_FILE
extern int warn_character_truncation;
#else
  int x_warn_character_truncation;
#define warn_character_truncation global_options.x_warn_character_truncation
#endif
#ifdef GENERATOR_FILE
extern int warn_class_conversion;
#else
  int x_warn_class_conversion;
#define warn_class_conversion global_options.x_warn_class_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_class_memaccess;
#else
  int x_warn_class_memaccess;
#define warn_class_memaccess global_options.x_warn_class_memaccess
#endif
#ifdef GENERATOR_FILE
extern int warn_clobbered;
#else
  int x_warn_clobbered;
#define warn_clobbered global_options.x_warn_clobbered
#endif
#ifdef GENERATOR_FILE
extern int warn_comma_subscript;
#else
  int x_warn_comma_subscript;
#define warn_comma_subscript global_options.x_warn_comma_subscript
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_comment;
#else
  int x_cpp_warn_comment;
#define cpp_warn_comment global_options.x_cpp_warn_comment
#endif
#ifdef GENERATOR_FILE
extern int warn_compare_reals;
#else
  int x_warn_compare_reals;
#define warn_compare_reals global_options.x_warn_compare_reals
#endif
#ifdef GENERATOR_FILE
extern int warn_conditionally_supported;
#else
  int x_warn_conditionally_supported;
#define warn_conditionally_supported global_options.x_warn_conditionally_supported
#endif
#ifdef GENERATOR_FILE
extern int warn_conversion;
#else
  int x_warn_conversion;
#define warn_conversion global_options.x_warn_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_conversion_extra;
#else
  int x_warn_conversion_extra;
#define warn_conversion_extra global_options.x_warn_conversion_extra
#endif
#ifdef GENERATOR_FILE
extern int warn_conversion_null;
#else
  int x_warn_conversion_null;
#define warn_conversion_null global_options.x_warn_conversion_null
#endif
#ifdef GENERATOR_FILE
extern int warn_coverage_mismatch;
#else
  int x_warn_coverage_mismatch;
#define warn_coverage_mismatch global_options.x_warn_coverage_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_cpp;
#else
  int x_warn_cpp;
#define warn_cpp global_options.x_warn_cpp
#endif
#ifdef GENERATOR_FILE
extern int warn_ctor_dtor_privacy;
#else
  int x_warn_ctor_dtor_privacy;
#define warn_ctor_dtor_privacy global_options.x_warn_ctor_dtor_privacy
#endif
#ifdef GENERATOR_FILE
extern int warn_dangling_else;
#else
  int x_warn_dangling_else;
#define warn_dangling_else global_options.x_warn_dangling_else
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_date_time;
#else
  int x_cpp_warn_date_time;
#define cpp_warn_date_time global_options.x_cpp_warn_date_time
#endif
#ifdef GENERATOR_FILE
extern int warn_declaration_after_statement;
#else
  int x_warn_declaration_after_statement;
#define warn_declaration_after_statement global_options.x_warn_declaration_after_statement
#endif
#ifdef GENERATOR_FILE
extern int warn_delete_incomplete;
#else
  int x_warn_delete_incomplete;
#define warn_delete_incomplete global_options.x_warn_delete_incomplete
#endif
#ifdef GENERATOR_FILE
extern int warn_delnonvdtor;
#else
  int x_warn_delnonvdtor;
#define warn_delnonvdtor global_options.x_warn_delnonvdtor
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated;
#else
  int x_warn_deprecated;
#define warn_deprecated global_options.x_warn_deprecated
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated_copy;
#else
  int x_warn_deprecated_copy;
#define warn_deprecated_copy global_options.x_warn_deprecated_copy
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated_decl;
#else
  int x_warn_deprecated_decl;
#define warn_deprecated_decl global_options.x_warn_deprecated_decl
#endif
#ifdef GENERATOR_FILE
extern int warn_designated_init;
#else
  int x_warn_designated_init;
#define warn_designated_init global_options.x_warn_designated_init
#endif
#ifdef GENERATOR_FILE
extern int warn_disabled_optimization;
#else
  int x_warn_disabled_optimization;
#define warn_disabled_optimization global_options.x_warn_disabled_optimization
#endif
#ifdef GENERATOR_FILE
extern int warn_discarded_array_qualifiers;
#else
  int x_warn_discarded_array_qualifiers;
#define warn_discarded_array_qualifiers global_options.x_warn_discarded_array_qualifiers
#endif
#ifdef GENERATOR_FILE
extern int warn_discarded_qualifiers;
#else
  int x_warn_discarded_qualifiers;
#define warn_discarded_qualifiers global_options.x_warn_discarded_qualifiers
#endif
#ifdef GENERATOR_FILE
extern int warn_div_by_zero;
#else
  int x_warn_div_by_zero;
#define warn_div_by_zero global_options.x_warn_div_by_zero
#endif
#ifdef GENERATOR_FILE
extern int warn_do_subscript;
#else
  int x_warn_do_subscript;
#define warn_do_subscript global_options.x_warn_do_subscript
#endif
#ifdef GENERATOR_FILE
extern int warn_double_promotion;
#else
  int x_warn_double_promotion;
#define warn_double_promotion global_options.x_warn_double_promotion
#endif
#ifdef GENERATOR_FILE
extern int warn_duplicate_decl_specifier;
#else
  int x_warn_duplicate_decl_specifier;
#define warn_duplicate_decl_specifier global_options.x_warn_duplicate_decl_specifier
#endif
#ifdef GENERATOR_FILE
extern int warn_duplicated_branches;
#else
  int x_warn_duplicated_branches;
#define warn_duplicated_branches global_options.x_warn_duplicated_branches
#endif
#ifdef GENERATOR_FILE
extern int warn_duplicated_cond;
#else
  int x_warn_duplicated_cond;
#define warn_duplicated_cond global_options.x_warn_duplicated_cond
#endif
#ifdef GENERATOR_FILE
extern int warn_ecpp;
#else
  int x_warn_ecpp;
#define warn_ecpp global_options.x_warn_ecpp
#endif
#ifdef GENERATOR_FILE
extern int warn_empty_body;
#else
  int x_warn_empty_body;
#define warn_empty_body global_options.x_warn_empty_body
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_endif_labels;
#else
  int x_cpp_warn_endif_labels;
#define cpp_warn_endif_labels global_options.x_cpp_warn_endif_labels
#endif
#ifdef GENERATOR_FILE
extern int warn_enum_compare;
#else
  int x_warn_enum_compare;
#define warn_enum_compare global_options.x_warn_enum_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_enum_conversion;
#else
  int x_warn_enum_conversion;
#define warn_enum_conversion global_options.x_warn_enum_conversion
#endif
#ifdef GENERATOR_FILE
extern int warnings_are_errors;
#else
  int x_warnings_are_errors;
#define warnings_are_errors global_options.x_warnings_are_errors
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_expansion_to_defined;
#else
  int x_cpp_warn_expansion_to_defined;
#define cpp_warn_expansion_to_defined global_options.x_cpp_warn_expansion_to_defined
#endif
#ifdef GENERATOR_FILE
extern int extra_warnings;
#else
  int x_extra_warnings;
#define extra_warnings global_options.x_extra_warnings
#endif
#ifdef GENERATOR_FILE
extern int warn_extra_semi;
#else
  int x_warn_extra_semi;
#define warn_extra_semi global_options.x_warn_extra_semi
#endif
#ifdef GENERATOR_FILE
extern int flag_fatal_errors;
#else
  int x_flag_fatal_errors;
#define flag_fatal_errors global_options.x_flag_fatal_errors
#endif
#ifdef GENERATOR_FILE
extern int warn_float_conversion;
#else
  int x_warn_float_conversion;
#define warn_float_conversion global_options.x_warn_float_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_float_equal;
#else
  int x_warn_float_equal;
#define warn_float_equal global_options.x_warn_float_equal
#endif
#ifdef GENERATOR_FILE
extern int warn_format_contains_nul;
#else
  int x_warn_format_contains_nul;
#define warn_format_contains_nul global_options.x_warn_format_contains_nul
#endif
#ifdef GENERATOR_FILE
extern int warn_format_diag;
#else
  int x_warn_format_diag;
#define warn_format_diag global_options.x_warn_format_diag
#endif
#ifdef GENERATOR_FILE
extern int warn_format_extra_args;
#else
  int x_warn_format_extra_args;
#define warn_format_extra_args global_options.x_warn_format_extra_args
#endif
#ifdef GENERATOR_FILE
extern int warn_format_nonliteral;
#else
  int x_warn_format_nonliteral;
#define warn_format_nonliteral global_options.x_warn_format_nonliteral
#endif
#ifdef GENERATOR_FILE
extern int warn_format_overflow;
#else
  int x_warn_format_overflow;
#define warn_format_overflow global_options.x_warn_format_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_format_security;
#else
  int x_warn_format_security;
#define warn_format_security global_options.x_warn_format_security
#endif
#ifdef GENERATOR_FILE
extern int warn_format_signedness;
#else
  int x_warn_format_signedness;
#define warn_format_signedness global_options.x_warn_format_signedness
#endif
#ifdef GENERATOR_FILE
extern int warn_format_trunc;
#else
  int x_warn_format_trunc;
#define warn_format_trunc global_options.x_warn_format_trunc
#endif
#ifdef GENERATOR_FILE
extern int warn_format_y2k;
#else
  int x_warn_format_y2k;
#define warn_format_y2k global_options.x_warn_format_y2k
#endif
#ifdef GENERATOR_FILE
extern int warn_format_zero_length;
#else
  int x_warn_format_zero_length;
#define warn_format_zero_length global_options.x_warn_format_zero_length
#endif
#ifdef GENERATOR_FILE
extern int warn_format;
#else
  int x_warn_format;
#define warn_format global_options.x_warn_format
#endif
#ifdef GENERATOR_FILE
extern int warn_frame_address;
#else
  int x_warn_frame_address;
#define warn_frame_address global_options.x_warn_frame_address
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT warn_frame_larger_than_size;
#else
  HOST_WIDE_INT x_warn_frame_larger_than_size;
#define warn_frame_larger_than_size global_options.x_warn_frame_larger_than_size
#endif
#ifdef GENERATOR_FILE
extern int warn_free_nonheap_object;
#else
  int x_warn_free_nonheap_object;
#define warn_free_nonheap_object global_options.x_warn_free_nonheap_object
#endif
#ifdef GENERATOR_FILE
extern int flag_warn_frontend_loop_interchange;
#else
  int x_flag_warn_frontend_loop_interchange;
#define flag_warn_frontend_loop_interchange global_options.x_flag_warn_frontend_loop_interchange
#endif
#ifdef GENERATOR_FILE
extern int warn_function_elimination;
#else
  int x_warn_function_elimination;
#define warn_function_elimination global_options.x_warn_function_elimination
#endif
#ifdef GENERATOR_FILE
extern int warn_hsa;
#else
  int x_warn_hsa;
#define warn_hsa global_options.x_warn_hsa
#endif
#ifdef GENERATOR_FILE
extern int warn_if_not_aligned;
#else
  int x_warn_if_not_aligned;
#define warn_if_not_aligned global_options.x_warn_if_not_aligned
#endif
#ifdef GENERATOR_FILE
extern int warn_ignored_attributes;
#else
  int x_warn_ignored_attributes;
#define warn_ignored_attributes global_options.x_warn_ignored_attributes
#endif
#ifdef GENERATOR_FILE
extern int warn_ignored_qualifiers;
#else
  int x_warn_ignored_qualifiers;
#define warn_ignored_qualifiers global_options.x_warn_ignored_qualifiers
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit;
#else
  int x_warn_implicit;
#define warn_implicit global_options.x_warn_implicit
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_fallthrough;
#else
  int x_warn_implicit_fallthrough;
#define warn_implicit_fallthrough global_options.x_warn_implicit_fallthrough
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_function_declaration;
#else
  int x_warn_implicit_function_declaration;
#define warn_implicit_function_declaration global_options.x_warn_implicit_function_declaration
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_int;
#else
  int x_warn_implicit_int;
#define warn_implicit_int global_options.x_warn_implicit_int
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_interface;
#else
  int x_warn_implicit_interface;
#define warn_implicit_interface global_options.x_warn_implicit_interface
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_procedure;
#else
  int x_warn_implicit_procedure;
#define warn_implicit_procedure global_options.x_warn_implicit_procedure
#endif
#ifdef GENERATOR_FILE
extern int warn_inaccessible_base;
#else
  int x_warn_inaccessible_base;
#define warn_inaccessible_base global_options.x_warn_inaccessible_base
#endif
#ifdef GENERATOR_FILE
extern int warn_incompatible_pointer_types;
#else
  int x_warn_incompatible_pointer_types;
#define warn_incompatible_pointer_types global_options.x_warn_incompatible_pointer_types
#endif
#ifdef GENERATOR_FILE
extern int warn_inh_var_ctor;
#else
  int x_warn_inh_var_ctor;
#define warn_inh_var_ctor global_options.x_warn_inh_var_ctor
#endif
#ifdef GENERATOR_FILE
extern int warn_init_list;
#else
  int x_warn_init_list;
#define warn_init_list global_options.x_warn_init_list
#endif
#ifdef GENERATOR_FILE
extern int warn_init_self;
#else
  int x_warn_init_self;
#define warn_init_self global_options.x_warn_init_self
#endif
#ifdef GENERATOR_FILE
extern int warn_inline;
#else
  int x_warn_inline;
#define warn_inline global_options.x_warn_inline
#endif
#ifdef GENERATOR_FILE
extern int warn_int_conversion;
#else
  int x_warn_int_conversion;
#define warn_int_conversion global_options.x_warn_int_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_int_in_bool_context;
#else
  int x_warn_int_in_bool_context;
#define warn_int_in_bool_context global_options.x_warn_int_in_bool_context
#endif
#ifdef GENERATOR_FILE
extern int warn_int_to_pointer_cast;
#else
  int x_warn_int_to_pointer_cast;
#define warn_int_to_pointer_cast global_options.x_warn_int_to_pointer_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_integer_division;
#else
  int x_warn_integer_division;
#define warn_integer_division global_options.x_warn_integer_division
#endif
#ifdef GENERATOR_FILE
extern int warn_intrinsic_shadow;
#else
  int x_warn_intrinsic_shadow;
#define warn_intrinsic_shadow global_options.x_warn_intrinsic_shadow
#endif
#ifdef GENERATOR_FILE
extern int warn_intrinsics_std;
#else
  int x_warn_intrinsics_std;
#define warn_intrinsics_std global_options.x_warn_intrinsics_std
#endif
#ifdef GENERATOR_FILE
extern int warn_invalid_memory_model;
#else
  int x_warn_invalid_memory_model;
#define warn_invalid_memory_model global_options.x_warn_invalid_memory_model
#endif
#ifdef GENERATOR_FILE
extern int warn_invalid_offsetof;
#else
  int x_warn_invalid_offsetof;
#define warn_invalid_offsetof global_options.x_warn_invalid_offsetof
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_invalid_pch;
#else
  int x_cpp_warn_invalid_pch;
#define cpp_warn_invalid_pch global_options.x_cpp_warn_invalid_pch
#endif
#ifdef GENERATOR_FILE
extern int warn_jump_misses_init;
#else
  int x_warn_jump_misses_init;
#define warn_jump_misses_init global_options.x_warn_jump_misses_init
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT warn_larger_than_size;
#else
  HOST_WIDE_INT x_warn_larger_than_size;
#define warn_larger_than_size global_options.x_warn_larger_than_size
#endif
#ifdef GENERATOR_FILE
extern int warn_line_truncation;
#else
  int x_warn_line_truncation;
#define warn_line_truncation global_options.x_warn_line_truncation
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_literal_suffix;
#else
  int x_cpp_warn_literal_suffix;
#define cpp_warn_literal_suffix global_options.x_cpp_warn_literal_suffix
#endif
#ifdef GENERATOR_FILE
extern int warn_logical_not_paren;
#else
  int x_warn_logical_not_paren;
#define warn_logical_not_paren global_options.x_warn_logical_not_paren
#endif
#ifdef GENERATOR_FILE
extern int warn_logical_op;
#else
  int x_warn_logical_op;
#define warn_logical_op global_options.x_warn_logical_op
#endif
#ifdef GENERATOR_FILE
extern int warn_long_long;
#else
  int x_warn_long_long;
#define warn_long_long global_options.x_warn_long_long
#endif
#ifdef GENERATOR_FILE
extern int warn_lto_type_mismatch;
#else
  int x_warn_lto_type_mismatch;
#define warn_lto_type_mismatch global_options.x_warn_lto_type_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_main;
#else
  int x_warn_main;
#define warn_main global_options.x_warn_main
#endif
#ifdef GENERATOR_FILE
extern int warn_maybe_uninitialized;
#else
  int x_warn_maybe_uninitialized;
#define warn_maybe_uninitialized global_options.x_warn_maybe_uninitialized
#endif
#ifdef GENERATOR_FILE
extern int warn_memset_elt_size;
#else
  int x_warn_memset_elt_size;
#define warn_memset_elt_size global_options.x_warn_memset_elt_size
#endif
#ifdef GENERATOR_FILE
extern int warn_memset_transposed_args;
#else
  int x_warn_memset_transposed_args;
#define warn_memset_transposed_args global_options.x_warn_memset_transposed_args
#endif
#ifdef GENERATOR_FILE
extern int warn_misleading_indentation;
#else
  int x_warn_misleading_indentation;
#define warn_misleading_indentation global_options.x_warn_misleading_indentation
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_attributes;
#else
  int x_warn_missing_attributes;
#define warn_missing_attributes global_options.x_warn_missing_attributes
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_braces;
#else
  int x_warn_missing_braces;
#define warn_missing_braces global_options.x_warn_missing_braces
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_declarations;
#else
  int x_warn_missing_declarations;
#define warn_missing_declarations global_options.x_warn_missing_declarations
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_field_initializers;
#else
  int x_warn_missing_field_initializers;
#define warn_missing_field_initializers global_options.x_warn_missing_field_initializers
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_missing_include_dirs;
#else
  int x_cpp_warn_missing_include_dirs;
#define cpp_warn_missing_include_dirs global_options.x_cpp_warn_missing_include_dirs
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_parameter_type;
#else
  int x_warn_missing_parameter_type;
#define warn_missing_parameter_type global_options.x_warn_missing_parameter_type
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_profile;
#else
  int x_warn_missing_profile;
#define warn_missing_profile global_options.x_warn_missing_profile
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_prototypes;
#else
  int x_warn_missing_prototypes;
#define warn_missing_prototypes global_options.x_warn_missing_prototypes
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_multichar;
#else
  int x_cpp_warn_multichar;
#define cpp_warn_multichar global_options.x_cpp_warn_multichar
#endif
#ifdef GENERATOR_FILE
extern int warn_multiple_inheritance;
#else
  int x_warn_multiple_inheritance;
#define warn_multiple_inheritance global_options.x_warn_multiple_inheritance
#endif
#ifdef GENERATOR_FILE
extern int warn_multistatement_macros;
#else
  int x_warn_multistatement_macros;
#define warn_multistatement_macros global_options.x_warn_multistatement_macros
#endif
#ifdef GENERATOR_FILE
extern int warn_namespaces;
#else
  int x_warn_namespaces;
#define warn_namespaces global_options.x_warn_namespaces
#endif
#ifdef GENERATOR_FILE
extern int warn_narrowing;
#else
  int x_warn_narrowing;
#define warn_narrowing global_options.x_warn_narrowing
#endif
#ifdef GENERATOR_FILE
extern int warn_nested_externs;
#else
  int x_warn_nested_externs;
#define warn_nested_externs global_options.x_warn_nested_externs
#endif
#ifdef GENERATOR_FILE
extern int warn_noexcept;
#else
  int x_warn_noexcept;
#define warn_noexcept global_options.x_warn_noexcept
#endif
#ifdef GENERATOR_FILE
extern int warn_noexcept_type;
#else
  int x_warn_noexcept_type;
#define warn_noexcept_type global_options.x_warn_noexcept_type
#endif
#ifdef GENERATOR_FILE
extern int warn_nontemplate_friend;
#else
  int x_warn_nontemplate_friend;
#define warn_nontemplate_friend global_options.x_warn_nontemplate_friend
#endif
#ifdef GENERATOR_FILE
extern int warn_nonvdtor;
#else
  int x_warn_nonvdtor;
#define warn_nonvdtor global_options.x_warn_nonvdtor
#endif
#ifdef GENERATOR_FILE
extern int warn_nonnull;
#else
  int x_warn_nonnull;
#define warn_nonnull global_options.x_warn_nonnull
#endif
#ifdef GENERATOR_FILE
extern int warn_nonnull_compare;
#else
  int x_warn_nonnull_compare;
#define warn_nonnull_compare global_options.x_warn_nonnull_compare
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_normalize;
#else
  int x_cpp_warn_normalize;
#define cpp_warn_normalize global_options.x_cpp_warn_normalize
#endif
#ifdef GENERATOR_FILE
extern int warn_null_dereference;
#else
  int x_warn_null_dereference;
#define warn_null_dereference global_options.x_warn_null_dereference
#endif
#ifdef GENERATOR_FILE
extern int warn_odr_violations;
#else
  int x_warn_odr_violations;
#define warn_odr_violations global_options.x_warn_odr_violations
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_cast;
#else
  int x_warn_old_style_cast;
#define warn_old_style_cast global_options.x_warn_old_style_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_declaration;
#else
  int x_warn_old_style_declaration;
#define warn_old_style_declaration global_options.x_warn_old_style_declaration
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_definition;
#else
  int x_warn_old_style_definition;
#define warn_old_style_definition global_options.x_warn_old_style_definition
#endif
#ifdef GENERATOR_FILE
extern int warn_openmp_simd;
#else
  int x_warn_openmp_simd;
#define warn_openmp_simd global_options.x_warn_openmp_simd
#endif
#ifdef GENERATOR_FILE
extern int warn_overflow;
#else
  int x_warn_overflow;
#define warn_overflow global_options.x_warn_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_overlength_strings;
#else
  int x_warn_overlength_strings;
#define warn_overlength_strings global_options.x_warn_overlength_strings
#endif
#ifdef GENERATOR_FILE
extern int warn_overloaded_virtual;
#else
  int x_warn_overloaded_virtual;
#define warn_overloaded_virtual global_options.x_warn_overloaded_virtual
#endif
#ifdef GENERATOR_FILE
extern int warn_override_init;
#else
  int x_warn_override_init;
#define warn_override_init global_options.x_warn_override_init
#endif
#ifdef GENERATOR_FILE
extern int warn_override_init_side_effects;
#else
  int x_warn_override_init_side_effects;
#define warn_override_init_side_effects global_options.x_warn_override_init_side_effects
#endif
#ifdef GENERATOR_FILE
extern int warn_packed;
#else
  int x_warn_packed;
#define warn_packed global_options.x_warn_packed
#endif
#ifdef GENERATOR_FILE
extern int warn_packed_bitfield_compat;
#else
  int x_warn_packed_bitfield_compat;
#define warn_packed_bitfield_compat global_options.x_warn_packed_bitfield_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_packed_not_aligned;
#else
  int x_warn_packed_not_aligned;
#define warn_packed_not_aligned global_options.x_warn_packed_not_aligned
#endif
#ifdef GENERATOR_FILE
extern int warn_padded;
#else
  int x_warn_padded;
#define warn_padded global_options.x_warn_padded
#endif
#ifdef GENERATOR_FILE
extern int warn_parentheses;
#else
  int x_warn_parentheses;
#define warn_parentheses global_options.x_warn_parentheses
#endif
#ifdef GENERATOR_FILE
extern int pedantic;
#else
  int x_pedantic;
#define pedantic global_options.x_pedantic
#endif
#ifdef GENERATOR_FILE
extern int warn_pessimizing_move;
#else
  int x_warn_pessimizing_move;
#define warn_pessimizing_move global_options.x_warn_pessimizing_move
#endif
#ifdef GENERATOR_FILE
extern int warn_placement_new;
#else
  int x_warn_placement_new;
#define warn_placement_new global_options.x_warn_placement_new
#endif
#ifdef GENERATOR_FILE
extern int warn_pmf2ptr;
#else
  int x_warn_pmf2ptr;
#define warn_pmf2ptr global_options.x_warn_pmf2ptr
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_arith;
#else
  int x_warn_pointer_arith;
#define warn_pointer_arith global_options.x_warn_pointer_arith
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_compare;
#else
  int x_warn_pointer_compare;
#define warn_pointer_compare global_options.x_warn_pointer_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_sign;
#else
  int x_warn_pointer_sign;
#define warn_pointer_sign global_options.x_warn_pointer_sign
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_to_int_cast;
#else
  int x_warn_pointer_to_int_cast;
#define warn_pointer_to_int_cast global_options.x_warn_pointer_to_int_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_pragmas;
#else
  int x_warn_pragmas;
#define warn_pragmas global_options.x_warn_pragmas
#endif
#ifdef GENERATOR_FILE
extern int warn_prio_ctor_dtor;
#else
  int x_warn_prio_ctor_dtor;
#define warn_prio_ctor_dtor global_options.x_warn_prio_ctor_dtor
#endif
#ifdef GENERATOR_FILE
extern int warn_property_assign_default;
#else
  int x_warn_property_assign_default;
#define warn_property_assign_default global_options.x_warn_property_assign_default
#endif
#ifdef GENERATOR_FILE
extern int warn_protocol;
#else
  int x_warn_protocol;
#define warn_protocol global_options.x_warn_protocol
#endif
#ifdef GENERATOR_FILE
extern int warn_psabi;
#else
  int x_warn_psabi;
#define warn_psabi global_options.x_warn_psabi
#endif
#ifdef GENERATOR_FILE
extern int warn_real_q_constant;
#else
  int x_warn_real_q_constant;
#define warn_real_q_constant global_options.x_warn_real_q_constant
#endif
#ifdef GENERATOR_FILE
extern int warn_realloc_lhs;
#else
  int x_warn_realloc_lhs;
#define warn_realloc_lhs global_options.x_warn_realloc_lhs
#endif
#ifdef GENERATOR_FILE
extern int warn_realloc_lhs_all;
#else
  int x_warn_realloc_lhs_all;
#define warn_realloc_lhs_all global_options.x_warn_realloc_lhs_all
#endif
#ifdef GENERATOR_FILE
extern int warn_redundant_decls;
#else
  int x_warn_redundant_decls;
#define warn_redundant_decls global_options.x_warn_redundant_decls
#endif
#ifdef GENERATOR_FILE
extern int warn_redundant_move;
#else
  int x_warn_redundant_move;
#define warn_redundant_move global_options.x_warn_redundant_move
#endif
#ifdef GENERATOR_FILE
extern int warn_register;
#else
  int x_warn_register;
#define warn_register global_options.x_warn_register
#endif
#ifdef GENERATOR_FILE
extern int warn_reorder;
#else
  int x_warn_reorder;
#define warn_reorder global_options.x_warn_reorder
#endif
#ifdef GENERATOR_FILE
extern int warn_restrict;
#else
  int x_warn_restrict;
#define warn_restrict global_options.x_warn_restrict
#endif
#ifdef GENERATOR_FILE
extern int warn_return_local_addr;
#else
  int x_warn_return_local_addr;
#define warn_return_local_addr global_options.x_warn_return_local_addr
#endif
#ifdef GENERATOR_FILE
extern int warn_return_type;
#else
  int x_warn_return_type;
#define warn_return_type global_options.x_warn_return_type
#endif
#ifdef GENERATOR_FILE
extern int warn_selector;
#else
  int x_warn_selector;
#define warn_selector global_options.x_warn_selector
#endif
#ifdef GENERATOR_FILE
extern int warn_sequence_point;
#else
  int x_warn_sequence_point;
#define warn_sequence_point global_options.x_warn_sequence_point
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow;
#else
  int x_warn_shadow;
#define warn_shadow global_options.x_warn_shadow
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow_ivar;
#else
  int x_warn_shadow_ivar;
#define warn_shadow_ivar global_options.x_warn_shadow_ivar
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow_compatible_local;
#else
  int x_warn_shadow_compatible_local;
#define warn_shadow_compatible_local global_options.x_warn_shadow_compatible_local
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow_local;
#else
  int x_warn_shadow_local;
#define warn_shadow_local global_options.x_warn_shadow_local
#endif
#ifdef GENERATOR_FILE
extern int warn_shift_count_negative;
#else
  int x_warn_shift_count_negative;
#define warn_shift_count_negative global_options.x_warn_shift_count_negative
#endif
#ifdef GENERATOR_FILE
extern int warn_shift_count_overflow;
#else
  int x_warn_shift_count_overflow;
#define warn_shift_count_overflow global_options.x_warn_shift_count_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_shift_negative_value;
#else
  int x_warn_shift_negative_value;
#define warn_shift_negative_value global_options.x_warn_shift_negative_value
#endif
#ifdef GENERATOR_FILE
extern int warn_shift_overflow;
#else
  int x_warn_shift_overflow;
#define warn_shift_overflow global_options.x_warn_shift_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_compare;
#else
  int x_warn_sign_compare;
#define warn_sign_compare global_options.x_warn_sign_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_conversion;
#else
  int x_warn_sign_conversion;
#define warn_sign_conversion global_options.x_warn_sign_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_promo;
#else
  int x_warn_sign_promo;
#define warn_sign_promo global_options.x_warn_sign_promo
#endif
#ifdef GENERATOR_FILE
extern int warn_sized_deallocation;
#else
  int x_warn_sized_deallocation;
#define warn_sized_deallocation global_options.x_warn_sized_deallocation
#endif
#ifdef GENERATOR_FILE
extern int warn_sizeof_array_argument;
#else
  int x_warn_sizeof_array_argument;
#define warn_sizeof_array_argument global_options.x_warn_sizeof_array_argument
#endif
#ifdef GENERATOR_FILE
extern int warn_sizeof_pointer_div;
#else
  int x_warn_sizeof_pointer_div;
#define warn_sizeof_pointer_div global_options.x_warn_sizeof_pointer_div
#endif
#ifdef GENERATOR_FILE
extern int warn_sizeof_pointer_memaccess;
#else
  int x_warn_sizeof_pointer_memaccess;
#define warn_sizeof_pointer_memaccess global_options.x_warn_sizeof_pointer_memaccess
#endif
#ifdef GENERATOR_FILE
extern int warn_stack_protect;
#else
  int x_warn_stack_protect;
#define warn_stack_protect global_options.x_warn_stack_protect
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT warn_stack_usage;
#else
  HOST_WIDE_INT x_warn_stack_usage;
#define warn_stack_usage global_options.x_warn_stack_usage
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_aliasing;
#else
  int x_warn_strict_aliasing;
#define warn_strict_aliasing global_options.x_warn_strict_aliasing
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_null_sentinel;
#else
  int x_warn_strict_null_sentinel;
#define warn_strict_null_sentinel global_options.x_warn_strict_null_sentinel
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_overflow;
#else
  int x_warn_strict_overflow;
#define warn_strict_overflow global_options.x_warn_strict_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_prototypes;
#else
  int x_warn_strict_prototypes;
#define warn_strict_prototypes global_options.x_warn_strict_prototypes
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_selector_match;
#else
  int x_warn_strict_selector_match;
#define warn_strict_selector_match global_options.x_warn_strict_selector_match
#endif
#ifdef GENERATOR_FILE
extern int warn_stringop_overflow;
#else
  int x_warn_stringop_overflow;
#define warn_stringop_overflow global_options.x_warn_stringop_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_stringop_truncation;
#else
  int x_warn_stringop_truncation;
#define warn_stringop_truncation global_options.x_warn_stringop_truncation
#endif
#ifdef GENERATOR_FILE
extern int warn_subobject_linkage;
#else
  int x_warn_subobject_linkage;
#define warn_subobject_linkage global_options.x_warn_subobject_linkage
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_cold;
#else
  int x_warn_suggest_attribute_cold;
#define warn_suggest_attribute_cold global_options.x_warn_suggest_attribute_cold
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_const;
#else
  int x_warn_suggest_attribute_const;
#define warn_suggest_attribute_const global_options.x_warn_suggest_attribute_const
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_format;
#else
  int x_warn_suggest_attribute_format;
#define warn_suggest_attribute_format global_options.x_warn_suggest_attribute_format
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_malloc;
#else
  int x_warn_suggest_attribute_malloc;
#define warn_suggest_attribute_malloc global_options.x_warn_suggest_attribute_malloc
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_noreturn;
#else
  int x_warn_suggest_attribute_noreturn;
#define warn_suggest_attribute_noreturn global_options.x_warn_suggest_attribute_noreturn
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_pure;
#else
  int x_warn_suggest_attribute_pure;
#define warn_suggest_attribute_pure global_options.x_warn_suggest_attribute_pure
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_final_methods;
#else
  int x_warn_suggest_final_methods;
#define warn_suggest_final_methods global_options.x_warn_suggest_final_methods
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_final_types;
#else
  int x_warn_suggest_final_types;
#define warn_suggest_final_types global_options.x_warn_suggest_final_types
#endif
#ifdef GENERATOR_FILE
extern int warn_override;
#else
  int x_warn_override;
#define warn_override global_options.x_warn_override
#endif
#ifdef GENERATOR_FILE
extern int warn_surprising;
#else
  int x_warn_surprising;
#define warn_surprising global_options.x_warn_surprising
#endif
#ifdef GENERATOR_FILE
extern int warn_switch;
#else
  int x_warn_switch;
#define warn_switch global_options.x_warn_switch
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_bool;
#else
  int x_warn_switch_bool;
#define warn_switch_bool global_options.x_warn_switch_bool
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_default;
#else
  int x_warn_switch_default;
#define warn_switch_default global_options.x_warn_switch_default
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_enum;
#else
  int x_warn_switch_enum;
#define warn_switch_enum global_options.x_warn_switch_enum
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_outside_range;
#else
  int x_warn_switch_outside_range;
#define warn_switch_outside_range global_options.x_warn_switch_outside_range
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_unreachable;
#else
  int x_warn_switch_unreachable;
#define warn_switch_unreachable global_options.x_warn_switch_unreachable
#endif
#ifdef GENERATOR_FILE
extern int warn_sync_nand;
#else
  int x_warn_sync_nand;
#define warn_sync_nand global_options.x_warn_sync_nand
#endif
#ifdef GENERATOR_FILE
extern int warn_synth;
#else
  int x_warn_synth;
#define warn_synth global_options.x_warn_synth
#endif
#ifdef GENERATOR_FILE
extern int warn_system_headers;
#else
  int x_warn_system_headers;
#define warn_system_headers global_options.x_warn_system_headers
#endif
#ifdef GENERATOR_FILE
extern int warn_tabs;
#else
  int x_warn_tabs;
#define warn_tabs global_options.x_warn_tabs
#endif
#ifdef GENERATOR_FILE
extern int warn_target_lifetime;
#else
  int x_warn_target_lifetime;
#define warn_target_lifetime global_options.x_warn_target_lifetime
#endif
#ifdef GENERATOR_FILE
extern int warn_tautological_compare;
#else
  int x_warn_tautological_compare;
#define warn_tautological_compare global_options.x_warn_tautological_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_templates;
#else
  int x_warn_templates;
#define warn_templates global_options.x_warn_templates
#endif
#ifdef GENERATOR_FILE
extern int warn_terminate;
#else
  int x_warn_terminate;
#define warn_terminate global_options.x_warn_terminate
#endif
#ifdef GENERATOR_FILE
extern int warn_traditional;
#else
  int x_warn_traditional;
#define warn_traditional global_options.x_warn_traditional
#endif
#ifdef GENERATOR_FILE
extern int warn_traditional_conversion;
#else
  int x_warn_traditional_conversion;
#define warn_traditional_conversion global_options.x_warn_traditional_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_trampolines;
#else
  int x_warn_trampolines;
#define warn_trampolines global_options.x_warn_trampolines
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_trigraphs;
#else
  int x_cpp_warn_trigraphs;
#define cpp_warn_trigraphs global_options.x_cpp_warn_trigraphs
#endif
#ifdef GENERATOR_FILE
extern int warn_type_limits;
#else
  int x_warn_type_limits;
#define warn_type_limits global_options.x_warn_type_limits
#endif
#ifdef GENERATOR_FILE
extern int warn_undeclared_selector;
#else
  int x_warn_undeclared_selector;
#define warn_undeclared_selector global_options.x_warn_undeclared_selector
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_undef;
#else
  int x_cpp_warn_undef;
#define cpp_warn_undef global_options.x_cpp_warn_undef
#endif
#ifdef GENERATOR_FILE
extern int warn_undefined_do_loop;
#else
  int x_warn_undefined_do_loop;
#define warn_undefined_do_loop global_options.x_warn_undefined_do_loop
#endif
#ifdef GENERATOR_FILE
extern int warn_underflow;
#else
  int x_warn_underflow;
#define warn_underflow global_options.x_warn_underflow
#endif
#ifdef GENERATOR_FILE
extern int warn_uninitialized;
#else
  int x_warn_uninitialized;
#define warn_uninitialized global_options.x_warn_uninitialized
#endif
#ifdef GENERATOR_FILE
extern int warn_unknown_pragmas;
#else
  int x_warn_unknown_pragmas;
#define warn_unknown_pragmas global_options.x_warn_unknown_pragmas
#endif
#ifdef GENERATOR_FILE
extern int warn_unsuffixed_float_constants;
#else
  int x_warn_unsuffixed_float_constants;
#define warn_unsuffixed_float_constants global_options.x_warn_unsuffixed_float_constants
#endif
#ifdef GENERATOR_FILE
extern int warn_unused;
#else
  int x_warn_unused;
#define warn_unused global_options.x_warn_unused
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_but_set_parameter;
#else
  int x_warn_unused_but_set_parameter;
#define warn_unused_but_set_parameter global_options.x_warn_unused_but_set_parameter
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_but_set_variable;
#else
  int x_warn_unused_but_set_variable;
#define warn_unused_but_set_variable global_options.x_warn_unused_but_set_variable
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_const_variable;
#else
  int x_warn_unused_const_variable;
#define warn_unused_const_variable global_options.x_warn_unused_const_variable
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_dummy_argument;
#else
  int x_warn_unused_dummy_argument;
#define warn_unused_dummy_argument global_options.x_warn_unused_dummy_argument
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_function;
#else
  int x_warn_unused_function;
#define warn_unused_function global_options.x_warn_unused_function
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_label;
#else
  int x_warn_unused_label;
#define warn_unused_label global_options.x_warn_unused_label
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_local_typedefs;
#else
  int x_warn_unused_local_typedefs;
#define warn_unused_local_typedefs global_options.x_warn_unused_local_typedefs
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_unused_macros;
#else
  int x_cpp_warn_unused_macros;
#define cpp_warn_unused_macros global_options.x_cpp_warn_unused_macros
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_parameter;
#else
  int x_warn_unused_parameter;
#define warn_unused_parameter global_options.x_warn_unused_parameter
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_result;
#else
  int x_warn_unused_result;
#define warn_unused_result global_options.x_warn_unused_result
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_value;
#else
  int x_warn_unused_value;
#define warn_unused_value global_options.x_warn_unused_value
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_variable;
#else
  int x_warn_unused_variable;
#define warn_unused_variable global_options.x_warn_unused_variable
#endif
#ifdef GENERATOR_FILE
extern int warn_use_without_only;
#else
  int x_warn_use_without_only;
#define warn_use_without_only global_options.x_warn_use_without_only
#endif
#ifdef GENERATOR_FILE
extern int warn_useless_cast;
#else
  int x_warn_useless_cast;
#define warn_useless_cast global_options.x_warn_useless_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_varargs;
#else
  int x_warn_varargs;
#define warn_varargs global_options.x_warn_varargs
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_variadic_macros;
#else
  int x_cpp_warn_variadic_macros;
#define cpp_warn_variadic_macros global_options.x_cpp_warn_variadic_macros
#endif
#ifdef GENERATOR_FILE
extern int warn_vector_operation_performance;
#else
  int x_warn_vector_operation_performance;
#define warn_vector_operation_performance global_options.x_warn_vector_operation_performance
#endif
#ifdef GENERATOR_FILE
extern int warn_virtual_inheritance;
#else
  int x_warn_virtual_inheritance;
#define warn_virtual_inheritance global_options.x_warn_virtual_inheritance
#endif
#ifdef GENERATOR_FILE
extern int warn_virtual_move_assign;
#else
  int x_warn_virtual_move_assign;
#define warn_virtual_move_assign global_options.x_warn_virtual_move_assign
#endif
#ifdef GENERATOR_FILE
extern int warn_vla;
#else
  int x_warn_vla;
#define warn_vla global_options.x_warn_vla
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT warn_vla_limit;
#else
  HOST_WIDE_INT x_warn_vla_limit;
#define warn_vla_limit global_options.x_warn_vla_limit
#endif
#ifdef GENERATOR_FILE
extern int warn_volatile;
#else
  int x_warn_volatile;
#define warn_volatile global_options.x_warn_volatile
#endif
#ifdef GENERATOR_FILE
extern int warn_volatile_register_var;
#else
  int x_warn_volatile_register_var;
#define warn_volatile_register_var global_options.x_warn_volatile_register_var
#endif
#ifdef GENERATOR_FILE
extern int warn_write_strings;
#else
  int x_warn_write_strings;
#define warn_write_strings global_options.x_warn_write_strings
#endif
#ifdef GENERATOR_FILE
extern int warn_zero_as_null_pointer_constant;
#else
  int x_warn_zero_as_null_pointer_constant;
#define warn_zero_as_null_pointer_constant global_options.x_warn_zero_as_null_pointer_constant
#endif
#ifdef GENERATOR_FILE
extern int warn_zerotrip;
#else
  int x_warn_zerotrip;
#define warn_zerotrip global_options.x_warn_zerotrip
#endif
#ifdef GENERATOR_FILE
extern const char *aux_info_file_name;
#else
  const char *x_aux_info_file_name;
#define aux_info_file_name global_options.x_aux_info_file_name
#endif
#ifdef GENERATOR_FILE
extern const char *aux_base_name;
#else
  const char *x_aux_base_name;
#define aux_base_name global_options.x_aux_base_name
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_callgraph;
#else
  int x_flag_dump_callgraph;
#define flag_dump_callgraph global_options.x_flag_dump_callgraph
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_dump_defined;
#else
  int x_flag_lto_dump_defined;
#define flag_lto_dump_defined global_options.x_flag_lto_dump_defined
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_dump_demangle;
#else
  int x_flag_lto_dump_demangle;
#define flag_lto_dump_demangle global_options.x_flag_lto_dump_demangle
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_body;
#else
  const char *x_flag_dump_body;
#define flag_dump_body global_options.x_flag_dump_body
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_level;
#else
  const char *x_flag_dump_level;
#define flag_dump_level global_options.x_flag_dump_level
#endif
#ifdef GENERATOR_FILE
extern const char *dump_base_name;
#else
  const char *x_dump_base_name;
#define dump_base_name global_options.x_dump_base_name
#endif
#ifdef GENERATOR_FILE
extern const char *dump_dir_name;
#else
  const char *x_dump_dir_name;
#define dump_dir_name global_options.x_dump_dir_name
#endif
#ifdef GENERATOR_FILE
extern int flag_pic;
#else
  int x_flag_pic;
#define flag_pic global_options.x_flag_pic
#endif
#ifdef GENERATOR_FILE
extern int flag_pie;
#else
  int x_flag_pie;
#define flag_pie global_options.x_flag_pie
#endif
#ifdef GENERATOR_FILE
extern int flag_abi_compat_version;
#else
  int x_flag_abi_compat_version;
#define flag_abi_compat_version global_options.x_flag_abi_compat_version
#endif
#ifdef GENERATOR_FILE
extern int flag_abi_version;
#else
  int x_flag_abi_version;
#define flag_abi_version global_options.x_flag_abi_version
#endif
#ifdef GENERATOR_FILE
extern int flag_access_control;
#else
  int x_flag_access_control;
#define flag_access_control global_options.x_flag_access_control
#endif
#ifdef GENERATOR_FILE
extern const char *ada_specs_parent;
#else
  const char *x_ada_specs_parent;
#define ada_specs_parent global_options.x_ada_specs_parent
#endif
#ifdef GENERATOR_FILE
extern int flag_aggressive_function_elimination;
#else
  int x_flag_aggressive_function_elimination;
#define flag_aggressive_function_elimination global_options.x_flag_aggressive_function_elimination
#endif
#ifdef GENERATOR_FILE
extern int flag_aggressive_loop_optimizations;
#else
  int x_flag_aggressive_loop_optimizations;
#define flag_aggressive_loop_optimizations global_options.x_flag_aggressive_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_align_commons;
#else
  int x_flag_align_commons;
#define flag_align_commons global_options.x_flag_align_commons
#endif
#ifdef GENERATOR_FILE
extern int flag_align_functions;
#else
  int x_flag_align_functions;
#define flag_align_functions global_options.x_flag_align_functions
#endif
#ifdef GENERATOR_FILE
extern const char *str_align_functions;
#else
  const char *x_str_align_functions;
#define str_align_functions global_options.x_str_align_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_align_jumps;
#else
  int x_flag_align_jumps;
#define flag_align_jumps global_options.x_flag_align_jumps
#endif
#ifdef GENERATOR_FILE
extern const char *str_align_jumps;
#else
  const char *x_str_align_jumps;
#define str_align_jumps global_options.x_str_align_jumps
#endif
#ifdef GENERATOR_FILE
extern int flag_align_labels;
#else
  int x_flag_align_labels;
#define flag_align_labels global_options.x_flag_align_labels
#endif
#ifdef GENERATOR_FILE
extern const char *str_align_labels;
#else
  const char *x_str_align_labels;
#define str_align_labels global_options.x_str_align_labels
#endif
#ifdef GENERATOR_FILE
extern int flag_align_loops;
#else
  int x_flag_align_loops;
#define flag_align_loops global_options.x_flag_align_loops
#endif
#ifdef GENERATOR_FILE
extern const char *str_align_loops;
#else
  const char *x_str_align_loops;
#define str_align_loops global_options.x_str_align_loops
#endif
#ifdef GENERATOR_FILE
extern int aligned_new_threshold;
#else
  int x_aligned_new_threshold;
#define aligned_new_threshold global_options.x_aligned_new_threshold
#endif
#ifdef GENERATOR_FILE
extern int flag_all_intrinsics;
#else
  int x_flag_all_intrinsics;
#define flag_all_intrinsics global_options.x_flag_all_intrinsics
#endif
#ifdef GENERATOR_FILE
extern int flag_allocation_dce;
#else
  int x_flag_allocation_dce;
#define flag_allocation_dce global_options.x_flag_allocation_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_allow_argument_mismatch;
#else
  int x_flag_allow_argument_mismatch;
#define flag_allow_argument_mismatch global_options.x_flag_allow_argument_mismatch
#endif
#ifdef GENERATOR_FILE
extern int flag_allow_invalid_boz;
#else
  int x_flag_allow_invalid_boz;
#define flag_allow_invalid_boz global_options.x_flag_allow_invalid_boz
#endif
#ifdef GENERATOR_FILE
extern int flag_allow_leading_underscore;
#else
  int x_flag_allow_leading_underscore;
#define flag_allow_leading_underscore global_options.x_flag_allow_leading_underscore
#endif
#ifdef GENERATOR_FILE
extern int flag_allow_parameterless_variadic_functions;
#else
  int x_flag_allow_parameterless_variadic_functions;
#define flag_allow_parameterless_variadic_functions global_options.x_flag_allow_parameterless_variadic_functions
#endif
#ifdef GENERATOR_FILE
extern void *common_deferred_options;
#else
  void *x_common_deferred_options;
#define common_deferred_options global_options.x_common_deferred_options
#endif
#ifdef GENERATOR_FILE
extern int flag_no_asm;
#else
  int x_flag_no_asm;
#define flag_no_asm global_options.x_flag_no_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_assert;
#else
  int x_flag_assert;
#define flag_assert global_options.x_flag_assert
#endif
#ifdef GENERATOR_FILE
extern int flag_associative_math;
#else
  int x_flag_associative_math;
#define flag_associative_math global_options.x_flag_associative_math
#endif
#ifdef GENERATOR_FILE
extern int flag_assume_phsa;
#else
  int x_flag_assume_phsa;
#define flag_assume_phsa global_options.x_flag_assume_phsa
#endif
#ifdef GENERATOR_FILE
extern int flag_asynchronous_unwind_tables;
#else
  int x_flag_asynchronous_unwind_tables;
#define flag_asynchronous_unwind_tables global_options.x_flag_asynchronous_unwind_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_auto_inc_dec;
#else
  int x_flag_auto_inc_dec;
#define flag_auto_inc_dec global_options.x_flag_auto_inc_dec
#endif
#ifdef GENERATOR_FILE
extern int flag_auto_profile;
#else
  int x_flag_auto_profile;
#define flag_auto_profile global_options.x_flag_auto_profile
#endif
#ifdef GENERATOR_FILE
extern const char *auto_profile_file;
#else
  const char *x_auto_profile_file;
#define auto_profile_file global_options.x_auto_profile_file
#endif
#ifdef GENERATOR_FILE
extern int flag_automatic;
#else
  int x_flag_automatic;
#define flag_automatic global_options.x_flag_automatic
#endif
#ifdef GENERATOR_FILE
extern int flag_backslash;
#else
  int x_flag_backslash;
#define flag_backslash global_options.x_flag_backslash
#endif
#ifdef GENERATOR_FILE
extern int flag_backtrace;
#else
  int x_flag_backtrace;
#define flag_backtrace global_options.x_flag_backtrace
#endif
#ifdef GENERATOR_FILE
extern int flag_blas_matmul_limit;
#else
  int x_flag_blas_matmul_limit;
#define flag_blas_matmul_limit global_options.x_flag_blas_matmul_limit
#endif
#ifdef GENERATOR_FILE
extern int flag_bounds_check;
#else
  int x_flag_bounds_check;
#define flag_bounds_check global_options.x_flag_bounds_check
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_on_count_reg;
#else
  int x_flag_branch_on_count_reg;
#define flag_branch_on_count_reg global_options.x_flag_branch_on_count_reg
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_probabilities;
#else
  int x_flag_branch_probabilities;
#define flag_branch_probabilities global_options.x_flag_branch_probabilities
#endif
#ifdef GENERATOR_FILE
extern int flag_building_libgcc;
#else
  int x_flag_building_libgcc;
#define flag_building_libgcc global_options.x_flag_building_libgcc
#endif
#ifdef GENERATOR_FILE
extern int flag_building_libphobos_tests;
#else
  int x_flag_building_libphobos_tests;
#define flag_building_libphobos_tests global_options.x_flag_building_libphobos_tests
#endif
#ifdef GENERATOR_FILE
extern int flag_no_builtin;
#else
  int x_flag_no_builtin;
#define flag_no_builtin global_options.x_flag_no_builtin
#endif
#ifdef GENERATOR_FILE
extern int flag_c_prototypes;
#else
  int x_flag_c_prototypes;
#define flag_c_prototypes global_options.x_flag_c_prototypes
#endif
#ifdef GENERATOR_FILE
extern int flag_c_prototypes_external;
#else
  int x_flag_c_prototypes_external;
#define flag_c_prototypes_external global_options.x_flag_c_prototypes_external
#endif
#ifdef GENERATOR_FILE
extern int flag_caller_saves;
#else
  int x_flag_caller_saves;
#define flag_caller_saves global_options.x_flag_caller_saves
#endif
#ifdef GENERATOR_FILE
extern enum cf_protection_level flag_cf_protection;
#else
  enum cf_protection_level x_flag_cf_protection;
#define flag_cf_protection global_options.x_flag_cf_protection
#endif
#ifdef GENERATOR_FILE
extern int flag_char8_t;
#else
  int x_flag_char8_t;
#define flag_char8_t global_options.x_flag_char8_t
#endif
#ifdef GENERATOR_FILE
extern int flag_check_new;
#else
  int x_flag_check_new;
#define flag_check_new global_options.x_flag_check_new
#endif
#ifdef GENERATOR_FILE
extern int flag_checking;
#else
  int x_flag_checking;
#define flag_checking global_options.x_flag_checking
#endif
#ifdef GENERATOR_FILE
extern enum gfc_fcoarray flag_coarray;
#else
  enum gfc_fcoarray x_flag_coarray;
#define flag_coarray global_options.x_flag_coarray
#endif
#ifdef GENERATOR_FILE
extern int flag_code_hoisting;
#else
  int x_flag_code_hoisting;
#define flag_code_hoisting global_options.x_flag_code_hoisting
#endif
#ifdef GENERATOR_FILE
extern int flag_combine_stack_adjustments;
#else
  int x_flag_combine_stack_adjustments;
#define flag_combine_stack_adjustments global_options.x_flag_combine_stack_adjustments
#endif
#ifdef GENERATOR_FILE
extern int flag_no_common;
#else
  int x_flag_no_common;
#define flag_no_common global_options.x_flag_no_common
#endif
#ifdef GENERATOR_FILE
extern int flag_compare_debug;
#else
  int x_flag_compare_debug;
#define flag_compare_debug global_options.x_flag_compare_debug
#endif
#ifdef GENERATOR_FILE
extern const char *flag_compare_debug_opt;
#else
  const char *x_flag_compare_debug_opt;
#define flag_compare_debug_opt global_options.x_flag_compare_debug_opt
#endif
#ifdef GENERATOR_FILE
extern int flag_compare_elim_after_reload;
#else
  int x_flag_compare_elim_after_reload;
#define flag_compare_elim_after_reload global_options.x_flag_compare_elim_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_concepts;
#else
  int x_flag_concepts;
#define flag_concepts global_options.x_flag_concepts
#endif
#ifdef GENERATOR_FILE
extern int flag_conserve_stack;
#else
  int x_flag_conserve_stack;
#define flag_conserve_stack global_options.x_flag_conserve_stack
#endif
#ifdef GENERATOR_FILE
extern int constexpr_cache_depth;
#else
  int x_constexpr_cache_depth;
#define constexpr_cache_depth global_options.x_constexpr_cache_depth
#endif
#ifdef GENERATOR_FILE
extern int max_constexpr_depth;
#else
  int x_max_constexpr_depth;
#define max_constexpr_depth global_options.x_max_constexpr_depth
#endif
#ifdef GENERATOR_FILE
extern int constexpr_loop_limit;
#else
  int x_constexpr_loop_limit;
#define constexpr_loop_limit global_options.x_constexpr_loop_limit
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT constexpr_ops_limit;
#else
  HOST_WIDE_INT x_constexpr_ops_limit;
#define constexpr_ops_limit global_options.x_constexpr_ops_limit
#endif
#ifdef GENERATOR_FILE
extern enum gfc_convert flag_convert;
#else
  enum gfc_convert x_flag_convert;
#define flag_convert global_options.x_flag_convert
#endif
#ifdef GENERATOR_FILE
extern int flag_cprop_registers;
#else
  int x_flag_cprop_registers;
#define flag_cprop_registers global_options.x_flag_cprop_registers
#endif
#ifdef GENERATOR_FILE
extern int flag_cray_pointer;
#else
  int x_flag_cray_pointer;
#define flag_cray_pointer global_options.x_flag_cray_pointer
#endif
#ifdef GENERATOR_FILE
extern int flag_crossjumping;
#else
  int x_flag_crossjumping;
#define flag_crossjumping global_options.x_flag_crossjumping
#endif
#ifdef GENERATOR_FILE
extern int flag_cse_follow_jumps;
#else
  int x_flag_cse_follow_jumps;
#define flag_cse_follow_jumps global_options.x_flag_cse_follow_jumps
#endif
#ifdef GENERATOR_FILE
extern int flag_cx_fortran_rules;
#else
  int x_flag_cx_fortran_rules;
#define flag_cx_fortran_rules global_options.x_flag_cx_fortran_rules
#endif
#ifdef GENERATOR_FILE
extern int flag_cx_limited_range;
#else
  int x_flag_cx_limited_range;
#define flag_cx_limited_range global_options.x_flag_cx_limited_range
#endif
#ifdef GENERATOR_FILE
extern int flag_data_sections;
#else
  int x_flag_data_sections;
#define flag_data_sections global_options.x_flag_data_sections
#endif
#ifdef GENERATOR_FILE
extern int flag_dce;
#else
  int x_flag_dce;
#define flag_dce global_options.x_flag_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_types_section;
#else
  int x_flag_debug_types_section;
#define flag_debug_types_section global_options.x_flag_debug_types_section
#endif
#ifdef GENERATOR_FILE
extern int flag_dec;
#else
  int x_flag_dec;
#define flag_dec global_options.x_flag_dec
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_blank_format_item;
#else
  int x_flag_dec_blank_format_item;
#define flag_dec_blank_format_item global_options.x_flag_dec_blank_format_item
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_format_defaults;
#else
  int x_flag_dec_format_defaults;
#define flag_dec_format_defaults global_options.x_flag_dec_format_defaults
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_include;
#else
  int x_flag_dec_include;
#define flag_dec_include global_options.x_flag_dec_include
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_intrinsic_ints;
#else
  int x_flag_dec_intrinsic_ints;
#define flag_dec_intrinsic_ints global_options.x_flag_dec_intrinsic_ints
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_math;
#else
  int x_flag_dec_math;
#define flag_dec_math global_options.x_flag_dec_math
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_static;
#else
  int x_flag_dec_static;
#define flag_dec_static global_options.x_flag_dec_static
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_structure;
#else
  int x_flag_dec_structure;
#define flag_dec_structure global_options.x_flag_dec_structure
#endif
#ifdef GENERATOR_FILE
extern int flag_declone_ctor_dtor;
#else
  int x_flag_declone_ctor_dtor;
#define flag_declone_ctor_dtor global_options.x_flag_declone_ctor_dtor
#endif
#ifdef GENERATOR_FILE
extern int flag_default_double;
#else
  int x_flag_default_double;
#define flag_default_double global_options.x_flag_default_double
#endif
#ifdef GENERATOR_FILE
extern int flag_default_integer;
#else
  int x_flag_default_integer;
#define flag_default_integer global_options.x_flag_default_integer
#endif
#ifdef GENERATOR_FILE
extern int flag_default_real_10;
#else
  int x_flag_default_real_10;
#define flag_default_real_10 global_options.x_flag_default_real_10
#endif
#ifdef GENERATOR_FILE
extern int flag_default_real_16;
#else
  int x_flag_default_real_16;
#define flag_default_real_16 global_options.x_flag_default_real_16
#endif
#ifdef GENERATOR_FILE
extern int flag_default_real_8;
#else
  int x_flag_default_real_8;
#define flag_default_real_8 global_options.x_flag_default_real_8
#endif
#ifdef GENERATOR_FILE
extern int flag_defer_pop;
#else
  int x_flag_defer_pop;
#define flag_defer_pop global_options.x_flag_defer_pop
#endif
#ifdef GENERATOR_FILE
extern int flag_delayed_branch;
#else
  int x_flag_delayed_branch;
#define flag_delayed_branch global_options.x_flag_delayed_branch
#endif
#ifdef GENERATOR_FILE
extern int flag_delete_dead_exceptions;
#else
  int x_flag_delete_dead_exceptions;
#define flag_delete_dead_exceptions global_options.x_flag_delete_dead_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_delete_null_pointer_checks;
#else
  int x_flag_delete_null_pointer_checks;
#define flag_delete_null_pointer_checks global_options.x_flag_delete_null_pointer_checks
#endif
#ifdef GENERATOR_FILE
extern int flag_devirtualize;
#else
  int x_flag_devirtualize;
#define flag_devirtualize global_options.x_flag_devirtualize
#endif
#ifdef GENERATOR_FILE
extern int flag_ltrans_devirtualize;
#else
  int x_flag_ltrans_devirtualize;
#define flag_ltrans_devirtualize global_options.x_flag_ltrans_devirtualize
#endif
#ifdef GENERATOR_FILE
extern int flag_devirtualize_speculatively;
#else
  int x_flag_devirtualize_speculatively;
#define flag_devirtualize_speculatively global_options.x_flag_devirtualize_speculatively
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_color;
#else
  int x_flag_diagnostics_show_color;
#define flag_diagnostics_show_color global_options.x_flag_diagnostics_show_color
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_generate_patch;
#else
  int x_flag_diagnostics_generate_patch;
#define flag_diagnostics_generate_patch global_options.x_flag_diagnostics_generate_patch
#endif
#ifdef GENERATOR_FILE
extern int diagnostics_minimum_margin_width;
#else
  int x_diagnostics_minimum_margin_width;
#define diagnostics_minimum_margin_width global_options.x_diagnostics_minimum_margin_width
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_parseable_fixits;
#else
  int x_flag_diagnostics_parseable_fixits;
#define flag_diagnostics_parseable_fixits global_options.x_flag_diagnostics_parseable_fixits
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_caret;
#else
  int x_flag_diagnostics_show_caret;
#define flag_diagnostics_show_caret global_options.x_flag_diagnostics_show_caret
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_labels;
#else
  int x_flag_diagnostics_show_labels;
#define flag_diagnostics_show_labels global_options.x_flag_diagnostics_show_labels
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_line_numbers;
#else
  int x_flag_diagnostics_show_line_numbers;
#define flag_diagnostics_show_line_numbers global_options.x_flag_diagnostics_show_line_numbers
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_option;
#else
  int x_flag_diagnostics_show_option;
#define flag_diagnostics_show_option global_options.x_flag_diagnostics_show_option
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_template_tree;
#else
  int x_flag_diagnostics_show_template_tree;
#define flag_diagnostics_show_template_tree global_options.x_flag_diagnostics_show_template_tree
#endif
#ifdef GENERATOR_FILE
extern int flag_dollar_ok;
#else
  int x_flag_dollar_ok;
#define flag_dollar_ok global_options.x_flag_dollar_ok
#endif
#ifdef GENERATOR_FILE
extern int flag_dse;
#else
  int x_flag_dse;
#define flag_dse global_options.x_flag_dse
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_ada_spec;
#else
  int x_flag_dump_ada_spec;
#define flag_dump_ada_spec global_options.x_flag_dump_ada_spec
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_ada_spec_slim;
#else
  int x_flag_dump_ada_spec_slim;
#define flag_dump_ada_spec_slim global_options.x_flag_dump_ada_spec_slim
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_final_insns;
#else
  const char *x_flag_dump_final_insns;
#define flag_dump_final_insns global_options.x_flag_dump_final_insns
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_fortran_global;
#else
  int x_flag_dump_fortran_global;
#define flag_dump_fortran_global global_options.x_flag_dump_fortran_global
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_fortran_optimized;
#else
  int x_flag_dump_fortran_optimized;
#define flag_dump_fortran_optimized global_options.x_flag_dump_fortran_optimized
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_fortran_original;
#else
  int x_flag_dump_fortran_original;
#define flag_dump_fortran_original global_options.x_flag_dump_fortran_original
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_go_spec;
#else
  const char *x_flag_dump_go_spec;
#define flag_dump_go_spec global_options.x_flag_dump_go_spec
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_locations;
#else
  int x_flag_dump_locations;
#define flag_dump_locations global_options.x_flag_dump_locations
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_noaddr;
#else
  int x_flag_dump_noaddr;
#define flag_dump_noaddr global_options.x_flag_dump_noaddr
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_passes;
#else
  int x_flag_dump_passes;
#define flag_dump_passes global_options.x_flag_dump_passes
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_scos;
#else
  int x_flag_dump_scos;
#define flag_dump_scos global_options.x_flag_dump_scos
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_unnumbered;
#else
  int x_flag_dump_unnumbered;
#define flag_dump_unnumbered global_options.x_flag_dump_unnumbered
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_unnumbered_links;
#else
  int x_flag_dump_unnumbered_links;
#define flag_dump_unnumbered_links global_options.x_flag_dump_unnumbered_links
#endif
#ifdef GENERATOR_FILE
extern int flag_dwarf2_cfi_asm;
#else
  int x_flag_dwarf2_cfi_asm;
#define flag_dwarf2_cfi_asm global_options.x_flag_dwarf2_cfi_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_early_inlining;
#else
  int x_flag_early_inlining;
#define flag_early_inlining global_options.x_flag_early_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_elide_constructors;
#else
  int x_flag_elide_constructors;
#define flag_elide_constructors global_options.x_flag_elide_constructors
#endif
#ifdef GENERATOR_FILE
extern int flag_elide_type;
#else
  int x_flag_elide_type;
#define flag_elide_type global_options.x_flag_elide_type
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_only_used_symbols;
#else
  int x_flag_debug_only_used_symbols;
#define flag_debug_only_used_symbols global_options.x_flag_debug_only_used_symbols
#endif
#ifdef GENERATOR_FILE
extern int flag_eliminate_unused_debug_types;
#else
  int x_flag_eliminate_unused_debug_types;
#define flag_eliminate_unused_debug_types global_options.x_flag_eliminate_unused_debug_types
#endif
#ifdef GENERATOR_FILE
extern int flag_emit_class_debug_always;
#else
  int x_flag_emit_class_debug_always;
#define flag_emit_class_debug_always global_options.x_flag_emit_class_debug_always
#endif
#ifdef GENERATOR_FILE
extern int flag_enforce_eh_specs;
#else
  int x_flag_enforce_eh_specs;
#define flag_enforce_eh_specs global_options.x_flag_enforce_eh_specs
#endif
#ifdef GENERATOR_FILE
extern int flag_exceptions;
#else
  int x_flag_exceptions;
#define flag_exceptions global_options.x_flag_exceptions
#endif
#ifdef GENERATOR_FILE
extern enum excess_precision flag_excess_precision;
#else
  enum excess_precision x_flag_excess_precision;
#define flag_excess_precision global_options.x_flag_excess_precision
#endif
#ifdef GENERATOR_FILE
extern int flag_expensive_optimizations;
#else
  int x_flag_expensive_optimizations;
#define flag_expensive_optimizations global_options.x_flag_expensive_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_ext_numeric_literals;
#else
  int x_flag_ext_numeric_literals;
#define flag_ext_numeric_literals global_options.x_flag_ext_numeric_literals
#endif
#ifdef GENERATOR_FILE
extern int flag_extern_tls_init;
#else
  int x_flag_extern_tls_init;
#define flag_extern_tls_init global_options.x_flag_extern_tls_init
#endif
#ifdef GENERATOR_FILE
extern int flag_external_blas;
#else
  int x_flag_external_blas;
#define flag_external_blas global_options.x_flag_external_blas
#endif
#ifdef GENERATOR_FILE
extern int flag_f2c;
#else
  int x_flag_f2c;
#define flag_f2c global_options.x_flag_f2c
#endif
#ifdef GENERATOR_FILE
extern int flag_fat_lto_objects;
#else
  int x_flag_fat_lto_objects;
#define flag_fat_lto_objects global_options.x_flag_fat_lto_objects
#endif
#ifdef GENERATOR_FILE
extern int flag_finite_loops;
#else
  int x_flag_finite_loops;
#define flag_finite_loops global_options.x_flag_finite_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_finite_math_only;
#else
  int x_flag_finite_math_only;
#define flag_finite_math_only global_options.x_flag_finite_math_only
#endif
#ifdef GENERATOR_FILE
extern int flag_fixed_line_length;
#else
  int x_flag_fixed_line_length;
#define flag_fixed_line_length global_options.x_flag_fixed_line_length
#endif
#ifdef GENERATOR_FILE
extern int flag_float_store;
#else
  int x_flag_float_store;
#define flag_float_store global_options.x_flag_float_store
#endif
#ifdef GENERATOR_FILE
extern int flag_forward_propagate;
#else
  int x_flag_forward_propagate;
#define flag_forward_propagate global_options.x_flag_forward_propagate
#endif
#ifdef GENERATOR_FILE
extern enum fp_contract_mode flag_fp_contract_mode;
#else
  enum fp_contract_mode x_flag_fp_contract_mode;
#define flag_fp_contract_mode global_options.x_flag_fp_contract_mode
#endif
#ifdef GENERATOR_FILE
extern int flag_fp_int_builtin_inexact;
#else
  int x_flag_fp_int_builtin_inexact;
#define flag_fp_int_builtin_inexact global_options.x_flag_fp_int_builtin_inexact
#endif
#ifdef GENERATOR_FILE
extern int flag_free_line_length;
#else
  int x_flag_free_line_length;
#define flag_free_line_length global_options.x_flag_free_line_length
#endif
#ifdef GENERATOR_FILE
extern int flag_frontend_loop_interchange;
#else
  int x_flag_frontend_loop_interchange;
#define flag_frontend_loop_interchange global_options.x_flag_frontend_loop_interchange
#endif
#ifdef GENERATOR_FILE
extern int flag_frontend_optimize;
#else
  int x_flag_frontend_optimize;
#define flag_frontend_optimize global_options.x_flag_frontend_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_no_function_cse;
#else
  int x_flag_no_function_cse;
#define flag_no_function_cse global_options.x_flag_no_function_cse
#endif
#ifdef GENERATOR_FILE
extern int flag_function_sections;
#else
  int x_flag_function_sections;
#define flag_function_sections global_options.x_flag_function_sections
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse;
#else
  int x_flag_gcse;
#define flag_gcse global_options.x_flag_gcse
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_after_reload;
#else
  int x_flag_gcse_after_reload;
#define flag_gcse_after_reload global_options.x_flag_gcse_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_las;
#else
  int x_flag_gcse_las;
#define flag_gcse_las global_options.x_flag_gcse_las
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_lm;
#else
  int x_flag_gcse_lm;
#define flag_gcse_lm global_options.x_flag_gcse_lm
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_sm;
#else
  int x_flag_gcse_sm;
#define flag_gcse_sm global_options.x_flag_gcse_sm
#endif
#ifdef GENERATOR_FILE
extern int flag_gimple;
#else
  int x_flag_gimple;
#define flag_gimple global_options.x_flag_gimple
#endif
#ifdef GENERATOR_FILE
extern int flag_no_gnu_keywords;
#else
  int x_flag_no_gnu_keywords;
#define flag_no_gnu_keywords global_options.x_flag_no_gnu_keywords
#endif
#ifdef GENERATOR_FILE
extern int flag_next_runtime;
#else
  int x_flag_next_runtime;
#define flag_next_runtime global_options.x_flag_next_runtime
#endif
#ifdef GENERATOR_FILE
extern int flag_tm;
#else
  int x_flag_tm;
#define flag_tm global_options.x_flag_tm
#endif
#ifdef GENERATOR_FILE
extern int flag_gnu_unique;
#else
  int x_flag_gnu_unique;
#define flag_gnu_unique global_options.x_flag_gnu_unique
#endif
#ifdef GENERATOR_FILE
extern int flag_gnu89_inline;
#else
  int x_flag_gnu89_inline;
#define flag_gnu89_inline global_options.x_flag_gnu89_inline
#endif
#ifdef GENERATOR_FILE
extern int go_check_divide_overflow;
#else
  int x_go_check_divide_overflow;
#define go_check_divide_overflow global_options.x_go_check_divide_overflow
#endif
#ifdef GENERATOR_FILE
extern int go_check_divide_zero;
#else
  int x_go_check_divide_zero;
#define go_check_divide_zero global_options.x_go_check_divide_zero
#endif
#ifdef GENERATOR_FILE
extern int go_compiling_runtime;
#else
  int x_go_compiling_runtime;
#define go_compiling_runtime global_options.x_go_compiling_runtime
#endif
#ifdef GENERATOR_FILE
extern int go_debug_escape_level;
#else
  int x_go_debug_escape_level;
#define go_debug_escape_level global_options.x_go_debug_escape_level
#endif
#ifdef GENERATOR_FILE
extern const char *go_debug_escape_hash;
#else
  const char *x_go_debug_escape_hash;
#define go_debug_escape_hash global_options.x_go_debug_escape_hash
#endif
#ifdef GENERATOR_FILE
extern int go_debug_optimization;
#else
  int x_go_debug_optimization;
#define go_debug_optimization global_options.x_go_debug_optimization
#endif
#ifdef GENERATOR_FILE
extern int flag_graphite;
#else
  int x_flag_graphite;
#define flag_graphite global_options.x_flag_graphite
#endif
#ifdef GENERATOR_FILE
extern int flag_graphite_identity;
#else
  int x_flag_graphite_identity;
#define flag_graphite_identity global_options.x_flag_graphite_identity
#endif
#ifdef GENERATOR_FILE
extern int flag_guess_branch_prob;
#else
  int x_flag_guess_branch_prob;
#define flag_guess_branch_prob global_options.x_flag_guess_branch_prob
#endif
#ifdef GENERATOR_FILE
extern int flag_hoist_adjacent_loads;
#else
  int x_flag_hoist_adjacent_loads;
#define flag_hoist_adjacent_loads global_options.x_flag_hoist_adjacent_loads
#endif
#ifdef GENERATOR_FILE
extern int flag_no_ident;
#else
  int x_flag_no_ident;
#define flag_no_ident global_options.x_flag_no_ident
#endif
#ifdef GENERATOR_FILE
extern int flag_if_conversion;
#else
  int x_flag_if_conversion;
#define flag_if_conversion global_options.x_flag_if_conversion
#endif
#ifdef GENERATOR_FILE
extern int flag_if_conversion2;
#else
  int x_flag_if_conversion2;
#define flag_if_conversion2 global_options.x_flag_if_conversion2
#endif
#ifdef GENERATOR_FILE
extern int flag_implement_inlines;
#else
  int x_flag_implement_inlines;
#define flag_implement_inlines global_options.x_flag_implement_inlines
#endif
#ifdef GENERATOR_FILE
extern int flag_implicit_inline_templates;
#else
  int x_flag_implicit_inline_templates;
#define flag_implicit_inline_templates global_options.x_flag_implicit_inline_templates
#endif
#ifdef GENERATOR_FILE
extern int flag_implicit_none;
#else
  int x_flag_implicit_none;
#define flag_implicit_none global_options.x_flag_implicit_none
#endif
#ifdef GENERATOR_FILE
extern int flag_implicit_templates;
#else
  int x_flag_implicit_templates;
#define flag_implicit_templates global_options.x_flag_implicit_templates
#endif
#ifdef GENERATOR_FILE
extern int flag_indirect_inlining;
#else
  int x_flag_indirect_inlining;
#define flag_indirect_inlining global_options.x_flag_indirect_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_inhibit_size_directive;
#else
  int x_flag_inhibit_size_directive;
#define flag_inhibit_size_directive global_options.x_flag_inhibit_size_directive
#endif
#ifdef GENERATOR_FILE
extern int flag_init_derived;
#else
  int x_flag_init_derived;
#define flag_init_derived global_options.x_flag_init_derived
#endif
#ifdef GENERATOR_FILE
extern enum gfc_init_local_real flag_init_real;
#else
  enum gfc_init_local_real x_flag_init_real;
#define flag_init_real global_options.x_flag_init_real
#endif
#ifdef GENERATOR_FILE
extern int flag_no_inline;
#else
  int x_flag_no_inline;
#define flag_no_inline global_options.x_flag_no_inline
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_atomics;
#else
  int x_flag_inline_atomics;
#define flag_inline_atomics global_options.x_flag_inline_atomics
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_functions;
#else
  int x_flag_inline_functions;
#define flag_inline_functions global_options.x_flag_inline_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_functions_called_once;
#else
  int x_flag_inline_functions_called_once;
#define flag_inline_functions_called_once global_options.x_flag_inline_functions_called_once
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_matmul_limit;
#else
  int x_flag_inline_matmul_limit;
#define flag_inline_matmul_limit global_options.x_flag_inline_matmul_limit
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_small_functions;
#else
  int x_flag_inline_small_functions;
#define flag_inline_small_functions global_options.x_flag_inline_small_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_instrument_function_entry_exit;
#else
  int x_flag_instrument_function_entry_exit;
#define flag_instrument_function_entry_exit global_options.x_flag_instrument_function_entry_exit
#endif
#ifdef GENERATOR_FILE
extern int flag_integer4_kind;
#else
  int x_flag_integer4_kind;
#define flag_integer4_kind global_options.x_flag_integer4_kind
#endif
#ifdef GENERATOR_FILE
extern int flag_invariants;
#else
  int x_flag_invariants;
#define flag_invariants global_options.x_flag_invariants
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_bit_cp;
#else
  int x_flag_ipa_bit_cp;
#define flag_ipa_bit_cp global_options.x_flag_ipa_bit_cp
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_cp;
#else
  int x_flag_ipa_cp;
#define flag_ipa_cp global_options.x_flag_ipa_cp
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_cp_clone;
#else
  int x_flag_ipa_cp_clone;
#define flag_ipa_cp_clone global_options.x_flag_ipa_cp_clone
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_icf;
#else
  int x_flag_ipa_icf;
#define flag_ipa_icf global_options.x_flag_ipa_icf
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_icf_functions;
#else
  int x_flag_ipa_icf_functions;
#define flag_ipa_icf_functions global_options.x_flag_ipa_icf_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_icf_variables;
#else
  int x_flag_ipa_icf_variables;
#define flag_ipa_icf_variables global_options.x_flag_ipa_icf_variables
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_profile;
#else
  int x_flag_ipa_profile;
#define flag_ipa_profile global_options.x_flag_ipa_profile
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_pta;
#else
  int x_flag_ipa_pta;
#define flag_ipa_pta global_options.x_flag_ipa_pta
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_pure_const;
#else
  int x_flag_ipa_pure_const;
#define flag_ipa_pure_const global_options.x_flag_ipa_pure_const
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_ra;
#else
  int x_flag_ipa_ra;
#define flag_ipa_ra global_options.x_flag_ipa_ra
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_reference;
#else
  int x_flag_ipa_reference;
#define flag_ipa_reference global_options.x_flag_ipa_reference
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_reference_addressable;
#else
  int x_flag_ipa_reference_addressable;
#define flag_ipa_reference_addressable global_options.x_flag_ipa_reference_addressable
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_sra;
#else
  int x_flag_ipa_sra;
#define flag_ipa_sra global_options.x_flag_ipa_sra
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_stack_alignment;
#else
  int x_flag_ipa_stack_alignment;
#define flag_ipa_stack_alignment global_options.x_flag_ipa_stack_alignment
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_vrp;
#else
  int x_flag_ipa_vrp;
#define flag_ipa_vrp global_options.x_flag_ipa_vrp
#endif
#ifdef GENERATOR_FILE
extern enum ira_algorithm flag_ira_algorithm;
#else
  enum ira_algorithm x_flag_ira_algorithm;
#define flag_ira_algorithm global_options.x_flag_ira_algorithm
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_hoist_pressure;
#else
  int x_flag_ira_hoist_pressure;
#define flag_ira_hoist_pressure global_options.x_flag_ira_hoist_pressure
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_loop_pressure;
#else
  int x_flag_ira_loop_pressure;
#define flag_ira_loop_pressure global_options.x_flag_ira_loop_pressure
#endif
#ifdef GENERATOR_FILE
extern enum ira_region flag_ira_region;
#else
  enum ira_region x_flag_ira_region;
#define flag_ira_region global_options.x_flag_ira_region
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_share_save_slots;
#else
  int x_flag_ira_share_save_slots;
#define flag_ira_share_save_slots global_options.x_flag_ira_share_save_slots
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_share_spill_slots;
#else
  int x_flag_ira_share_spill_slots;
#define flag_ira_share_spill_slots global_options.x_flag_ira_share_spill_slots
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_verbose;
#else
  int x_flag_ira_verbose;
#define flag_ira_verbose global_options.x_flag_ira_verbose
#endif
#ifdef GENERATOR_FILE
extern int flag_isolate_erroneous_paths_attribute;
#else
  int x_flag_isolate_erroneous_paths_attribute;
#define flag_isolate_erroneous_paths_attribute global_options.x_flag_isolate_erroneous_paths_attribute
#endif
#ifdef GENERATOR_FILE
extern int flag_isolate_erroneous_paths_dereference;
#else
  int x_flag_isolate_erroneous_paths_dereference;
#define flag_isolate_erroneous_paths_dereference global_options.x_flag_isolate_erroneous_paths_dereference
#endif
#ifdef GENERATOR_FILE
extern enum ivar_visibility default_ivar_visibility;
#else
  enum ivar_visibility x_default_ivar_visibility;
#define default_ivar_visibility global_options.x_default_ivar_visibility
#endif
#ifdef GENERATOR_FILE
extern int flag_ivopts;
#else
  int x_flag_ivopts;
#define flag_ivopts global_options.x_flag_ivopts
#endif
#ifdef GENERATOR_FILE
extern int flag_jump_tables;
#else
  int x_flag_jump_tables;
#define flag_jump_tables global_options.x_flag_jump_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_gc_roots_live;
#else
  int x_flag_keep_gc_roots_live;
#define flag_keep_gc_roots_live global_options.x_flag_keep_gc_roots_live
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_inline_dllexport;
#else
  int x_flag_keep_inline_dllexport;
#define flag_keep_inline_dllexport global_options.x_flag_keep_inline_dllexport
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_inline_functions;
#else
  int x_flag_keep_inline_functions;
#define flag_keep_inline_functions global_options.x_flag_keep_inline_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_static_consts;
#else
  int x_flag_keep_static_consts;
#define flag_keep_static_consts global_options.x_flag_keep_static_consts
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_static_functions;
#else
  int x_flag_keep_static_functions;
#define flag_keep_static_functions global_options.x_flag_keep_static_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_lax_vector_conversions;
#else
  int x_flag_lax_vector_conversions;
#define flag_lax_vector_conversions global_options.x_flag_lax_vector_conversions
#endif
#ifdef GENERATOR_FILE
extern int flag_leading_underscore;
#else
  int x_flag_leading_underscore;
#define flag_leading_underscore global_options.x_flag_leading_underscore
#endif
#ifdef GENERATOR_FILE
extern int flag_lifetime_dse;
#else
  int x_flag_lifetime_dse;
#define flag_lifetime_dse global_options.x_flag_lifetime_dse
#endif
#ifdef GENERATOR_FILE
extern int flag_limit_function_alignment;
#else
  int x_flag_limit_function_alignment;
#define flag_limit_function_alignment global_options.x_flag_limit_function_alignment
#endif
#ifdef GENERATOR_FILE
extern enum lto_linker_output flag_lto_linker_output;
#else
  enum lto_linker_output x_flag_lto_linker_output;
#define flag_lto_linker_output global_options.x_flag_lto_linker_output
#endif
#ifdef GENERATOR_FILE
extern enum live_patching_level flag_live_patching;
#else
  enum live_patching_level x_flag_live_patching;
#define flag_live_patching global_options.x_flag_live_patching
#endif
#ifdef GENERATOR_FILE
extern int flag_live_range_shrinkage;
#else
  int x_flag_live_range_shrinkage;
#define flag_live_range_shrinkage global_options.x_flag_live_range_shrinkage
#endif
#ifdef GENERATOR_FILE
extern int flag_local_ivars;
#else
  int x_flag_local_ivars;
#define flag_local_ivars global_options.x_flag_local_ivars
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_interchange;
#else
  int x_flag_loop_interchange;
#define flag_loop_interchange global_options.x_flag_loop_interchange
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_nest_optimize;
#else
  int x_flag_loop_nest_optimize;
#define flag_loop_nest_optimize global_options.x_flag_loop_nest_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_parallelize_all;
#else
  int x_flag_loop_parallelize_all;
#define flag_loop_parallelize_all global_options.x_flag_loop_parallelize_all
#endif
#ifdef GENERATOR_FILE
extern int flag_unroll_jam;
#else
  int x_flag_unroll_jam;
#define flag_unroll_jam global_options.x_flag_unroll_jam
#endif
#ifdef GENERATOR_FILE
extern int flag_lra_remat;
#else
  int x_flag_lra_remat;
#define flag_lra_remat global_options.x_flag_lra_remat
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_compression_level;
#else
  int x_flag_lto_compression_level;
#define flag_lto_compression_level global_options.x_flag_lto_compression_level
#endif
#ifdef GENERATOR_FILE
extern enum lto_partition_model flag_lto_partition;
#else
  enum lto_partition_model x_flag_lto_partition;
#define flag_lto_partition global_options.x_flag_lto_partition
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_report;
#else
  int x_flag_lto_report;
#define flag_lto_report global_options.x_flag_lto_report
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_report_wpa;
#else
  int x_flag_lto_report_wpa;
#define flag_lto_report_wpa global_options.x_flag_lto_report_wpa
#endif
#ifdef GENERATOR_FILE
extern const char *flag_lto;
#else
  const char *x_flag_lto;
#define flag_lto global_options.x_flag_lto
#endif
#ifdef GENERATOR_FILE
extern int flag_ltrans;
#else
  int x_flag_ltrans;
#define flag_ltrans global_options.x_flag_ltrans
#endif
#ifdef GENERATOR_FILE
extern const char *ltrans_output_list;
#else
  const char *x_ltrans_output_list;
#define ltrans_output_list global_options.x_ltrans_output_list
#endif
#ifdef GENERATOR_FILE
extern int flag_errno_math;
#else
  int x_flag_errno_math;
#define flag_errno_math global_options.x_flag_errno_math
#endif
#ifdef GENERATOR_FILE
extern int flag_max_array_constructor;
#else
  int x_flag_max_array_constructor;
#define flag_max_array_constructor global_options.x_flag_max_array_constructor
#endif
#ifdef GENERATOR_FILE
extern int flag_max_errors;
#else
  int x_flag_max_errors;
#define flag_max_errors global_options.x_flag_max_errors
#endif
#ifdef GENERATOR_FILE
extern int flag_max_stack_var_size;
#else
  int x_flag_max_stack_var_size;
#define flag_max_stack_var_size global_options.x_flag_max_stack_var_size
#endif
#ifdef GENERATOR_FILE
extern int flag_max_subrecord_length;
#else
  int x_flag_max_subrecord_length;
#define flag_max_subrecord_length global_options.x_flag_max_subrecord_length
#endif
#ifdef GENERATOR_FILE
extern int mem_report;
#else
  int x_mem_report;
#define mem_report global_options.x_mem_report
#endif
#ifdef GENERATOR_FILE
extern int mem_report_wpa;
#else
  int x_mem_report_wpa;
#define mem_report_wpa global_options.x_mem_report_wpa
#endif
#ifdef GENERATOR_FILE
extern int flag_merge_constants;
#else
  int x_flag_merge_constants;
#define flag_merge_constants global_options.x_flag_merge_constants
#endif
#ifdef GENERATOR_FILE
extern int flag_merge_debug_strings;
#else
  int x_flag_merge_debug_strings;
#define flag_merge_debug_strings global_options.x_flag_merge_debug_strings
#endif
#ifdef GENERATOR_FILE
extern int flag_module_private;
#else
  int x_flag_module_private;
#define flag_module_private global_options.x_flag_module_private
#endif
#ifdef GENERATOR_FILE
extern int flag_moduleinfo;
#else
  int x_flag_moduleinfo;
#define flag_moduleinfo global_options.x_flag_moduleinfo
#endif
#ifdef GENERATOR_FILE
extern int flag_modulo_sched;
#else
  int x_flag_modulo_sched;
#define flag_modulo_sched global_options.x_flag_modulo_sched
#endif
#ifdef GENERATOR_FILE
extern int flag_modulo_sched_allow_regmoves;
#else
  int x_flag_modulo_sched_allow_regmoves;
#define flag_modulo_sched_allow_regmoves global_options.x_flag_modulo_sched_allow_regmoves
#endif
#ifdef GENERATOR_FILE
extern int flag_move_loop_invariants;
#else
  int x_flag_move_loop_invariants;
#define flag_move_loop_invariants global_options.x_flag_move_loop_invariants
#endif
#ifdef GENERATOR_FILE
extern int flag_ms_extensions;
#else
  int x_flag_ms_extensions;
#define flag_ms_extensions global_options.x_flag_ms_extensions
#endif
#ifdef GENERATOR_FILE
extern int flag_new_inheriting_ctors;
#else
  int x_flag_new_inheriting_ctors;
#define flag_new_inheriting_ctors global_options.x_flag_new_inheriting_ctors
#endif
#ifdef GENERATOR_FILE
extern int flag_new_ttp;
#else
  int x_flag_new_ttp;
#define flag_new_ttp global_options.x_flag_new_ttp
#endif
#ifdef GENERATOR_FILE
extern int flag_nil_receivers;
#else
  int x_flag_nil_receivers;
#define flag_nil_receivers global_options.x_flag_nil_receivers
#endif
#ifdef GENERATOR_FILE
extern int flag_non_call_exceptions;
#else
  int x_flag_non_call_exceptions;
#define flag_non_call_exceptions global_options.x_flag_non_call_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_no_nonansi_builtin;
#else
  int x_flag_no_nonansi_builtin;
#define flag_no_nonansi_builtin global_options.x_flag_no_nonansi_builtin
#endif
#ifdef GENERATOR_FILE
extern int flag_nothrow_opt;
#else
  int x_flag_nothrow_opt;
#define flag_nothrow_opt global_options.x_flag_nothrow_opt
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_abi;
#else
  int x_flag_objc_abi;
#define flag_objc_abi global_options.x_flag_objc_abi
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_call_cxx_cdtors;
#else
  int x_flag_objc_call_cxx_cdtors;
#define flag_objc_call_cxx_cdtors global_options.x_flag_objc_call_cxx_cdtors
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_direct_dispatch;
#else
  int x_flag_objc_direct_dispatch;
#define flag_objc_direct_dispatch global_options.x_flag_objc_direct_dispatch
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_exceptions;
#else
  int x_flag_objc_exceptions;
#define flag_objc_exceptions global_options.x_flag_objc_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_gc;
#else
  int x_flag_objc_gc;
#define flag_objc_gc global_options.x_flag_objc_gc
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_nilcheck;
#else
  int x_flag_objc_nilcheck;
#define flag_objc_nilcheck global_options.x_flag_objc_nilcheck
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_sjlj_exceptions;
#else
  int x_flag_objc_sjlj_exceptions;
#define flag_objc_sjlj_exceptions global_options.x_flag_objc_sjlj_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_objc1_only;
#else
  int x_flag_objc1_only;
#define flag_objc1_only global_options.x_flag_objc1_only
#endif
#ifdef GENERATOR_FILE
extern enum offload_abi flag_offload_abi;
#else
  enum offload_abi x_flag_offload_abi;
#define flag_offload_abi global_options.x_flag_offload_abi
#endif
#ifdef GENERATOR_FILE
extern int flag_omit_frame_pointer;
#else
  int x_flag_omit_frame_pointer;
#define flag_omit_frame_pointer global_options.x_flag_omit_frame_pointer
#endif
#ifdef GENERATOR_FILE
extern int flag_openacc;
#else
  int x_flag_openacc;
#define flag_openacc global_options.x_flag_openacc
#endif
#ifdef GENERATOR_FILE
extern const char *flag_openacc_dims;
#else
  const char *x_flag_openacc_dims;
#define flag_openacc_dims global_options.x_flag_openacc_dims
#endif
#ifdef GENERATOR_FILE
extern int flag_openmp;
#else
  int x_flag_openmp;
#define flag_openmp global_options.x_flag_openmp
#endif
#ifdef GENERATOR_FILE
extern int flag_openmp_simd;
#else
  int x_flag_openmp_simd;
#define flag_openmp_simd global_options.x_flag_openmp_simd
#endif
#ifdef GENERATOR_FILE
extern int flag_opt_info;
#else
  int x_flag_opt_info;
#define flag_opt_info global_options.x_flag_opt_info
#endif
#ifdef GENERATOR_FILE
extern int flag_optimize_sibling_calls;
#else
  int x_flag_optimize_sibling_calls;
#define flag_optimize_sibling_calls global_options.x_flag_optimize_sibling_calls
#endif
#ifdef GENERATOR_FILE
extern int flag_optimize_strlen;
#else
  int x_flag_optimize_strlen;
#define flag_optimize_strlen global_options.x_flag_optimize_strlen
#endif
#ifdef GENERATOR_FILE
extern int flag_pack_derived;
#else
  int x_flag_pack_derived;
#define flag_pack_derived global_options.x_flag_pack_derived
#endif
#ifdef GENERATOR_FILE
extern int flag_pack_struct;
#else
  int x_flag_pack_struct;
#define flag_pack_struct global_options.x_flag_pack_struct
#endif
#ifdef GENERATOR_FILE
extern int flag_pad_source;
#else
  int x_flag_pad_source;
#define flag_pad_source global_options.x_flag_pad_source
#endif
#ifdef GENERATOR_FILE
extern int flag_partial_inlining;
#else
  int x_flag_partial_inlining;
#define flag_partial_inlining global_options.x_flag_partial_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_pcc_struct_return;
#else
  int x_flag_pcc_struct_return;
#define flag_pcc_struct_return global_options.x_flag_pcc_struct_return
#endif
#ifdef GENERATOR_FILE
extern int flag_peel_loops;
#else
  int x_flag_peel_loops;
#define flag_peel_loops global_options.x_flag_peel_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_no_peephole;
#else
  int x_flag_no_peephole;
#define flag_no_peephole global_options.x_flag_no_peephole
#endif
#ifdef GENERATOR_FILE
extern int flag_peephole2;
#else
  int x_flag_peephole2;
#define flag_peephole2 global_options.x_flag_peephole2
#endif
#ifdef GENERATOR_FILE
extern int flag_permissive;
#else
  int x_flag_permissive;
#define flag_permissive global_options.x_flag_permissive
#endif
#ifdef GENERATOR_FILE
extern enum permitted_flt_eval_methods flag_permitted_flt_eval_methods;
#else
  enum permitted_flt_eval_methods x_flag_permitted_flt_eval_methods;
#define flag_permitted_flt_eval_methods global_options.x_flag_permitted_flt_eval_methods
#endif
#ifdef GENERATOR_FILE
extern int flag_plan9_extensions;
#else
  int x_flag_plan9_extensions;
#define flag_plan9_extensions global_options.x_flag_plan9_extensions
#endif
#ifdef GENERATOR_FILE
extern int flag_plt;
#else
  int x_flag_plt;
#define flag_plt global_options.x_flag_plt
#endif
#ifdef GENERATOR_FILE
extern int post_ipa_mem_report;
#else
  int x_post_ipa_mem_report;
#define post_ipa_mem_report global_options.x_post_ipa_mem_report
#endif
#ifdef GENERATOR_FILE
extern int flag_postconditions;
#else
  int x_flag_postconditions;
#define flag_postconditions global_options.x_flag_postconditions
#endif
#ifdef GENERATOR_FILE
extern const char *flag_pre_include;
#else
  const char *x_flag_pre_include;
#define flag_pre_include global_options.x_flag_pre_include
#endif
#ifdef GENERATOR_FILE
extern int pre_ipa_mem_report;
#else
  int x_pre_ipa_mem_report;
#define pre_ipa_mem_report global_options.x_pre_ipa_mem_report
#endif
#ifdef GENERATOR_FILE
extern int flag_preconditions;
#else
  int x_flag_preconditions;
#define flag_preconditions global_options.x_flag_preconditions
#endif
#ifdef GENERATOR_FILE
extern int flag_predictive_commoning;
#else
  int x_flag_predictive_commoning;
#define flag_predictive_commoning global_options.x_flag_predictive_commoning
#endif
#ifdef GENERATOR_FILE
extern int flag_prefetch_loop_arrays;
#else
  int x_flag_prefetch_loop_arrays;
#define flag_prefetch_loop_arrays global_options.x_flag_prefetch_loop_arrays
#endif
#ifdef GENERATOR_FILE
extern int flag_pretty_templates;
#else
  int x_flag_pretty_templates;
#define flag_pretty_templates global_options.x_flag_pretty_templates
#endif
#ifdef GENERATOR_FILE
extern int flag_printf_return_value;
#else
  int x_flag_printf_return_value;
#define flag_printf_return_value global_options.x_flag_printf_return_value
#endif
#ifdef GENERATOR_FILE
extern int profile_flag;
#else
  int x_profile_flag;
#define profile_flag global_options.x_profile_flag
#endif
#ifdef GENERATOR_FILE
extern int profile_abs_path_flag;
#else
  int x_profile_abs_path_flag;
#define profile_abs_path_flag global_options.x_profile_abs_path_flag
#endif
#ifdef GENERATOR_FILE
extern int profile_arc_flag;
#else
  int x_profile_arc_flag;
#define profile_arc_flag global_options.x_profile_arc_flag
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_correction;
#else
  int x_flag_profile_correction;
#define flag_profile_correction global_options.x_flag_profile_correction
#endif
#ifdef GENERATOR_FILE
extern const char *profile_data_prefix;
#else
  const char *x_profile_data_prefix;
#define profile_data_prefix global_options.x_profile_data_prefix
#endif
#ifdef GENERATOR_FILE
extern const char *flag_profile_exclude_files;
#else
  const char *x_flag_profile_exclude_files;
#define flag_profile_exclude_files global_options.x_flag_profile_exclude_files
#endif
#ifdef GENERATOR_FILE
extern const char *flag_profile_filter_files;
#else
  const char *x_flag_profile_filter_files;
#define flag_profile_filter_files global_options.x_flag_profile_filter_files
#endif
#ifdef GENERATOR_FILE
extern const char *profile_note_location;
#else
  const char *x_profile_note_location;
#define profile_note_location global_options.x_profile_note_location
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_reorder_functions;
#else
  int x_flag_profile_reorder_functions;
#define flag_profile_reorder_functions global_options.x_flag_profile_reorder_functions
#endif
#ifdef GENERATOR_FILE
extern int profile_report;
#else
  int x_profile_report;
#define profile_report global_options.x_profile_report
#endif
#ifdef GENERATOR_FILE
extern enum profile_update flag_profile_update;
#else
  enum profile_update x_flag_profile_update;
#define flag_profile_update global_options.x_flag_profile_update
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_use;
#else
  int x_flag_profile_use;
#define flag_profile_use global_options.x_flag_profile_use
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_values;
#else
  int x_flag_profile_values;
#define flag_profile_values global_options.x_flag_profile_values
#endif
#ifdef GENERATOR_FILE
extern int flag_protect_parens;
#else
  int x_flag_protect_parens;
#define flag_protect_parens global_options.x_flag_protect_parens
#endif
#ifdef GENERATOR_FILE
extern int flag_range_check;
#else
  int x_flag_range_check;
#define flag_range_check global_options.x_flag_range_check
#endif
#ifdef GENERATOR_FILE
extern int flag_real4_kind;
#else
  int x_flag_real4_kind;
#define flag_real4_kind global_options.x_flag_real4_kind
#endif
#ifdef GENERATOR_FILE
extern int flag_real8_kind;
#else
  int x_flag_real8_kind;
#define flag_real8_kind global_options.x_flag_real8_kind
#endif
#ifdef GENERATOR_FILE
extern int flag_realloc_lhs;
#else
  int x_flag_realloc_lhs;
#define flag_realloc_lhs global_options.x_flag_realloc_lhs
#endif
#ifdef GENERATOR_FILE
extern int flag_reciprocal_math;
#else
  int x_flag_reciprocal_math;
#define flag_reciprocal_math global_options.x_flag_reciprocal_math
#endif
#ifdef GENERATOR_FILE
extern int flag_record_gcc_switches;
#else
  int x_flag_record_gcc_switches;
#define flag_record_gcc_switches global_options.x_flag_record_gcc_switches
#endif
#ifdef GENERATOR_FILE
extern int flag_record_marker;
#else
  int x_flag_record_marker;
#define flag_record_marker global_options.x_flag_record_marker
#endif
#ifdef GENERATOR_FILE
extern int flag_recursive;
#else
  int x_flag_recursive;
#define flag_recursive global_options.x_flag_recursive
#endif
#ifdef GENERATOR_FILE
extern int flag_ree;
#else
  int x_flag_ree;
#define flag_ree global_options.x_flag_ree
#endif
#ifdef GENERATOR_FILE
extern int flag_rename_registers;
#else
  int x_flag_rename_registers;
#define flag_rename_registers global_options.x_flag_rename_registers
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_blocks;
#else
  int x_flag_reorder_blocks;
#define flag_reorder_blocks global_options.x_flag_reorder_blocks
#endif
#ifdef GENERATOR_FILE
extern enum reorder_blocks_algorithm flag_reorder_blocks_algorithm;
#else
  enum reorder_blocks_algorithm x_flag_reorder_blocks_algorithm;
#define flag_reorder_blocks_algorithm global_options.x_flag_reorder_blocks_algorithm
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_blocks_and_partition;
#else
  int x_flag_reorder_blocks_and_partition;
#define flag_reorder_blocks_and_partition global_options.x_flag_reorder_blocks_and_partition
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_functions;
#else
  int x_flag_reorder_functions;
#define flag_reorder_functions global_options.x_flag_reorder_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_repack_arrays;
#else
  int x_flag_repack_arrays;
#define flag_repack_arrays global_options.x_flag_repack_arrays
#endif
#ifdef GENERATOR_FILE
extern int flag_replace_objc_classes;
#else
  int x_flag_replace_objc_classes;
#define flag_replace_objc_classes global_options.x_flag_replace_objc_classes
#endif
#ifdef GENERATOR_FILE
extern int flag_report_bug;
#else
  int x_flag_report_bug;
#define flag_report_bug global_options.x_flag_report_bug
#endif
#ifdef GENERATOR_FILE
extern int go_require_return_statement;
#else
  int x_go_require_return_statement;
#define go_require_return_statement global_options.x_go_require_return_statement
#endif
#ifdef GENERATOR_FILE
extern int flag_rerun_cse_after_loop;
#else
  int x_flag_rerun_cse_after_loop;
#define flag_rerun_cse_after_loop global_options.x_flag_rerun_cse_after_loop
#endif
#ifdef GENERATOR_FILE
extern int flag_resched_modulo_sched;
#else
  int x_flag_resched_modulo_sched;
#define flag_resched_modulo_sched global_options.x_flag_resched_modulo_sched
#endif
#ifdef GENERATOR_FILE
extern int flag_rounding_math;
#else
  int x_flag_rounding_math;
#define flag_rounding_math global_options.x_flag_rounding_math
#endif
#ifdef GENERATOR_FILE
extern int flag_rtti;
#else
  int x_flag_rtti;
#define flag_rtti global_options.x_flag_rtti
#endif
#ifdef GENERATOR_FILE
extern int flag_sanitize_address_use_after_scope;
#else
  int x_flag_sanitize_address_use_after_scope;
#define flag_sanitize_address_use_after_scope global_options.x_flag_sanitize_address_use_after_scope
#endif
#ifdef GENERATOR_FILE
extern int flag_sanitize_undefined_trap_on_error;
#else
  int x_flag_sanitize_undefined_trap_on_error;
#define flag_sanitize_undefined_trap_on_error global_options.x_flag_sanitize_undefined_trap_on_error
#endif
#ifdef GENERATOR_FILE
extern int flag_save_optimization_record;
#else
  int x_flag_save_optimization_record;
#define flag_save_optimization_record global_options.x_flag_save_optimization_record
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_critical_path_heuristic;
#else
  int x_flag_sched_critical_path_heuristic;
#define flag_sched_critical_path_heuristic global_options.x_flag_sched_critical_path_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_dep_count_heuristic;
#else
  int x_flag_sched_dep_count_heuristic;
#define flag_sched_dep_count_heuristic global_options.x_flag_sched_dep_count_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_group_heuristic;
#else
  int x_flag_sched_group_heuristic;
#define flag_sched_group_heuristic global_options.x_flag_sched_group_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_interblock;
#else
  int x_flag_schedule_interblock;
#define flag_schedule_interblock global_options.x_flag_schedule_interblock
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_last_insn_heuristic;
#else
  int x_flag_sched_last_insn_heuristic;
#define flag_sched_last_insn_heuristic global_options.x_flag_sched_last_insn_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_pressure;
#else
  int x_flag_sched_pressure;
#define flag_sched_pressure global_options.x_flag_sched_pressure
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_rank_heuristic;
#else
  int x_flag_sched_rank_heuristic;
#define flag_sched_rank_heuristic global_options.x_flag_sched_rank_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative;
#else
  int x_flag_schedule_speculative;
#define flag_schedule_speculative global_options.x_flag_schedule_speculative
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_spec_insn_heuristic;
#else
  int x_flag_sched_spec_insn_heuristic;
#define flag_sched_spec_insn_heuristic global_options.x_flag_sched_spec_insn_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative_load;
#else
  int x_flag_schedule_speculative_load;
#define flag_schedule_speculative_load global_options.x_flag_schedule_speculative_load
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative_load_dangerous;
#else
  int x_flag_schedule_speculative_load_dangerous;
#define flag_schedule_speculative_load_dangerous global_options.x_flag_schedule_speculative_load_dangerous
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_stalled_insns;
#else
  int x_flag_sched_stalled_insns;
#define flag_sched_stalled_insns global_options.x_flag_sched_stalled_insns
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_stalled_insns_dep;
#else
  int x_flag_sched_stalled_insns_dep;
#define flag_sched_stalled_insns_dep global_options.x_flag_sched_stalled_insns_dep
#endif
#ifdef GENERATOR_FILE
extern int sched_verbose_param;
#else
  int x_sched_verbose_param;
#define sched_verbose_param global_options.x_sched_verbose_param
#endif
#ifdef GENERATOR_FILE
extern int flag_sched2_use_superblocks;
#else
  int x_flag_sched2_use_superblocks;
#define flag_sched2_use_superblocks global_options.x_flag_sched2_use_superblocks
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_fusion;
#else
  int x_flag_schedule_fusion;
#define flag_schedule_fusion global_options.x_flag_schedule_fusion
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_insns;
#else
  int x_flag_schedule_insns;
#define flag_schedule_insns global_options.x_flag_schedule_insns
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_insns_after_reload;
#else
  int x_flag_schedule_insns_after_reload;
#define flag_schedule_insns_after_reload global_options.x_flag_schedule_insns_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_second_underscore;
#else
  int x_flag_second_underscore;
#define flag_second_underscore global_options.x_flag_second_underscore
#endif
#ifdef GENERATOR_FILE
extern int flag_section_anchors;
#else
  int x_flag_section_anchors;
#define flag_section_anchors global_options.x_flag_section_anchors
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_pipelining;
#else
  int x_flag_sel_sched_pipelining;
#define flag_sel_sched_pipelining global_options.x_flag_sel_sched_pipelining
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_pipelining_outer_loops;
#else
  int x_flag_sel_sched_pipelining_outer_loops;
#define flag_sel_sched_pipelining_outer_loops global_options.x_flag_sel_sched_pipelining_outer_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_reschedule_pipelined;
#else
  int x_flag_sel_sched_reschedule_pipelined;
#define flag_sel_sched_reschedule_pipelined global_options.x_flag_sel_sched_reschedule_pipelined
#endif
#ifdef GENERATOR_FILE
extern int flag_selective_scheduling;
#else
  int x_flag_selective_scheduling;
#define flag_selective_scheduling global_options.x_flag_selective_scheduling
#endif
#ifdef GENERATOR_FILE
extern int flag_selective_scheduling2;
#else
  int x_flag_selective_scheduling2;
#define flag_selective_scheduling2 global_options.x_flag_selective_scheduling2
#endif
#ifdef GENERATOR_FILE
extern const char *flag_self_test;
#else
  const char *x_flag_self_test;
#define flag_self_test global_options.x_flag_self_test
#endif
#ifdef GENERATOR_FILE
extern int flag_semantic_interposition;
#else
  int x_flag_semantic_interposition;
#define flag_semantic_interposition global_options.x_flag_semantic_interposition
#endif
#ifdef GENERATOR_FILE
extern int flag_short_enums;
#else
  int x_flag_short_enums;
#define flag_short_enums global_options.x_flag_short_enums
#endif
#ifdef GENERATOR_FILE
extern int flag_short_wchar;
#else
  int x_flag_short_wchar;
#define flag_short_wchar global_options.x_flag_short_wchar
#endif
#ifdef GENERATOR_FILE
extern int flag_show_column;
#else
  int x_flag_show_column;
#define flag_show_column global_options.x_flag_show_column
#endif
#ifdef GENERATOR_FILE
extern int flag_shrink_wrap;
#else
  int x_flag_shrink_wrap;
#define flag_shrink_wrap global_options.x_flag_shrink_wrap
#endif
#ifdef GENERATOR_FILE
extern int flag_shrink_wrap_separate;
#else
  int x_flag_shrink_wrap_separate;
#define flag_shrink_wrap_separate global_options.x_flag_shrink_wrap_separate
#endif
#ifdef GENERATOR_FILE
extern int flag_sign_zero;
#else
  int x_flag_sign_zero;
#define flag_sign_zero global_options.x_flag_sign_zero
#endif
#ifdef GENERATOR_FILE
extern int flag_signaling_nans;
#else
  int x_flag_signaling_nans;
#define flag_signaling_nans global_options.x_flag_signaling_nans
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_bitfields;
#else
  int x_flag_signed_bitfields;
#define flag_signed_bitfields global_options.x_flag_signed_bitfields
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_char;
#else
  int x_flag_signed_char;
#define flag_signed_char global_options.x_flag_signed_char
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_zeros;
#else
  int x_flag_signed_zeros;
#define flag_signed_zeros global_options.x_flag_signed_zeros
#endif
#ifdef GENERATOR_FILE
extern enum vect_cost_model flag_simd_cost_model;
#else
  enum vect_cost_model x_flag_simd_cost_model;
#define flag_simd_cost_model global_options.x_flag_simd_cost_model
#endif
#ifdef GENERATOR_FILE
extern int flag_single_precision_constant;
#else
  int x_flag_single_precision_constant;
#define flag_single_precision_constant global_options.x_flag_single_precision_constant
#endif
#ifdef GENERATOR_FILE
extern int flag_sized_deallocation;
#else
  int x_flag_sized_deallocation;
#define flag_sized_deallocation global_options.x_flag_sized_deallocation
#endif
#ifdef GENERATOR_FILE
extern int flag_split_ivs_in_unroller;
#else
  int x_flag_split_ivs_in_unroller;
#define flag_split_ivs_in_unroller global_options.x_flag_split_ivs_in_unroller
#endif
#ifdef GENERATOR_FILE
extern int flag_split_loops;
#else
  int x_flag_split_loops;
#define flag_split_loops global_options.x_flag_split_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_split_paths;
#else
  int x_flag_split_paths;
#define flag_split_paths global_options.x_flag_split_paths
#endif
#ifdef GENERATOR_FILE
extern int flag_split_stack;
#else
  int x_flag_split_stack;
#define flag_split_stack global_options.x_flag_split_stack
#endif
#ifdef GENERATOR_FILE
extern int flag_split_wide_types;
#else
  int x_flag_split_wide_types;
#define flag_split_wide_types global_options.x_flag_split_wide_types
#endif
#ifdef GENERATOR_FILE
extern int flag_split_wide_types_early;
#else
  int x_flag_split_wide_types_early;
#define flag_split_wide_types_early global_options.x_flag_split_wide_types_early
#endif
#ifdef GENERATOR_FILE
extern int flag_ssa_backprop;
#else
  int x_flag_ssa_backprop;
#define flag_ssa_backprop global_options.x_flag_ssa_backprop
#endif
#ifdef GENERATOR_FILE
extern int flag_ssa_phiopt;
#else
  int x_flag_ssa_phiopt;
#define flag_ssa_phiopt global_options.x_flag_ssa_phiopt
#endif
#ifdef GENERATOR_FILE
extern enum scalar_storage_order_kind default_sso;
#else
  enum scalar_storage_order_kind x_default_sso;
#define default_sso global_options.x_default_sso
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_arrays;
#else
  int x_flag_stack_arrays;
#define flag_stack_arrays global_options.x_flag_stack_arrays
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_clash_protection;
#else
  int x_flag_stack_clash_protection;
#define flag_stack_clash_protection global_options.x_flag_stack_clash_protection
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_protect;
#else
  int x_flag_stack_protect;
#define flag_stack_protect global_options.x_flag_stack_protect
#endif
#ifdef GENERATOR_FILE
extern enum stack_reuse_level flag_stack_reuse;
#else
  enum stack_reuse_level x_flag_stack_reuse;
#define flag_stack_reuse global_options.x_flag_stack_reuse
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_usage;
#else
  int x_flag_stack_usage;
#define flag_stack_usage global_options.x_flag_stack_usage
#endif
#ifdef GENERATOR_FILE
extern int flag_detailed_statistics;
#else
  int x_flag_detailed_statistics;
#define flag_detailed_statistics global_options.x_flag_detailed_statistics
#endif
#ifdef GENERATOR_FILE
extern int flag_stdarg_opt;
#else
  int x_flag_stdarg_opt;
#define flag_stdarg_opt global_options.x_flag_stdarg_opt
#endif
#ifdef GENERATOR_FILE
extern int flag_store_merging;
#else
  int x_flag_store_merging;
#define flag_store_merging global_options.x_flag_store_merging
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_aliasing;
#else
  int x_flag_strict_aliasing;
#define flag_strict_aliasing global_options.x_flag_strict_aliasing
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_enums;
#else
  int x_flag_strict_enums;
#define flag_strict_enums global_options.x_flag_strict_enums
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_volatile_bitfields;
#else
  int x_flag_strict_volatile_bitfields;
#define flag_strict_volatile_bitfields global_options.x_flag_strict_volatile_bitfields
#endif
#ifdef GENERATOR_FILE
extern int flag_strong_eval_order;
#else
  int x_flag_strong_eval_order;
#define flag_strong_eval_order global_options.x_flag_strong_eval_order
#endif
#ifdef GENERATOR_FILE
extern int flag_switch_errors;
#else
  int x_flag_switch_errors;
#define flag_switch_errors global_options.x_flag_switch_errors
#endif
#ifdef GENERATOR_FILE
extern int flag_sync_libcalls;
#else
  int x_flag_sync_libcalls;
#define flag_sync_libcalls global_options.x_flag_sync_libcalls
#endif
#ifdef GENERATOR_FILE
extern int flag_syntax_only;
#else
  int x_flag_syntax_only;
#define flag_syntax_only global_options.x_flag_syntax_only
#endif
#ifdef GENERATOR_FILE
extern int flag_tail_call_workaround;
#else
  int x_flag_tail_call_workaround;
#define flag_tail_call_workaround global_options.x_flag_tail_call_workaround
#endif
#ifdef GENERATOR_FILE
extern int template_backtrace_limit;
#else
  int x_template_backtrace_limit;
#define template_backtrace_limit global_options.x_template_backtrace_limit
#endif
#ifdef GENERATOR_FILE
extern int flag_test_coverage;
#else
  int x_flag_test_coverage;
#define flag_test_coverage global_options.x_flag_test_coverage
#endif
#ifdef GENERATOR_FILE
extern int flag_test_forall_temp;
#else
  int x_flag_test_forall_temp;
#define flag_test_forall_temp global_options.x_flag_test_forall_temp
#endif
#ifdef GENERATOR_FILE
extern int flag_thread_jumps;
#else
  int x_flag_thread_jumps;
#define flag_thread_jumps global_options.x_flag_thread_jumps
#endif
#ifdef GENERATOR_FILE
extern int flag_threadsafe_statics;
#else
  int x_flag_threadsafe_statics;
#define flag_threadsafe_statics global_options.x_flag_threadsafe_statics
#endif
#ifdef GENERATOR_FILE
extern int time_report;
#else
  int x_time_report;
#define time_report global_options.x_time_report
#endif
#ifdef GENERATOR_FILE
extern int time_report_details;
#else
  int x_time_report_details;
#define time_report_details global_options.x_time_report_details
#endif
#ifdef GENERATOR_FILE
extern enum tls_model flag_tls_default;
#else
  enum tls_model x_flag_tls_default;
#define flag_tls_default global_options.x_flag_tls_default
#endif
#ifdef GENERATOR_FILE
extern int flag_toplevel_reorder;
#else
  int x_flag_toplevel_reorder;
#define flag_toplevel_reorder global_options.x_flag_toplevel_reorder
#endif
#ifdef GENERATOR_FILE
extern int flag_tracer;
#else
  int x_flag_tracer;
#define flag_tracer global_options.x_flag_tracer
#endif
#ifdef GENERATOR_FILE
extern int flag_trampolines;
#else
  int x_flag_trampolines;
#define flag_trampolines global_options.x_flag_trampolines
#endif
#ifdef GENERATOR_FILE
extern int flag_trapping_math;
#else
  int x_flag_trapping_math;
#define flag_trapping_math global_options.x_flag_trapping_math
#endif
#ifdef GENERATOR_FILE
extern int flag_trapv;
#else
  int x_flag_trapv;
#define flag_trapv global_options.x_flag_trapv
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_bit_ccp;
#else
  int x_flag_tree_bit_ccp;
#define flag_tree_bit_ccp global_options.x_flag_tree_bit_ccp
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_builtin_call_dce;
#else
  int x_flag_tree_builtin_call_dce;
#define flag_tree_builtin_call_dce global_options.x_flag_tree_builtin_call_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ccp;
#else
  int x_flag_tree_ccp;
#define flag_tree_ccp global_options.x_flag_tree_ccp
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ch;
#else
  int x_flag_tree_ch;
#define flag_tree_ch global_options.x_flag_tree_ch
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_coalesce_vars;
#else
  int x_flag_tree_coalesce_vars;
#define flag_tree_coalesce_vars global_options.x_flag_tree_coalesce_vars
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_copy_prop;
#else
  int x_flag_tree_copy_prop;
#define flag_tree_copy_prop global_options.x_flag_tree_copy_prop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_cselim;
#else
  int x_flag_tree_cselim;
#define flag_tree_cselim global_options.x_flag_tree_cselim
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dce;
#else
  int x_flag_tree_dce;
#define flag_tree_dce global_options.x_flag_tree_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dom;
#else
  int x_flag_tree_dom;
#define flag_tree_dom global_options.x_flag_tree_dom
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dse;
#else
  int x_flag_tree_dse;
#define flag_tree_dse global_options.x_flag_tree_dse
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_forwprop;
#else
  int x_flag_tree_forwprop;
#define flag_tree_forwprop global_options.x_flag_tree_forwprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_fre;
#else
  int x_flag_tree_fre;
#define flag_tree_fre global_options.x_flag_tree_fre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_distribute_patterns;
#else
  int x_flag_tree_loop_distribute_patterns;
#define flag_tree_loop_distribute_patterns global_options.x_flag_tree_loop_distribute_patterns
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_distribution;
#else
  int x_flag_tree_loop_distribution;
#define flag_tree_loop_distribution global_options.x_flag_tree_loop_distribution
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_if_convert;
#else
  int x_flag_tree_loop_if_convert;
#define flag_tree_loop_if_convert global_options.x_flag_tree_loop_if_convert
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_im;
#else
  int x_flag_tree_loop_im;
#define flag_tree_loop_im global_options.x_flag_tree_loop_im
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_ivcanon;
#else
  int x_flag_tree_loop_ivcanon;
#define flag_tree_loop_ivcanon global_options.x_flag_tree_loop_ivcanon
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_optimize;
#else
  int x_flag_tree_loop_optimize;
#define flag_tree_loop_optimize global_options.x_flag_tree_loop_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_vectorize;
#else
  int x_flag_tree_loop_vectorize;
#define flag_tree_loop_vectorize global_options.x_flag_tree_loop_vectorize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_live_range_split;
#else
  int x_flag_tree_live_range_split;
#define flag_tree_live_range_split global_options.x_flag_tree_live_range_split
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_parallelize_loops;
#else
  int x_flag_tree_parallelize_loops;
#define flag_tree_parallelize_loops global_options.x_flag_tree_parallelize_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_partial_pre;
#else
  int x_flag_tree_partial_pre;
#define flag_tree_partial_pre global_options.x_flag_tree_partial_pre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_phiprop;
#else
  int x_flag_tree_phiprop;
#define flag_tree_phiprop global_options.x_flag_tree_phiprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_pre;
#else
  int x_flag_tree_pre;
#define flag_tree_pre global_options.x_flag_tree_pre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_pta;
#else
  int x_flag_tree_pta;
#define flag_tree_pta global_options.x_flag_tree_pta
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_reassoc;
#else
  int x_flag_tree_reassoc;
#define flag_tree_reassoc global_options.x_flag_tree_reassoc
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_scev_cprop;
#else
  int x_flag_tree_scev_cprop;
#define flag_tree_scev_cprop global_options.x_flag_tree_scev_cprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_sink;
#else
  int x_flag_tree_sink;
#define flag_tree_sink global_options.x_flag_tree_sink
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_slp_vectorize;
#else
  int x_flag_tree_slp_vectorize;
#define flag_tree_slp_vectorize global_options.x_flag_tree_slp_vectorize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_slsr;
#else
  int x_flag_tree_slsr;
#define flag_tree_slsr global_options.x_flag_tree_slsr
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_sra;
#else
  int x_flag_tree_sra;
#define flag_tree_sra global_options.x_flag_tree_sra
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_switch_conversion;
#else
  int x_flag_tree_switch_conversion;
#define flag_tree_switch_conversion global_options.x_flag_tree_switch_conversion
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_tail_merge;
#else
  int x_flag_tree_tail_merge;
#define flag_tree_tail_merge global_options.x_flag_tree_tail_merge
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ter;
#else
  int x_flag_tree_ter;
#define flag_tree_ter global_options.x_flag_tree_ter
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_vrp;
#else
  int x_flag_tree_vrp;
#define flag_tree_vrp global_options.x_flag_tree_vrp
#endif
#ifdef GENERATOR_FILE
extern int flag_unconstrained_commons;
#else
  int x_flag_unconstrained_commons;
#define flag_unconstrained_commons global_options.x_flag_unconstrained_commons
#endif
#ifdef GENERATOR_FILE
extern int flag_underscoring;
#else
  int x_flag_underscoring;
#define flag_underscoring global_options.x_flag_underscoring
#endif
#ifdef GENERATOR_FILE
extern int flag_unit_at_a_time;
#else
  int x_flag_unit_at_a_time;
#define flag_unit_at_a_time global_options.x_flag_unit_at_a_time
#endif
#ifdef GENERATOR_FILE
extern int flag_unroll_all_loops;
#else
  int x_flag_unroll_all_loops;
#define flag_unroll_all_loops global_options.x_flag_unroll_all_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unroll_loops;
#else
  int x_flag_unroll_loops;
#define flag_unroll_loops global_options.x_flag_unroll_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unsafe_math_optimizations;
#else
  int x_flag_unsafe_math_optimizations;
#define flag_unsafe_math_optimizations global_options.x_flag_unsafe_math_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_unswitch_loops;
#else
  int x_flag_unswitch_loops;
#define flag_unswitch_loops global_options.x_flag_unswitch_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unwind_tables;
#else
  int x_flag_unwind_tables;
#define flag_unwind_tables global_options.x_flag_unwind_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_use_cxa_atexit;
#else
  int x_flag_use_cxa_atexit;
#define flag_use_cxa_atexit global_options.x_flag_use_cxa_atexit
#endif
#ifdef GENERATOR_FILE
extern int flag_use_cxa_get_exception_ptr;
#else
  int x_flag_use_cxa_get_exception_ptr;
#define flag_use_cxa_get_exception_ptr global_options.x_flag_use_cxa_get_exception_ptr
#endif
#ifdef GENERATOR_FILE
extern int flag_use_linker_plugin;
#else
  int x_flag_use_linker_plugin;
#define flag_use_linker_plugin global_options.x_flag_use_linker_plugin
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking;
#else
  int x_flag_var_tracking;
#define flag_var_tracking global_options.x_flag_var_tracking
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_assignments;
#else
  int x_flag_var_tracking_assignments;
#define flag_var_tracking_assignments global_options.x_flag_var_tracking_assignments
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_assignments_toggle;
#else
  int x_flag_var_tracking_assignments_toggle;
#define flag_var_tracking_assignments_toggle global_options.x_flag_var_tracking_assignments_toggle
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_uninit;
#else
  int x_flag_var_tracking_uninit;
#define flag_var_tracking_uninit global_options.x_flag_var_tracking_uninit
#endif
#ifdef GENERATOR_FILE
extern int flag_variable_expansion_in_unroller;
#else
  int x_flag_variable_expansion_in_unroller;
#define flag_variable_expansion_in_unroller global_options.x_flag_variable_expansion_in_unroller
#endif
#ifdef GENERATOR_FILE
extern enum vect_cost_model flag_vect_cost_model;
#else
  enum vect_cost_model x_flag_vect_cost_model;
#define flag_vect_cost_model global_options.x_flag_vect_cost_model
#endif
#ifdef GENERATOR_FILE
extern int flag_verbose_asm;
#else
  int x_flag_verbose_asm;
#define flag_verbose_asm global_options.x_flag_verbose_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_version_loops_for_strides;
#else
  int x_flag_version_loops_for_strides;
#define flag_version_loops_for_strides global_options.x_flag_version_loops_for_strides
#endif
#ifdef GENERATOR_FILE
extern int flag_visibility_ms_compat;
#else
  int x_flag_visibility_ms_compat;
#define flag_visibility_ms_compat global_options.x_flag_visibility_ms_compat
#endif
#ifdef GENERATOR_FILE
extern enum symbol_visibility default_visibility;
#else
  enum symbol_visibility x_default_visibility;
#define default_visibility global_options.x_default_visibility
#endif
#ifdef GENERATOR_FILE
extern int flag_value_profile_transformations;
#else
  int x_flag_value_profile_transformations;
#define flag_value_profile_transformations global_options.x_flag_value_profile_transformations
#endif
#ifdef GENERATOR_FILE
extern enum vtv_priority flag_vtable_verify;
#else
  enum vtv_priority x_flag_vtable_verify;
#define flag_vtable_verify global_options.x_flag_vtable_verify
#endif
#ifdef GENERATOR_FILE
extern int flag_vtv_counts;
#else
  int x_flag_vtv_counts;
#define flag_vtv_counts global_options.x_flag_vtv_counts
#endif
#ifdef GENERATOR_FILE
extern int flag_vtv_debug;
#else
  int x_flag_vtv_debug;
#define flag_vtv_debug global_options.x_flag_vtv_debug
#endif
#ifdef GENERATOR_FILE
extern int flag_weak;
#else
  int x_flag_weak;
#define flag_weak global_options.x_flag_weak
#endif
#ifdef GENERATOR_FILE
extern int flag_web;
#else
  int x_flag_web;
#define flag_web global_options.x_flag_web
#endif
#ifdef GENERATOR_FILE
extern int flag_whole_program;
#else
  int x_flag_whole_program;
#define flag_whole_program global_options.x_flag_whole_program
#endif
#ifdef GENERATOR_FILE
extern int flag_working_directory;
#else
  int x_flag_working_directory;
#define flag_working_directory global_options.x_flag_working_directory
#endif
#ifdef GENERATOR_FILE
extern const char *flag_wpa;
#else
  const char *x_flag_wpa;
#define flag_wpa global_options.x_flag_wpa
#endif
#ifdef GENERATOR_FILE
extern int flag_wrapv;
#else
  int x_flag_wrapv;
#define flag_wrapv global_options.x_flag_wrapv
#endif
#ifdef GENERATOR_FILE
extern int flag_wrapv_pointer;
#else
  int x_flag_wrapv_pointer;
#define flag_wrapv_pointer global_options.x_flag_wrapv_pointer
#endif
#ifdef GENERATOR_FILE
extern int flag_zero_initialized_in_bss;
#else
  int x_flag_zero_initialized_in_bss;
#define flag_zero_initialized_in_bss global_options.x_flag_zero_initialized_in_bss
#endif
#ifdef GENERATOR_FILE
extern int flag_zero_link;
#else
  int x_flag_zero_link;
#define flag_zero_link global_options.x_flag_zero_link
#endif
#ifdef GENERATOR_FILE
extern int dwarf2out_as_loc_support;
#else
  int x_dwarf2out_as_loc_support;
#define dwarf2out_as_loc_support global_options.x_dwarf2out_as_loc_support
#endif
#ifdef GENERATOR_FILE
extern int dwarf2out_as_locview_support;
#else
  int x_dwarf2out_as_locview_support;
#define dwarf2out_as_locview_support global_options.x_dwarf2out_as_locview_support
#endif
#ifdef GENERATOR_FILE
extern int debug_column_info;
#else
  int x_debug_column_info;
#define debug_column_info global_options.x_debug_column_info
#endif
#ifdef GENERATOR_FILE
extern int flag_describe_dies;
#else
  int x_flag_describe_dies;
#define flag_describe_dies global_options.x_flag_describe_dies
#endif
#ifdef GENERATOR_FILE
extern int dwarf_version;
#else
  int x_dwarf_version;
#define dwarf_version global_options.x_dwarf_version
#endif
#ifdef GENERATOR_FILE
extern int flag_gen_declaration;
#else
  int x_flag_gen_declaration;
#define flag_gen_declaration global_options.x_flag_gen_declaration
#endif
#ifdef GENERATOR_FILE
extern int debug_generate_pub_sections;
#else
  int x_debug_generate_pub_sections;
#define debug_generate_pub_sections global_options.x_debug_generate_pub_sections
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_gimple_stats;
#else
  int x_flag_lto_gimple_stats;
#define flag_lto_gimple_stats global_options.x_flag_lto_gimple_stats
#endif
#ifdef GENERATOR_FILE
extern int debug_inline_points;
#else
  int x_debug_inline_points;
#define debug_inline_points global_options.x_debug_inline_points
#endif
#ifdef GENERATOR_FILE
extern int debug_internal_reset_location_views;
#else
  int x_debug_internal_reset_location_views;
#define debug_internal_reset_location_views global_options.x_debug_internal_reset_location_views
#endif
#ifdef GENERATOR_FILE
extern int dwarf_record_gcc_switches;
#else
  int x_dwarf_record_gcc_switches;
#define dwarf_record_gcc_switches global_options.x_dwarf_record_gcc_switches
#endif
#ifdef GENERATOR_FILE
extern int dwarf_split_debug_info;
#else
  int x_dwarf_split_debug_info;
#define dwarf_split_debug_info global_options.x_dwarf_split_debug_info
#endif
#ifdef GENERATOR_FILE
extern int debug_nonbind_markers_p;
#else
  int x_debug_nonbind_markers_p;
#define debug_nonbind_markers_p global_options.x_debug_nonbind_markers_p
#endif
#ifdef GENERATOR_FILE
extern int dwarf_strict;
#else
  int x_dwarf_strict;
#define dwarf_strict global_options.x_dwarf_strict
#endif
#ifdef GENERATOR_FILE
extern int flag_gtoggle;
#else
  int x_flag_gtoggle;
#define flag_gtoggle global_options.x_flag_gtoggle
#endif
#ifdef GENERATOR_FILE
extern int debug_variable_location_views;
#else
  int x_debug_variable_location_views;
#define debug_variable_location_views global_options.x_debug_variable_location_views
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_dump_tool_help;
#else
  int x_flag_lto_dump_tool_help;
#define flag_lto_dump_tool_help global_options.x_flag_lto_dump_tool_help
#endif
#ifdef GENERATOR_FILE
extern const char *imultiarch;
#else
  const char *x_imultiarch;
#define imultiarch global_options.x_imultiarch
#endif
#ifdef GENERATOR_FILE
extern const char *plugindir_string;
#else
  const char *x_plugindir_string;
#define plugindir_string global_options.x_plugindir_string
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_dump_list;
#else
  int x_flag_lto_dump_list;
#define flag_lto_dump_list global_options.x_flag_lto_dump_list
#endif
#ifdef GENERATOR_FILE
extern enum riscv_abi_type riscv_abi;
#else
  enum riscv_abi_type x_riscv_abi;
#define riscv_abi global_options.x_riscv_abi
#endif
#ifdef GENERATOR_FILE
extern enum riscv_align_data riscv_align_data_type;
#else
  enum riscv_align_data x_riscv_align_data_type;
#define riscv_align_data_type global_options.x_riscv_align_data_type
#endif
#ifdef GENERATOR_FILE
extern int riscv_branch_cost;
#else
  int x_riscv_branch_cost;
#define riscv_branch_cost global_options.x_riscv_branch_cost
#endif
#ifdef GENERATOR_FILE
extern enum riscv_code_model riscv_cmodel;
#else
  enum riscv_code_model x_riscv_cmodel;
#define riscv_cmodel global_options.x_riscv_cmodel
#endif
#ifdef GENERATOR_FILE
extern int TARGET_PLT;
#else
  int x_TARGET_PLT;
#define TARGET_PLT global_options.x_TARGET_PLT
#endif
#ifdef GENERATOR_FILE
extern int riscv_preferred_stack_boundary_arg;
#else
  int x_riscv_preferred_stack_boundary_arg;
#define riscv_preferred_stack_boundary_arg global_options.x_riscv_preferred_stack_boundary_arg
#endif
#ifdef GENERATOR_FILE
extern int riscv_mrelax;
#else
  int x_riscv_mrelax;
#define riscv_mrelax global_options.x_riscv_mrelax
#endif
#ifdef GENERATOR_FILE
extern int riscv_emit_attribute_p;
#else
  int x_riscv_emit_attribute_p;
#define riscv_emit_attribute_p global_options.x_riscv_emit_attribute_p
#endif
#ifdef GENERATOR_FILE
extern int g_switch_value;
#else
  int x_g_switch_value;
#define g_switch_value global_options.x_g_switch_value
#endif
#ifdef GENERATOR_FILE
extern const char *riscv_tune_string;
#else
  const char *x_riscv_tune_string;
#define riscv_tune_string global_options.x_riscv_tune_string
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_name_sort;
#else
  int x_flag_lto_name_sort;
#define flag_lto_name_sort global_options.x_flag_lto_name_sort
#endif
#ifdef GENERATOR_FILE
extern const char *asm_file_name;
#else
  const char *x_asm_file_name;
#define asm_file_name global_options.x_asm_file_name
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_dump_objects;
#else
  int x_flag_lto_dump_objects;
#define flag_lto_dump_objects global_options.x_flag_lto_dump_objects
#endif
#ifdef GENERATOR_FILE
extern int pass_exit_codes;
#else
  int x_pass_exit_codes;
#define pass_exit_codes global_options.x_pass_exit_codes
#endif
#ifdef GENERATOR_FILE
extern int flag_pedantic_errors;
#else
  int x_flag_pedantic_errors;
#define flag_pedantic_errors global_options.x_flag_pedantic_errors
#endif
#ifdef GENERATOR_FILE
extern int use_pipes;
#else
  int x_use_pipes;
#define use_pipes global_options.x_use_pipes
#endif
#ifdef GENERATOR_FILE
extern const char *print_file_name;
#else
  const char *x_print_file_name;
#define print_file_name global_options.x_print_file_name
#endif
#ifdef GENERATOR_FILE
extern int print_multi_directory;
#else
  int x_print_multi_directory;
#define print_multi_directory global_options.x_print_multi_directory
#endif
#ifdef GENERATOR_FILE
extern int print_multi_lib;
#else
  int x_print_multi_lib;
#define print_multi_lib global_options.x_print_multi_lib
#endif
#ifdef GENERATOR_FILE
extern int print_multi_os_directory;
#else
  int x_print_multi_os_directory;
#define print_multi_os_directory global_options.x_print_multi_os_directory
#endif
#ifdef GENERATOR_FILE
extern int print_multiarch;
#else
  int x_print_multiarch;
#define print_multiarch global_options.x_print_multiarch
#endif
#ifdef GENERATOR_FILE
extern const char *print_prog_name;
#else
  const char *x_print_prog_name;
#define print_prog_name global_options.x_print_prog_name
#endif
#ifdef GENERATOR_FILE
extern int print_search_dirs;
#else
  int x_print_search_dirs;
#define print_search_dirs global_options.x_print_search_dirs
#endif
#ifdef GENERATOR_FILE
extern int print_sysroot;
#else
  int x_print_sysroot;
#define print_sysroot global_options.x_print_sysroot
#endif
#ifdef GENERATOR_FILE
extern int print_sysroot_headers_suffix;
#else
  int x_print_sysroot_headers_suffix;
#define print_sysroot_headers_suffix global_options.x_print_sysroot_headers_suffix
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_print_value;
#else
  int x_flag_lto_print_value;
#define flag_lto_print_value global_options.x_flag_lto_print_value
#endif
#ifdef GENERATOR_FILE
extern int quiet_flag;
#else
  int x_quiet_flag;
#define quiet_flag global_options.x_quiet_flag
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_reverse_sort;
#else
  int x_flag_lto_reverse_sort;
#define flag_lto_reverse_sort global_options.x_flag_lto_reverse_sort
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_size_sort;
#else
  int x_flag_lto_size_sort;
#define flag_lto_size_sort global_options.x_flag_lto_size_sort
#endif
#ifdef GENERATOR_FILE
extern const char *flag_lto_dump_symbol;
#else
  const char *x_flag_lto_dump_symbol;
#define flag_lto_dump_symbol global_options.x_flag_lto_dump_symbol
#endif
#ifdef GENERATOR_FILE
extern int report_times;
#else
  int x_report_times;
#define report_times global_options.x_report_times
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_tree_stats;
#else
  int x_flag_lto_tree_stats;
#define flag_lto_tree_stats global_options.x_flag_lto_tree_stats
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_dump_type_stats;
#else
  int x_flag_lto_dump_type_stats;
#define flag_lto_dump_type_stats global_options.x_flag_lto_dump_type_stats
#endif
#ifdef GENERATOR_FILE
extern int flag_undef;
#else
  int x_flag_undef;
#define flag_undef global_options.x_flag_undef
#endif
#ifdef GENERATOR_FILE
extern int verbose_flag;
#else
  int x_verbose_flag;
#define verbose_flag global_options.x_verbose_flag
#endif
#ifdef GENERATOR_FILE
extern int version_flag;
#else
  int x_version_flag;
#define version_flag global_options.x_version_flag
#endif
#ifdef GENERATOR_FILE
extern int inhibit_warnings;
#else
  int x_inhibit_warnings;
#define inhibit_warnings global_options.x_inhibit_warnings
#endif
#ifdef GENERATOR_FILE
extern const char *wrapper_string;
#else
  const char *x_wrapper_string;
#define wrapper_string global_options.x_wrapper_string
#endif
#ifndef GENERATOR_FILE
  const char *x_VAR_march_;
#define x_VAR_march_ do_not_use
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_associative_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_cx_limited_range;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_excess_precision;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_finite_math_only;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_errno_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_reciprocal_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_rounding_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_signaling_nans;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_signed_zeros;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_trapping_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_unsafe_math_optimizations;
#endif
#ifndef GENERATOR_FILE
};
extern struct gcc_options global_options;
extern const struct gcc_options global_options_init;
extern struct gcc_options global_options_set;
#define target_flags_explicit global_options_set.x_target_flags
#endif
#endif

#if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS) && !defined(IN_RTS)

/* Structure to save/restore optimization and target specific options.  */
struct GTY(()) cl_optimization
{
  const char *x_str_align_functions;
  const char *x_str_align_jumps;
  const char *x_str_align_labels;
  const char *x_str_align_loops;
  int x_flag_sched_stalled_insns;
  int x_flag_sched_stalled_insns_dep;
  int x_flag_tree_parallelize_loops;
  enum excess_precision x_flag_excess_precision;
  enum fp_contract_mode x_flag_fp_contract_mode;
  enum ira_algorithm x_flag_ira_algorithm;
  enum ira_region x_flag_ira_region;
  enum live_patching_level x_flag_live_patching;
  enum reorder_blocks_algorithm x_flag_reorder_blocks_algorithm;
  enum vect_cost_model x_flag_simd_cost_model;
  enum stack_reuse_level x_flag_stack_reuse;
  enum vect_cost_model x_flag_vect_cost_model;
  unsigned char x_optimize;
  unsigned char x_optimize_size;
  unsigned char x_optimize_debug;
  unsigned char x_optimize_fast;
  signed char x_flag_aggressive_loop_optimizations;
  signed char x_flag_align_functions;
  signed char x_flag_align_jumps;
  signed char x_flag_align_labels;
  signed char x_flag_align_loops;
  signed char x_flag_allocation_dce;
  signed char x_flag_associative_math;
  signed char x_flag_assume_phsa;
  signed char x_flag_asynchronous_unwind_tables;
  signed char x_flag_auto_inc_dec;
  signed char x_flag_branch_on_count_reg;
  signed char x_flag_branch_probabilities;
  signed char x_flag_caller_saves;
  signed char x_flag_code_hoisting;
  signed char x_flag_combine_stack_adjustments;
  signed char x_flag_compare_elim_after_reload;
  signed char x_flag_conserve_stack;
  signed char x_flag_cprop_registers;
  signed char x_flag_crossjumping;
  signed char x_flag_cse_follow_jumps;
  signed char x_flag_cx_fortran_rules;
  signed char x_flag_cx_limited_range;
  signed char x_flag_dce;
  signed char x_flag_defer_pop;
  signed char x_flag_delayed_branch;
  signed char x_flag_delete_dead_exceptions;
  signed char x_flag_delete_null_pointer_checks;
  signed char x_flag_devirtualize;
  signed char x_flag_devirtualize_speculatively;
  signed char x_flag_dse;
  signed char x_flag_early_inlining;
  signed char x_flag_exceptions;
  signed char x_flag_expensive_optimizations;
  signed char x_flag_finite_loops;
  signed char x_flag_finite_math_only;
  signed char x_flag_float_store;
  signed char x_flag_forward_propagate;
  signed char x_flag_fp_int_builtin_inexact;
  signed char x_flag_no_function_cse;
  signed char x_flag_gcse;
  signed char x_flag_gcse_after_reload;
  signed char x_flag_gcse_las;
  signed char x_flag_gcse_lm;
  signed char x_flag_gcse_sm;
  signed char x_flag_graphite;
  signed char x_flag_graphite_identity;
  signed char x_flag_guess_branch_prob;
  signed char x_flag_hoist_adjacent_loads;
  signed char x_flag_if_conversion;
  signed char x_flag_if_conversion2;
  signed char x_flag_indirect_inlining;
  signed char x_flag_no_inline;
  signed char x_flag_inline_atomics;
  signed char x_flag_inline_functions;
  signed char x_flag_inline_functions_called_once;
  signed char x_flag_inline_small_functions;
  signed char x_flag_ipa_bit_cp;
  signed char x_flag_ipa_cp;
  signed char x_flag_ipa_cp_clone;
  signed char x_flag_ipa_icf;
  signed char x_flag_ipa_icf_functions;
  signed char x_flag_ipa_icf_variables;
  signed char x_flag_ipa_profile;
  signed char x_flag_ipa_pta;
  signed char x_flag_ipa_pure_const;
  signed char x_flag_ipa_ra;
  signed char x_flag_ipa_reference;
  signed char x_flag_ipa_reference_addressable;
  signed char x_flag_ipa_sra;
  signed char x_flag_ipa_stack_alignment;
  signed char x_flag_ipa_vrp;
  signed char x_flag_ira_hoist_pressure;
  signed char x_flag_ira_loop_pressure;
  signed char x_flag_ira_share_save_slots;
  signed char x_flag_ira_share_spill_slots;
  signed char x_flag_isolate_erroneous_paths_attribute;
  signed char x_flag_isolate_erroneous_paths_dereference;
  signed char x_flag_ivopts;
  signed char x_flag_jump_tables;
  signed char x_flag_keep_gc_roots_live;
  signed char x_flag_lifetime_dse;
  signed char x_flag_limit_function_alignment;
  signed char x_flag_live_range_shrinkage;
  signed char x_flag_loop_interchange;
  signed char x_flag_loop_nest_optimize;
  signed char x_flag_loop_parallelize_all;
  signed char x_flag_unroll_jam;
  signed char x_flag_lra_remat;
  signed char x_flag_errno_math;
  signed char x_flag_modulo_sched;
  signed char x_flag_modulo_sched_allow_regmoves;
  signed char x_flag_move_loop_invariants;
  signed char x_flag_non_call_exceptions;
  signed char x_flag_nothrow_opt;
  signed char x_flag_omit_frame_pointer;
  signed char x_flag_opt_info;
  signed char x_flag_optimize_sibling_calls;
  signed char x_flag_optimize_strlen;
  signed char x_flag_pack_struct;
  signed char x_flag_partial_inlining;
  signed char x_flag_peel_loops;
  signed char x_flag_no_peephole;
  signed char x_flag_peephole2;
  signed char x_flag_plt;
  signed char x_flag_predictive_commoning;
  signed char x_flag_prefetch_loop_arrays;
  signed char x_flag_printf_return_value;
  signed char x_flag_reciprocal_math;
  signed char x_flag_pcc_struct_return;
  signed char x_flag_rename_registers;
  signed char x_flag_reorder_blocks;
  signed char x_flag_reorder_blocks_and_partition;
  signed char x_flag_reorder_functions;
  signed char x_flag_rerun_cse_after_loop;
  signed char x_flag_resched_modulo_sched;
  signed char x_flag_rounding_math;
  signed char x_flag_rtti;
  signed char x_flag_save_optimization_record;
  signed char x_flag_sched_critical_path_heuristic;
  signed char x_flag_sched_dep_count_heuristic;
  signed char x_flag_sched_group_heuristic;
  signed char x_flag_schedule_interblock;
  signed char x_flag_sched_last_insn_heuristic;
  signed char x_flag_sched_pressure;
  signed char x_flag_sched_rank_heuristic;
  signed char x_flag_schedule_speculative;
  signed char x_flag_sched_spec_insn_heuristic;
  signed char x_flag_schedule_speculative_load;
  signed char x_flag_schedule_speculative_load_dangerous;
  signed char x_flag_sched2_use_superblocks;
  signed char x_flag_schedule_fusion;
  signed char x_flag_schedule_insns;
  signed char x_flag_schedule_insns_after_reload;
  signed char x_flag_section_anchors;
  signed char x_flag_sel_sched_pipelining;
  signed char x_flag_sel_sched_pipelining_outer_loops;
  signed char x_flag_sel_sched_reschedule_pipelined;
  signed char x_flag_selective_scheduling;
  signed char x_flag_selective_scheduling2;
  signed char x_flag_short_enums;
  signed char x_flag_short_wchar;
  signed char x_flag_shrink_wrap;
  signed char x_flag_shrink_wrap_separate;
  signed char x_flag_signaling_nans;
  signed char x_flag_signed_zeros;
  signed char x_flag_single_precision_constant;
  signed char x_flag_split_ivs_in_unroller;
  signed char x_flag_split_loops;
  signed char x_flag_split_paths;
  signed char x_flag_split_wide_types;
  signed char x_flag_split_wide_types_early;
  signed char x_flag_ssa_backprop;
  signed char x_flag_ssa_phiopt;
  signed char x_flag_stack_clash_protection;
  signed char x_flag_stack_protect;
  signed char x_flag_stdarg_opt;
  signed char x_flag_store_merging;
  signed char x_flag_strict_aliasing;
  signed char x_flag_strict_enums;
  signed char x_flag_strict_volatile_bitfields;
  signed char x_flag_thread_jumps;
  signed char x_flag_threadsafe_statics;
  signed char x_flag_tracer;
  signed char x_flag_trapping_math;
  signed char x_flag_trapv;
  signed char x_flag_tree_bit_ccp;
  signed char x_flag_tree_builtin_call_dce;
  signed char x_flag_tree_ccp;
  signed char x_flag_tree_ch;
  signed char x_flag_tree_coalesce_vars;
  signed char x_flag_tree_copy_prop;
  signed char x_flag_tree_cselim;
  signed char x_flag_tree_dce;
  signed char x_flag_tree_dom;
  signed char x_flag_tree_dse;
  signed char x_flag_tree_forwprop;
  signed char x_flag_tree_fre;
  signed char x_flag_tree_loop_distribute_patterns;
  signed char x_flag_tree_loop_distribution;
  signed char x_flag_tree_loop_if_convert;
  signed char x_flag_tree_loop_im;
  signed char x_flag_tree_loop_ivcanon;
  signed char x_flag_tree_loop_optimize;
  signed char x_flag_tree_loop_vectorize;
  signed char x_flag_tree_live_range_split;
  signed char x_flag_tree_partial_pre;
  signed char x_flag_tree_phiprop;
  signed char x_flag_tree_pre;
  signed char x_flag_tree_pta;
  signed char x_flag_tree_reassoc;
  signed char x_flag_tree_scev_cprop;
  signed char x_flag_tree_sink;
  signed char x_flag_tree_slp_vectorize;
  signed char x_flag_tree_slsr;
  signed char x_flag_tree_sra;
  signed char x_flag_tree_switch_conversion;
  signed char x_flag_tree_tail_merge;
  signed char x_flag_tree_ter;
  signed char x_flag_tree_vrp;
  signed char x_flag_unconstrained_commons;
  signed char x_flag_unroll_all_loops;
  signed char x_flag_unroll_loops;
  signed char x_flag_unsafe_math_optimizations;
  signed char x_flag_unswitch_loops;
  signed char x_flag_unwind_tables;
  signed char x_flag_var_tracking;
  signed char x_flag_var_tracking_assignments;
  signed char x_flag_var_tracking_assignments_toggle;
  signed char x_flag_var_tracking_uninit;
  signed char x_flag_variable_expansion_in_unroller;
  signed char x_flag_version_loops_for_strides;
  signed char x_flag_value_profile_transformations;
  signed char x_flag_web;
  signed char x_flag_wrapv;
  signed char x_flag_wrapv_pointer;
};

/* Structure to save/restore selected target specific options.  */
struct GTY(()) cl_target_option
{
  /* - */ int x_target_flags;
};


/* Save optimization variables into a structure.  */
extern void cl_optimization_save (struct cl_optimization *, struct gcc_options *);

/* Restore optimization variables from a structure.  */
extern void cl_optimization_restore (struct gcc_options *, struct cl_optimization *);

/* Print optimization variables from a structure.  */
extern void cl_optimization_print (FILE *, int, struct cl_optimization *);

/* Print different optimization variables from structures provided as arguments.  */
extern void cl_optimization_print_diff (FILE *, int, cl_optimization *ptr1, cl_optimization *ptr2);

/* Save selected option variables into a structure.  */
extern void cl_target_option_save (struct cl_target_option *, struct gcc_options *);

/* Restore selected option variables from a structure.  */
extern void cl_target_option_restore (struct gcc_options *, struct cl_target_option *);

/* Print target option variables from a structure.  */
extern void cl_target_option_print (FILE *, int, struct cl_target_option *);

/* Print different target option variables from structures provided as arguments.  */
extern void cl_target_option_print_diff (FILE *, int, cl_target_option *ptr1, cl_target_option *ptr2);

/* Compare two target option variables from a structure.  */
extern bool cl_target_option_eq (const struct cl_target_option *, const struct cl_target_option *);

/* Hash option variables from a structure.  */
extern hashval_t cl_target_option_hash (const struct cl_target_option *);

/* Hash optimization from a structure.  */
extern hashval_t cl_optimization_hash (const struct cl_optimization *);

/* Compare two optimization options.  */
extern bool cl_optimization_option_eq (cl_optimization const *ptr1, cl_optimization const *ptr2);

/* Generator files may not have access to location_t, and don't need these.  */
#if defined(UNKNOWN_LOCATION)
bool                                                                  
common_handle_option_auto (struct gcc_options *opts,                  
                           struct gcc_options *opts_set,              
                           const struct cl_decoded_option *decoded,   
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool
Ada_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
AdaSCIL_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
AdaWhy_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
BRIG_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
C_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
CXX_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
D_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
Fortran_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
Go_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
LTO_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
LTODump_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
ObjC_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
ObjCXX_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
void cpp_handle_option_auto (const struct gcc_options * opts, size_t scode,
                             struct cpp_options * cpp_opts);
void init_global_opts_from_cpp(struct gcc_options * opts,      
                               const struct cpp_options * cpp_opts);
#endif
#endif

#define MASK_DIV (1U << 0)
#define MASK_EXPLICIT_RELOCS (1U << 1)
#define MASK_FDIV (1U << 2)
#define MASK_SAVE_RESTORE (1U << 3)
#define MASK_STRICT_ALIGN (1U << 4)
#define MASK_64BIT (1U << 5)
#define MASK_ATOMIC (1U << 6)
#define MASK_BITMANIP (1U << 7)
#define MASK_DOUBLE_FLOAT (1U << 8)
#define MASK_HARD_FLOAT (1U << 9)
#define MASK_MUL (1U << 10)
#define MASK_RVC (1U << 11)
#define MASK_RVE (1U << 12)

#define TARGET_DIV ((target_flags & MASK_DIV) != 0)
#define TARGET_DIV_P(target_flags) (((target_flags) & MASK_DIV) != 0)
#define TARGET_EXPLICIT_RELOCS ((target_flags & MASK_EXPLICIT_RELOCS) != 0)
#define TARGET_EXPLICIT_RELOCS_P(target_flags) (((target_flags) & MASK_EXPLICIT_RELOCS) != 0)
#define TARGET_FDIV ((target_flags & MASK_FDIV) != 0)
#define TARGET_FDIV_P(target_flags) (((target_flags) & MASK_FDIV) != 0)
#define TARGET_SAVE_RESTORE ((target_flags & MASK_SAVE_RESTORE) != 0)
#define TARGET_SAVE_RESTORE_P(target_flags) (((target_flags) & MASK_SAVE_RESTORE) != 0)
#define TARGET_STRICT_ALIGN ((target_flags & MASK_STRICT_ALIGN) != 0)
#define TARGET_STRICT_ALIGN_P(target_flags) (((target_flags) & MASK_STRICT_ALIGN) != 0)
#define TARGET_64BIT ((target_flags & MASK_64BIT) != 0)
#define TARGET_ATOMIC ((target_flags & MASK_ATOMIC) != 0)
#define TARGET_BITMANIP ((target_flags & MASK_BITMANIP) != 0)
#define TARGET_DOUBLE_FLOAT ((target_flags & MASK_DOUBLE_FLOAT) != 0)
#define TARGET_HARD_FLOAT ((target_flags & MASK_HARD_FLOAT) != 0)
#define TARGET_MUL ((target_flags & MASK_MUL) != 0)
#define TARGET_RVC ((target_flags & MASK_RVC) != 0)
#define TARGET_RVE ((target_flags & MASK_RVE) != 0)


#define CL_Ada        (1U << 0)
#define CL_AdaSCIL    (1U << 1)
#define CL_AdaWhy     (1U << 2)
#define CL_BRIG       (1U << 3)
#define CL_C          (1U << 4)
#define CL_CXX        (1U << 5)
#define CL_D          (1U << 6)
#define CL_Fortran    (1U << 7)
#define CL_Go         (1U << 8)
#define CL_LTO        (1U << 9)
#define CL_LTODump    (1U << 10)
#define CL_ObjC       (1U << 11)
#define CL_ObjCXX     (1U << 12)
#define CL_LANG_ALL   ((1U << 13) - 1)

enum opt_code
{
  OPT____ = 0,                               /* -### */
  /* OPT__all_warnings = 1, */               /* --all-warnings */
  /* OPT__ansi = 2, */                       /* --ansi */
  /* OPT__assemble = 3, */                   /* --assemble */
  /* OPT__assert = 4, */                     /* --assert */
  /* OPT__assert_ = 5, */                    /* --assert= */
  /* OPT__comments = 6, */                   /* --comments */
  /* OPT__comments_in_macros = 7, */         /* --comments-in-macros */
  /* OPT__compile = 8, */                    /* --compile */
  OPT__completion_ = 9,                      /* --completion= */
  /* OPT__coverage = 10, */                  /* --coverage */
  /* OPT__debug = 11, */                     /* --debug */
  /* OPT__define_macro = 12, */              /* --define-macro */
  /* OPT__define_macro_ = 13, */             /* --define-macro= */
  /* OPT__dependencies = 14, */              /* --dependencies */
  /* OPT__dump = 15, */                      /* --dump */
  /* OPT__dump_ = 16, */                     /* --dump= */
  /* OPT__dumpbase = 17, */                  /* --dumpbase */
  /* OPT__dumpdir = 18, */                   /* --dumpdir */
  /* OPT__entry = 19, */                     /* --entry */
  /* OPT__entry_ = 20, */                    /* --entry= */
  /* OPT__extra_warnings = 21, */            /* --extra-warnings */
  /* OPT__for_assembler = 22, */             /* --for-assembler */
  /* OPT__for_assembler_ = 23, */            /* --for-assembler= */
  /* OPT__for_linker = 24, */                /* --for-linker */
  /* OPT__for_linker_ = 25, */               /* --for-linker= */
  /* OPT__force_link = 26, */                /* --force-link */
  /* OPT__force_link_ = 27, */               /* --force-link= */
  OPT__help = 28,                            /* --help */
  OPT__help_ = 29,                           /* --help= */
  /* OPT__imacros = 30, */                   /* --imacros */
  /* OPT__imacros_ = 31, */                  /* --imacros= */
  /* OPT__include = 32, */                   /* --include */
  /* OPT__include_barrier = 33, */           /* --include-barrier */
  /* OPT__include_directory = 34, */         /* --include-directory */
  /* OPT__include_directory_after = 35, */   /* --include-directory-after */
  /* OPT__include_directory_after_ = 36, */  /* --include-directory-after= */
  /* OPT__include_directory_ = 37, */        /* --include-directory= */
  /* OPT__include_prefix = 38, */            /* --include-prefix */
  /* OPT__include_prefix_ = 39, */           /* --include-prefix= */
  /* OPT__include_with_prefix = 40, */       /* --include-with-prefix */
  /* OPT__include_with_prefix_after = 41, */ /* --include-with-prefix-after */
  /* OPT__include_with_prefix_after_ = 42, *//* --include-with-prefix-after= */
  /* OPT__include_with_prefix_before = 43, *//* --include-with-prefix-before */
  /* OPT__include_with_prefix_before_ = 44, *//* --include-with-prefix-before= */
  /* OPT__include_with_prefix_ = 45, */      /* --include-with-prefix= */
  /* OPT__include_ = 46, */                  /* --include= */
  /* OPT__language = 47, */                  /* --language */
  /* OPT__language_ = 48, */                 /* --language= */
  /* OPT__library_directory = 49, */         /* --library-directory */
  /* OPT__library_directory_ = 50, */        /* --library-directory= */
  /* OPT__no_canonical_prefixes = 51, */     /* --no-canonical-prefixes */
  /* OPT__no_integrated_cpp = 52, */         /* --no-integrated-cpp */
  /* OPT__no_line_commands = 53, */          /* --no-line-commands */
  /* OPT__no_standard_includes = 54, */      /* --no-standard-includes */
  /* OPT__no_standard_libraries = 55, */     /* --no-standard-libraries */
  OPT__no_sysroot_suffix = 56,               /* --no-sysroot-suffix */
  /* OPT__no_warnings = 57, */               /* --no-warnings */
  /* OPT__optimize = 58, */                  /* --optimize */
  /* OPT__output = 59, */                    /* --output */
  OPT__output_pch_ = 60,                     /* --output-pch= */
  /* OPT__output_ = 61, */                   /* --output= */
  OPT__param = 62,                           /* --param */
  /* OPT__param_ = 63, */                    /* --param= */
  /* OPT__pass_exit_codes = 64, */           /* --pass-exit-codes */
  /* OPT__pedantic = 65, */                  /* --pedantic */
  /* OPT__pedantic_errors = 66, */           /* --pedantic-errors */
  /* OPT__pie = 67, */                       /* --pie */
  /* OPT__pipe = 68, */                      /* --pipe */
  /* OPT__prefix = 69, */                    /* --prefix */
  /* OPT__prefix_ = 70, */                   /* --prefix= */
  /* OPT__preprocess = 71, */                /* --preprocess */
  /* OPT__print_file_name = 72, */           /* --print-file-name */
  /* OPT__print_file_name_ = 73, */          /* --print-file-name= */
  /* OPT__print_libgcc_file_name = 74, */    /* --print-libgcc-file-name */
  /* OPT__print_missing_file_dependencies = 75, *//* --print-missing-file-dependencies */
  /* OPT__print_multi_directory = 76, */     /* --print-multi-directory */
  /* OPT__print_multi_lib = 77, */           /* --print-multi-lib */
  /* OPT__print_multi_os_directory = 78, */  /* --print-multi-os-directory */
  /* OPT__print_multiarch = 79, */           /* --print-multiarch */
  /* OPT__print_prog_name = 80, */           /* --print-prog-name */
  /* OPT__print_prog_name_ = 81, */          /* --print-prog-name= */
  /* OPT__print_search_dirs = 82, */         /* --print-search-dirs */
  /* OPT__print_sysroot = 83, */             /* --print-sysroot */
  /* OPT__print_sysroot_headers_suffix = 84, *//* --print-sysroot-headers-suffix */
  /* OPT__profile = 85, */                   /* --profile */
  /* OPT__save_temps = 86, */                /* --save-temps */
  /* OPT__shared = 87, */                    /* --shared */
  /* OPT__specs = 88, */                     /* --specs */
  /* OPT__specs_ = 89, */                    /* --specs= */
  /* OPT__static = 90, */                    /* --static */
  /* OPT__static_pie = 91, */                /* --static-pie */
  /* OPT__symbolic = 92, */                  /* --symbolic */
  /* OPT__sysroot = 93, */                   /* --sysroot */
  OPT__sysroot_ = 94,                        /* --sysroot= */
  OPT__target_help = 95,                     /* --target-help */
  /* OPT__time = 96, */                      /* --time */
  /* OPT__trace_includes = 97, */            /* --trace-includes */
  /* OPT__traditional = 98, */               /* --traditional */
  /* OPT__traditional_cpp = 99, */           /* --traditional-cpp */
  /* OPT__trigraphs = 100, */                /* --trigraphs */
  /* OPT__undefine_macro = 101, */           /* --undefine-macro */
  /* OPT__undefine_macro_ = 102, */          /* --undefine-macro= */
  /* OPT__user_dependencies = 103, */        /* --user-dependencies */
  /* OPT__verbose = 104, */                  /* --verbose */
  OPT__version = 105,                        /* --version */
  /* OPT__write_dependencies = 106, */       /* --write-dependencies */
  /* OPT__write_user_dependencies = 107, */  /* --write-user-dependencies */
  OPT_A = 108,                               /* -A */
  OPT_B = 109,                               /* -B */
  OPT_C = 110,                               /* -C */
  OPT_CC = 111,                              /* -CC */
  OPT_D = 112,                               /* -D */
  OPT_E = 113,                               /* -E */
  OPT_F = 114,                               /* -F */
  OPT_H = 115,                               /* -H */
  OPT_Hd = 116,                              /* -Hd */
  OPT_Hf = 117,                              /* -Hf */
  OPT_I = 118,                               /* -I */
  OPT_J = 119,                               /* -J */
  OPT_L = 120,                               /* -L */
  OPT_M = 121,                               /* -M */
  OPT_MD = 122,                              /* -MD */
  OPT_MF = 123,                              /* -MF */
  OPT_MG = 124,                              /* -MG */
  OPT_MM = 125,                              /* -MM */
  OPT_MMD = 126,                             /* -MMD */
  OPT_MP = 127,                              /* -MP */
  OPT_MQ = 128,                              /* -MQ */
  OPT_MT = 129,                              /* -MT */
  OPT_N = 130,                               /* -N */
  OPT_O = 131,                               /* -O */
  OPT_Ofast = 132,                           /* -Ofast */
  OPT_Og = 133,                              /* -Og */
  OPT_Os = 134,                              /* -Os */
  OPT_P = 135,                               /* -P */
  OPT_Q = 136,                               /* -Q */
  OPT_Qn = 137,                              /* -Qn */
  OPT_Qy = 138,                              /* -Qy */
  OPT_R = 139,                               /* -R */
  OPT_S = 140,                               /* -S */
  OPT_T = 141,                               /* -T */
  OPT_Tbss = 142,                            /* -Tbss */
  OPT_Tbss_ = 143,                           /* -Tbss= */
  OPT_Tdata = 144,                           /* -Tdata */
  OPT_Tdata_ = 145,                          /* -Tdata= */
  OPT_Ttext = 146,                           /* -Ttext */
  OPT_Ttext_ = 147,                          /* -Ttext= */
  OPT_U = 148,                               /* -U */
  /* OPT_W = 149, */                         /* -W */
  OPT_Wa_ = 150,                             /* -Wa, */
  OPT_Wabi = 151,                            /* -Wabi */
  OPT_Wabi_tag = 152,                        /* -Wabi-tag */
  OPT_Wabi_ = 153,                           /* -Wabi= */
  OPT_Wabsolute_value = 154,                 /* -Wabsolute-value */
  OPT_Waddress = 155,                        /* -Waddress */
  OPT_Waddress_of_packed_member = 156,       /* -Waddress-of-packed-member */
  OPT_Waggregate_return = 157,               /* -Waggregate-return */
  OPT_Waggressive_loop_optimizations = 158,  /* -Waggressive-loop-optimizations */
  OPT_Waliasing = 159,                       /* -Waliasing */
  OPT_Walign_commons = 160,                  /* -Walign-commons */
  /* OPT_Waligned_new = 161, */              /* -Waligned-new */
  OPT_Waligned_new_ = 162,                   /* -Waligned-new= */
  OPT_Wall = 163,                            /* -Wall */
  OPT_Walloc_size_larger_than_ = 164,        /* -Walloc-size-larger-than= */
  OPT_Walloc_zero = 165,                     /* -Walloc-zero */
  OPT_Walloca = 166,                         /* -Walloca */
  OPT_Walloca_larger_than_ = 167,            /* -Walloca-larger-than= */
  OPT_Wampersand = 168,                      /* -Wampersand */
  OPT_Wargument_mismatch = 169,              /* -Wargument-mismatch */
  OPT_Warray_bounds = 170,                   /* -Warray-bounds */
  OPT_Warray_bounds_ = 171,                  /* -Warray-bounds= */
  OPT_Warray_temporaries = 172,              /* -Warray-temporaries */
  OPT_Wassign_intercept = 173,               /* -Wassign-intercept */
  /* OPT_Wattribute_alias = 174, */          /* -Wattribute-alias */
  OPT_Wattribute_alias_ = 175,               /* -Wattribute-alias= */
  OPT_Wattribute_warning = 176,              /* -Wattribute-warning */
  OPT_Wattributes = 177,                     /* -Wattributes */
  OPT_Wbad_function_cast = 178,              /* -Wbad-function-cast */
  OPT_Wbool_compare = 179,                   /* -Wbool-compare */
  OPT_Wbool_operation = 180,                 /* -Wbool-operation */
  OPT_Wbuiltin_declaration_mismatch = 181,   /* -Wbuiltin-declaration-mismatch */
  OPT_Wbuiltin_macro_redefined = 182,        /* -Wbuiltin-macro-redefined */
  OPT_Wc___compat = 183,                     /* -Wc++-compat */
  /* OPT_Wc__0x_compat = 184, */             /* -Wc++0x-compat */
  OPT_Wc__11_compat = 185,                   /* -Wc++11-compat */
  OPT_Wc__14_compat = 186,                   /* -Wc++14-compat */
  OPT_Wc__17_compat = 187,                   /* -Wc++17-compat */
  /* OPT_Wc__1z_compat = 188, */             /* -Wc++1z-compat */
  OPT_Wc__20_compat = 189,                   /* -Wc++20-compat */
  /* OPT_Wc__2a_compat = 190, */             /* -Wc++2a-compat */
  OPT_Wc_binding_type = 191,                 /* -Wc-binding-type */
  OPT_Wc11_c2x_compat = 192,                 /* -Wc11-c2x-compat */
  OPT_Wc90_c99_compat = 193,                 /* -Wc90-c99-compat */
  OPT_Wc99_c11_compat = 194,                 /* -Wc99-c11-compat */
  OPT_Wcannot_profile = 195,                 /* -Wcannot-profile */
  OPT_Wcast_align = 196,                     /* -Wcast-align */
  OPT_Wcast_align_strict = 197,              /* -Wcast-align=strict */
  OPT_Wcast_function_type = 198,             /* -Wcast-function-type */
  OPT_Wcast_qual = 199,                      /* -Wcast-qual */
  OPT_Wcast_result = 200,                    /* -Wcast-result */
  /* OPT_Wcatch_value = 201, */              /* -Wcatch-value */
  OPT_Wcatch_value_ = 202,                   /* -Wcatch-value= */
  OPT_Wchar_subscripts = 203,                /* -Wchar-subscripts */
  OPT_Wcharacter_truncation = 204,           /* -Wcharacter-truncation */
  OPT_Wchkp = 205,                           /* -Wchkp */
  OPT_Wclass_conversion = 206,               /* -Wclass-conversion */
  OPT_Wclass_memaccess = 207,                /* -Wclass-memaccess */
  OPT_Wclobbered = 208,                      /* -Wclobbered */
  OPT_Wcomma_subscript = 209,                /* -Wcomma-subscript */
  OPT_Wcomment = 210,                        /* -Wcomment */
  /* OPT_Wcomments = 211, */                 /* -Wcomments */
  OPT_Wcompare_reals = 212,                  /* -Wcompare-reals */
  OPT_Wconditionally_supported = 213,        /* -Wconditionally-supported */
  OPT_Wconversion = 214,                     /* -Wconversion */
  OPT_Wconversion_extra = 215,               /* -Wconversion-extra */
  OPT_Wconversion_null = 216,                /* -Wconversion-null */
  OPT_Wcoverage_mismatch = 217,              /* -Wcoverage-mismatch */
  OPT_Wcpp = 218,                            /* -Wcpp */
  OPT_Wctor_dtor_privacy = 219,              /* -Wctor-dtor-privacy */
  OPT_Wdangling_else = 220,                  /* -Wdangling-else */
  OPT_Wdate_time = 221,                      /* -Wdate-time */
  OPT_Wdeclaration_after_statement = 222,    /* -Wdeclaration-after-statement */
  OPT_Wdelete_incomplete = 223,              /* -Wdelete-incomplete */
  OPT_Wdelete_non_virtual_dtor = 224,        /* -Wdelete-non-virtual-dtor */
  OPT_Wdeprecated = 225,                     /* -Wdeprecated */
  OPT_Wdeprecated_copy = 226,                /* -Wdeprecated-copy */
  OPT_Wdeprecated_copy_dtor = 227,           /* -Wdeprecated-copy-dtor */
  OPT_Wdeprecated_declarations = 228,        /* -Wdeprecated-declarations */
  OPT_Wdesignated_init = 229,                /* -Wdesignated-init */
  OPT_Wdisabled_optimization = 230,          /* -Wdisabled-optimization */
  OPT_Wdiscarded_array_qualifiers = 231,     /* -Wdiscarded-array-qualifiers */
  OPT_Wdiscarded_qualifiers = 232,           /* -Wdiscarded-qualifiers */
  OPT_Wdiv_by_zero = 233,                    /* -Wdiv-by-zero */
  OPT_Wdo_subscript = 234,                   /* -Wdo-subscript */
  OPT_Wdouble_promotion = 235,               /* -Wdouble-promotion */
  OPT_Wduplicate_decl_specifier = 236,       /* -Wduplicate-decl-specifier */
  OPT_Wduplicated_branches = 237,            /* -Wduplicated-branches */
  OPT_Wduplicated_cond = 238,                /* -Wduplicated-cond */
  OPT_Weffc__ = 239,                         /* -Weffc++ */
  OPT_Wempty_body = 240,                     /* -Wempty-body */
  OPT_Wendif_labels = 241,                   /* -Wendif-labels */
  OPT_Wenum_compare = 242,                   /* -Wenum-compare */
  OPT_Wenum_conversion = 243,                /* -Wenum-conversion */
  OPT_Werror = 244,                          /* -Werror */
  /* OPT_Werror_implicit_function_declaration = 245, *//* -Werror-implicit-function-declaration */
  OPT_Werror_ = 246,                         /* -Werror= */
  OPT_Wexpansion_to_defined = 247,           /* -Wexpansion-to-defined */
  OPT_Wextra = 248,                          /* -Wextra */
  OPT_Wextra_semi = 249,                     /* -Wextra-semi */
  OPT_Wfatal_errors = 250,                   /* -Wfatal-errors */
  OPT_Wfloat_conversion = 251,               /* -Wfloat-conversion */
  OPT_Wfloat_equal = 252,                    /* -Wfloat-equal */
  /* OPT_Wformat = 253, */                   /* -Wformat */
  OPT_Wformat_contains_nul = 254,            /* -Wformat-contains-nul */
  OPT_Wformat_diag = 255,                    /* -Wformat-diag */
  OPT_Wformat_extra_args = 256,              /* -Wformat-extra-args */
  OPT_Wformat_nonliteral = 257,              /* -Wformat-nonliteral */
  /* OPT_Wformat_overflow = 258, */          /* -Wformat-overflow */
  OPT_Wformat_overflow_ = 259,               /* -Wformat-overflow= */
  OPT_Wformat_security = 260,                /* -Wformat-security */
  OPT_Wformat_signedness = 261,              /* -Wformat-signedness */
  /* OPT_Wformat_truncation = 262, */        /* -Wformat-truncation */
  OPT_Wformat_truncation_ = 263,             /* -Wformat-truncation= */
  OPT_Wformat_y2k = 264,                     /* -Wformat-y2k */
  OPT_Wformat_zero_length = 265,             /* -Wformat-zero-length */
  OPT_Wformat_ = 266,                        /* -Wformat= */
  OPT_Wframe_address = 267,                  /* -Wframe-address */
  OPT_Wframe_larger_than_ = 268,             /* -Wframe-larger-than= */
  OPT_Wfree_nonheap_object = 269,            /* -Wfree-nonheap-object */
  OPT_Wfrontend_loop_interchange = 270,      /* -Wfrontend-loop-interchange */
  OPT_Wfunction_elimination = 271,           /* -Wfunction-elimination */
  OPT_Whsa = 272,                            /* -Whsa */
  OPT_Wif_not_aligned = 273,                 /* -Wif-not-aligned */
  OPT_Wignored_attributes = 274,             /* -Wignored-attributes */
  OPT_Wignored_qualifiers = 275,             /* -Wignored-qualifiers */
  OPT_Wimplicit = 276,                       /* -Wimplicit */
  /* OPT_Wimplicit_fallthrough = 277, */     /* -Wimplicit-fallthrough */
  OPT_Wimplicit_fallthrough_ = 278,          /* -Wimplicit-fallthrough= */
  OPT_Wimplicit_function_declaration = 279,  /* -Wimplicit-function-declaration */
  OPT_Wimplicit_int = 280,                   /* -Wimplicit-int */
  OPT_Wimplicit_interface = 281,             /* -Wimplicit-interface */
  OPT_Wimplicit_procedure = 282,             /* -Wimplicit-procedure */
  /* OPT_Wimport = 283, */                   /* -Wimport */
  OPT_Winaccessible_base = 284,              /* -Winaccessible-base */
  OPT_Wincompatible_pointer_types = 285,     /* -Wincompatible-pointer-types */
  OPT_Winherited_variadic_ctor = 286,        /* -Winherited-variadic-ctor */
  OPT_Winit_list_lifetime = 287,             /* -Winit-list-lifetime */
  OPT_Winit_self = 288,                      /* -Winit-self */
  OPT_Winline = 289,                         /* -Winline */
  OPT_Wint_conversion = 290,                 /* -Wint-conversion */
  OPT_Wint_in_bool_context = 291,            /* -Wint-in-bool-context */
  OPT_Wint_to_pointer_cast = 292,            /* -Wint-to-pointer-cast */
  OPT_Winteger_division = 293,               /* -Winteger-division */
  OPT_Wintrinsic_shadow = 294,               /* -Wintrinsic-shadow */
  OPT_Wintrinsics_std = 295,                 /* -Wintrinsics-std */
  OPT_Winvalid_memory_model = 296,           /* -Winvalid-memory-model */
  OPT_Winvalid_offsetof = 297,               /* -Winvalid-offsetof */
  OPT_Winvalid_pch = 298,                    /* -Winvalid-pch */
  OPT_Wjump_misses_init = 299,               /* -Wjump-misses-init */
  OPT_Wl_ = 300,                             /* -Wl, */
  /* OPT_Wlarger_than_ = 301, */             /* -Wlarger-than- */
  OPT_Wlarger_than_ = 302,                   /* -Wlarger-than= */
  OPT_Wline_truncation = 303,                /* -Wline-truncation */
  OPT_Wliteral_suffix = 304,                 /* -Wliteral-suffix */
  OPT_Wlogical_not_parentheses = 305,        /* -Wlogical-not-parentheses */
  OPT_Wlogical_op = 306,                     /* -Wlogical-op */
  OPT_Wlong_long = 307,                      /* -Wlong-long */
  OPT_Wlto_type_mismatch = 308,              /* -Wlto-type-mismatch */
  OPT_Wmain = 309,                           /* -Wmain */
  OPT_Wmaybe_uninitialized = 310,            /* -Wmaybe-uninitialized */
  OPT_Wmemset_elt_size = 311,                /* -Wmemset-elt-size */
  OPT_Wmemset_transposed_args = 312,         /* -Wmemset-transposed-args */
  OPT_Wmisleading_indentation = 313,         /* -Wmisleading-indentation */
  OPT_Wmissing_attributes = 314,             /* -Wmissing-attributes */
  OPT_Wmissing_braces = 315,                 /* -Wmissing-braces */
  OPT_Wmissing_declarations = 316,           /* -Wmissing-declarations */
  OPT_Wmissing_field_initializers = 317,     /* -Wmissing-field-initializers */
  /* OPT_Wmissing_format_attribute = 318, */ /* -Wmissing-format-attribute */
  OPT_Wmissing_include_dirs = 319,           /* -Wmissing-include-dirs */
  /* OPT_Wmissing_noreturn = 320, */         /* -Wmissing-noreturn */
  OPT_Wmissing_parameter_type = 321,         /* -Wmissing-parameter-type */
  OPT_Wmissing_profile = 322,                /* -Wmissing-profile */
  OPT_Wmissing_prototypes = 323,             /* -Wmissing-prototypes */
  OPT_Wmudflap = 324,                        /* -Wmudflap */
  OPT_Wmultichar = 325,                      /* -Wmultichar */
  OPT_Wmultiple_inheritance = 326,           /* -Wmultiple-inheritance */
  OPT_Wmultistatement_macros = 327,          /* -Wmultistatement-macros */
  OPT_Wnamespaces = 328,                     /* -Wnamespaces */
  OPT_Wnarrowing = 329,                      /* -Wnarrowing */
  OPT_Wnested_externs = 330,                 /* -Wnested-externs */
  /* OPT_Wno_alloc_size_larger_than = 331, *//* -Wno-alloc-size-larger-than */
  /* OPT_Wno_alloca_larger_than = 332, */    /* -Wno-alloca-larger-than */
  /* OPT_Wno_vla_larger_than = 333, */       /* -Wno-vla-larger-than */
  OPT_Wnoexcept = 334,                       /* -Wnoexcept */
  OPT_Wnoexcept_type = 335,                  /* -Wnoexcept-type */
  OPT_Wnon_template_friend = 336,            /* -Wnon-template-friend */
  OPT_Wnon_virtual_dtor = 337,               /* -Wnon-virtual-dtor */
  OPT_Wnonnull = 338,                        /* -Wnonnull */
  OPT_Wnonnull_compare = 339,                /* -Wnonnull-compare */
  /* OPT_Wnormalized = 340, */               /* -Wnormalized */
  OPT_Wnormalized_ = 341,                    /* -Wnormalized= */
  OPT_Wnull_dereference = 342,               /* -Wnull-dereference */
  OPT_Wodr = 343,                            /* -Wodr */
  OPT_Wold_style_cast = 344,                 /* -Wold-style-cast */
  OPT_Wold_style_declaration = 345,          /* -Wold-style-declaration */
  OPT_Wold_style_definition = 346,           /* -Wold-style-definition */
  OPT_Wopenmp_simd = 347,                    /* -Wopenmp-simd */
  OPT_Woverflow = 348,                       /* -Woverflow */
  OPT_Woverlength_strings = 349,             /* -Woverlength-strings */
  OPT_Woverloaded_virtual = 350,             /* -Woverloaded-virtual */
  OPT_Woverride_init = 351,                  /* -Woverride-init */
  OPT_Woverride_init_side_effects = 352,     /* -Woverride-init-side-effects */
  OPT_Wp_ = 353,                             /* -Wp, */
  OPT_Wpacked = 354,                         /* -Wpacked */
  OPT_Wpacked_bitfield_compat = 355,         /* -Wpacked-bitfield-compat */
  OPT_Wpacked_not_aligned = 356,             /* -Wpacked-not-aligned */
  OPT_Wpadded = 357,                         /* -Wpadded */
  OPT_Wparentheses = 358,                    /* -Wparentheses */
  OPT_Wpedantic = 359,                       /* -Wpedantic */
  OPT_Wpessimizing_move = 360,               /* -Wpessimizing-move */
  /* OPT_Wplacement_new = 361, */            /* -Wplacement-new */
  OPT_Wplacement_new_ = 362,                 /* -Wplacement-new= */
  OPT_Wpmf_conversions = 363,                /* -Wpmf-conversions */
  OPT_Wpointer_arith = 364,                  /* -Wpointer-arith */
  OPT_Wpointer_compare = 365,                /* -Wpointer-compare */
  OPT_Wpointer_sign = 366,                   /* -Wpointer-sign */
  OPT_Wpointer_to_int_cast = 367,            /* -Wpointer-to-int-cast */
  OPT_Wpragmas = 368,                        /* -Wpragmas */
  OPT_Wprio_ctor_dtor = 369,                 /* -Wprio-ctor-dtor */
  OPT_Wproperty_assign_default = 370,        /* -Wproperty-assign-default */
  OPT_Wprotocol = 371,                       /* -Wprotocol */
  OPT_Wpsabi = 372,                          /* -Wpsabi */
  OPT_Wreal_q_constant = 373,                /* -Wreal-q-constant */
  OPT_Wrealloc_lhs = 374,                    /* -Wrealloc-lhs */
  OPT_Wrealloc_lhs_all = 375,                /* -Wrealloc-lhs-all */
  OPT_Wredundant_decls = 376,                /* -Wredundant-decls */
  OPT_Wredundant_move = 377,                 /* -Wredundant-move */
  OPT_Wregister = 378,                       /* -Wregister */
  OPT_Wreorder = 379,                        /* -Wreorder */
  OPT_Wrestrict = 380,                       /* -Wrestrict */
  OPT_Wreturn_local_addr = 381,              /* -Wreturn-local-addr */
  OPT_Wreturn_type = 382,                    /* -Wreturn-type */
  OPT_Wscalar_storage_order = 383,           /* -Wscalar-storage-order */
  OPT_Wselector = 384,                       /* -Wselector */
  OPT_Wsequence_point = 385,                 /* -Wsequence-point */
  OPT_Wshadow = 386,                         /* -Wshadow */
  /* OPT_Wshadow_compatible_local = 387, */  /* -Wshadow-compatible-local */
  OPT_Wshadow_ivar = 388,                    /* -Wshadow-ivar */
  /* OPT_Wshadow_local = 389, */             /* -Wshadow-local */
  OPT_Wshadow_compatible_local = 390,        /* -Wshadow=compatible-local */
  /* OPT_Wshadow_global = 391, */            /* -Wshadow=global */
  OPT_Wshadow_local = 392,                   /* -Wshadow=local */
  OPT_Wshift_count_negative = 393,           /* -Wshift-count-negative */
  OPT_Wshift_count_overflow = 394,           /* -Wshift-count-overflow */
  OPT_Wshift_negative_value = 395,           /* -Wshift-negative-value */
  /* OPT_Wshift_overflow = 396, */           /* -Wshift-overflow */
  OPT_Wshift_overflow_ = 397,                /* -Wshift-overflow= */
  OPT_Wsign_compare = 398,                   /* -Wsign-compare */
  OPT_Wsign_conversion = 399,                /* -Wsign-conversion */
  OPT_Wsign_promo = 400,                     /* -Wsign-promo */
  OPT_Wsized_deallocation = 401,             /* -Wsized-deallocation */
  OPT_Wsizeof_array_argument = 402,          /* -Wsizeof-array-argument */
  OPT_Wsizeof_pointer_div = 403,             /* -Wsizeof-pointer-div */
  OPT_Wsizeof_pointer_memaccess = 404,       /* -Wsizeof-pointer-memaccess */
  OPT_Wspeculative = 405,                    /* -Wspeculative */
  OPT_Wstack_protector = 406,                /* -Wstack-protector */
  OPT_Wstack_usage_ = 407,                   /* -Wstack-usage= */
  OPT_Wstrict_aliasing = 408,                /* -Wstrict-aliasing */
  OPT_Wstrict_aliasing_ = 409,               /* -Wstrict-aliasing= */
  OPT_Wstrict_null_sentinel = 410,           /* -Wstrict-null-sentinel */
  OPT_Wstrict_overflow = 411,                /* -Wstrict-overflow */
  OPT_Wstrict_overflow_ = 412,               /* -Wstrict-overflow= */
  OPT_Wstrict_prototypes = 413,              /* -Wstrict-prototypes */
  OPT_Wstrict_selector_match = 414,          /* -Wstrict-selector-match */
  /* OPT_Wstringop_overflow = 415, */        /* -Wstringop-overflow */
  OPT_Wstringop_overflow_ = 416,             /* -Wstringop-overflow= */
  OPT_Wstringop_truncation = 417,            /* -Wstringop-truncation */
  OPT_Wsubobject_linkage = 418,              /* -Wsubobject-linkage */
  OPT_Wsuggest_attribute_cold = 419,         /* -Wsuggest-attribute=cold */
  OPT_Wsuggest_attribute_const = 420,        /* -Wsuggest-attribute=const */
  OPT_Wsuggest_attribute_format = 421,       /* -Wsuggest-attribute=format */
  OPT_Wsuggest_attribute_malloc = 422,       /* -Wsuggest-attribute=malloc */
  OPT_Wsuggest_attribute_noreturn = 423,     /* -Wsuggest-attribute=noreturn */
  OPT_Wsuggest_attribute_pure = 424,         /* -Wsuggest-attribute=pure */
  OPT_Wsuggest_final_methods = 425,          /* -Wsuggest-final-methods */
  OPT_Wsuggest_final_types = 426,            /* -Wsuggest-final-types */
  OPT_Wsuggest_override = 427,               /* -Wsuggest-override */
  OPT_Wsurprising = 428,                     /* -Wsurprising */
  OPT_Wswitch = 429,                         /* -Wswitch */
  OPT_Wswitch_bool = 430,                    /* -Wswitch-bool */
  OPT_Wswitch_default = 431,                 /* -Wswitch-default */
  OPT_Wswitch_enum = 432,                    /* -Wswitch-enum */
  OPT_Wswitch_outside_range = 433,           /* -Wswitch-outside-range */
  OPT_Wswitch_unreachable = 434,             /* -Wswitch-unreachable */
  OPT_Wsync_nand = 435,                      /* -Wsync-nand */
  OPT_Wsynth = 436,                          /* -Wsynth */
  OPT_Wsystem_headers = 437,                 /* -Wsystem-headers */
  OPT_Wtabs = 438,                           /* -Wtabs */
  OPT_Wtarget_lifetime = 439,                /* -Wtarget-lifetime */
  OPT_Wtautological_compare = 440,           /* -Wtautological-compare */
  OPT_Wtemplates = 441,                      /* -Wtemplates */
  OPT_Wterminate = 442,                      /* -Wterminate */
  OPT_Wtraditional = 443,                    /* -Wtraditional */
  OPT_Wtraditional_conversion = 444,         /* -Wtraditional-conversion */
  OPT_Wtrampolines = 445,                    /* -Wtrampolines */
  OPT_Wtrigraphs = 446,                      /* -Wtrigraphs */
  OPT_Wtype_limits = 447,                    /* -Wtype-limits */
  OPT_Wundeclared_selector = 448,            /* -Wundeclared-selector */
  OPT_Wundef = 449,                          /* -Wundef */
  OPT_Wundefined_do_loop = 450,              /* -Wundefined-do-loop */
  OPT_Wunderflow = 451,                      /* -Wunderflow */
  OPT_Wuninitialized = 452,                  /* -Wuninitialized */
  OPT_Wunknown_pragmas = 453,                /* -Wunknown-pragmas */
  /* OPT_Wunreachable_code = 454, */         /* -Wunreachable-code */
  /* OPT_Wunsafe_loop_optimizations = 455, *//* -Wunsafe-loop-optimizations */
  OPT_Wunsuffixed_float_constants = 456,     /* -Wunsuffixed-float-constants */
  OPT_Wunused = 457,                         /* -Wunused */
  OPT_Wunused_but_set_parameter = 458,       /* -Wunused-but-set-parameter */
  OPT_Wunused_but_set_variable = 459,        /* -Wunused-but-set-variable */
  /* OPT_Wunused_const_variable = 460, */    /* -Wunused-const-variable */
  OPT_Wunused_const_variable_ = 461,         /* -Wunused-const-variable= */
  OPT_Wunused_dummy_argument = 462,          /* -Wunused-dummy-argument */
  OPT_Wunused_function = 463,                /* -Wunused-function */
  OPT_Wunused_label = 464,                   /* -Wunused-label */
  OPT_Wunused_local_typedefs = 465,          /* -Wunused-local-typedefs */
  OPT_Wunused_macros = 466,                  /* -Wunused-macros */
  OPT_Wunused_parameter = 467,               /* -Wunused-parameter */
  OPT_Wunused_result = 468,                  /* -Wunused-result */
  OPT_Wunused_value = 469,                   /* -Wunused-value */
  OPT_Wunused_variable = 470,                /* -Wunused-variable */
  OPT_Wuse_without_only = 471,               /* -Wuse-without-only */
  OPT_Wuseless_cast = 472,                   /* -Wuseless-cast */
  OPT_Wvarargs = 473,                        /* -Wvarargs */
  OPT_Wvariadic_macros = 474,                /* -Wvariadic-macros */
  OPT_Wvector_operation_performance = 475,   /* -Wvector-operation-performance */
  OPT_Wvirtual_inheritance = 476,            /* -Wvirtual-inheritance */
  OPT_Wvirtual_move_assign = 477,            /* -Wvirtual-move-assign */
  OPT_Wvla = 478,                            /* -Wvla */
  OPT_Wvla_larger_than_ = 479,               /* -Wvla-larger-than= */
  OPT_Wvolatile = 480,                       /* -Wvolatile */
  OPT_Wvolatile_register_var = 481,          /* -Wvolatile-register-var */
  OPT_Wwrite_strings = 482,                  /* -Wwrite-strings */
  OPT_Wzero_as_null_pointer_constant = 483,  /* -Wzero-as-null-pointer-constant */
  OPT_Wzerotrip = 484,                       /* -Wzerotrip */
  OPT_X = 485,                               /* -X */
  OPT_Xassembler = 486,                      /* -Xassembler */
  OPT_Xf = 487,                              /* -Xf */
  OPT_Xlinker = 488,                         /* -Xlinker */
  OPT_Xpreprocessor = 489,                   /* -Xpreprocessor */
  OPT_Z = 490,                               /* -Z */
  OPT_ansi = 491,                            /* -ansi */
  OPT_aux_info = 492,                        /* -aux-info */
  /* OPT_aux_info_ = 493, */                 /* -aux-info= */
  OPT_auxbase = 494,                         /* -auxbase */
  OPT_auxbase_strip = 495,                   /* -auxbase-strip */
  OPT_c = 496,                               /* -c */
  OPT_callgraph = 497,                       /* -callgraph */
  OPT_coverage = 498,                        /* -coverage */
  OPT_cpp = 499,                             /* -cpp */
  OPT_cpp_ = 500,                            /* -cpp= */
  OPT_d = 501,                               /* -d */
  OPT_debuglib_ = 502,                       /* -debuglib= */
  OPT_defaultlib_ = 503,                     /* -defaultlib= */
  OPT_defined_only = 504,                    /* -defined-only */
  OPT_demangle = 505,                        /* -demangle */
  OPT_dstartfiles = 506,                     /* -dstartfiles */
  OPT_dump_body_ = 507,                      /* -dump-body= */
  OPT_dump_level_ = 508,                     /* -dump-level= */
  OPT_dumpbase = 509,                        /* -dumpbase */
  OPT_dumpdir = 510,                         /* -dumpdir */
  OPT_dumpfullversion = 511,                 /* -dumpfullversion */
  OPT_dumpmachine = 512,                     /* -dumpmachine */
  OPT_dumpspecs = 513,                       /* -dumpspecs */
  OPT_dumpversion = 514,                     /* -dumpversion */
  OPT_e = 515,                               /* -e */
  OPT_export_dynamic = 516,                  /* -export-dynamic */
  OPT_fPIC = 517,                            /* -fPIC */
  OPT_fPIE = 518,                            /* -fPIE */
  OPT_fRTS_ = 519,                           /* -fRTS= */
  OPT_fabi_compat_version_ = 520,            /* -fabi-compat-version= */
  OPT_fabi_version_ = 521,                   /* -fabi-version= */
  OPT_faccess_control = 522,                 /* -faccess-control */
  OPT_fada_spec_parent_ = 523,               /* -fada-spec-parent= */
  OPT_faggressive_function_elimination = 524,/* -faggressive-function-elimination */
  OPT_faggressive_loop_optimizations = 525,  /* -faggressive-loop-optimizations */
  OPT_falign_commons = 526,                  /* -falign-commons */
  OPT_falign_functions = 527,                /* -falign-functions */
  OPT_falign_functions_ = 528,               /* -falign-functions= */
  OPT_falign_jumps = 529,                    /* -falign-jumps */
  OPT_falign_jumps_ = 530,                   /* -falign-jumps= */
  OPT_falign_labels = 531,                   /* -falign-labels */
  OPT_falign_labels_ = 532,                  /* -falign-labels= */
  OPT_falign_loops = 533,                    /* -falign-loops */
  OPT_falign_loops_ = 534,                   /* -falign-loops= */
  /* OPT_faligned_new = 535, */              /* -faligned-new */
  OPT_faligned_new_ = 536,                   /* -faligned-new= */
  OPT_fall_instantiations = 537,             /* -fall-instantiations */
  OPT_fall_intrinsics = 538,                 /* -fall-intrinsics */
  OPT_fall_virtual = 539,                    /* -fall-virtual */
  OPT_fallocation_dce = 540,                 /* -fallocation-dce */
  OPT_fallow_argument_mismatch = 541,        /* -fallow-argument-mismatch */
  OPT_fallow_invalid_boz = 542,              /* -fallow-invalid-boz */
  OPT_fallow_leading_underscore = 543,       /* -fallow-leading-underscore */
  OPT_fallow_parameterless_variadic_functions = 544,/* -fallow-parameterless-variadic-functions */
  OPT_falt_external_templates = 545,         /* -falt-external-templates */
  /* OPT_fargument_alias = 546, */           /* -fargument-alias */
  /* OPT_fargument_noalias = 547, */         /* -fargument-noalias */
  /* OPT_fargument_noalias_anything = 548, *//* -fargument-noalias-anything */
  /* OPT_fargument_noalias_global = 549, */  /* -fargument-noalias-global */
  OPT_fasan_shadow_offset_ = 550,            /* -fasan-shadow-offset= */
  OPT_fasm = 551,                            /* -fasm */
  OPT_fassert = 552,                         /* -fassert */
  OPT_fassociative_math = 553,               /* -fassociative-math */
  OPT_fassume_phsa = 554,                    /* -fassume-phsa */
  OPT_fasynchronous_unwind_tables = 555,     /* -fasynchronous-unwind-tables */
  OPT_fauto_inc_dec = 556,                   /* -fauto-inc-dec */
  OPT_fauto_profile = 557,                   /* -fauto-profile */
  OPT_fauto_profile_ = 558,                  /* -fauto-profile= */
  OPT_fautomatic = 559,                      /* -fautomatic */
  OPT_fbackslash = 560,                      /* -fbackslash */
  OPT_fbacktrace = 561,                      /* -fbacktrace */
  OPT_fblas_matmul_limit_ = 562,             /* -fblas-matmul-limit= */
  OPT_fbounds_check = 563,                   /* -fbounds-check */
  OPT_fbounds_check_ = 564,                  /* -fbounds-check= */
  OPT_fbranch_count_reg = 565,               /* -fbranch-count-reg */
  OPT_fbranch_probabilities = 566,           /* -fbranch-probabilities */
  /* OPT_fbranch_target_load_optimize = 567, *//* -fbranch-target-load-optimize */
  /* OPT_fbranch_target_load_optimize2 = 568, *//* -fbranch-target-load-optimize2 */
  /* OPT_fbtr_bb_exclusive = 569, */         /* -fbtr-bb-exclusive */
  OPT_fbuilding_libgcc = 570,                /* -fbuilding-libgcc */
  OPT_fbuilding_libphobos_tests = 571,       /* -fbuilding-libphobos-tests */
  OPT_fbuiltin = 572,                        /* -fbuiltin */
  OPT_fbuiltin_ = 573,                       /* -fbuiltin- */
  OPT_fbuiltin_printf = 574,                 /* -fbuiltin-printf */
  OPT_fc_prototypes = 575,                   /* -fc-prototypes */
  OPT_fc_prototypes_external = 576,          /* -fc-prototypes-external */
  OPT_fcall_saved_ = 577,                    /* -fcall-saved- */
  OPT_fcall_used_ = 578,                     /* -fcall-used- */
  OPT_fcaller_saves = 579,                   /* -fcaller-saves */
  OPT_fcanonical_system_headers = 580,       /* -fcanonical-system-headers */
  /* OPT_fcf_protection = 581, */            /* -fcf-protection */
  OPT_fcf_protection_ = 582,                 /* -fcf-protection= */
  OPT_fchar8_t = 583,                        /* -fchar8_t */
  OPT_fcheck_array_temporaries = 584,        /* -fcheck-array-temporaries */
  /* OPT_fcheck_data_deps = 585, */          /* -fcheck-data-deps */
  OPT_fcheck_new = 586,                      /* -fcheck-new */
  OPT_fcheck_pointer_bounds = 587,           /* -fcheck-pointer-bounds */
  OPT_fcheck_ = 588,                         /* -fcheck= */
  OPT_fchecking = 589,                       /* -fchecking */
  OPT_fchecking_ = 590,                      /* -fchecking= */
  OPT_fchkp_check_incomplete_type = 591,     /* -fchkp-check-incomplete-type */
  OPT_fchkp_check_read = 592,                /* -fchkp-check-read */
  OPT_fchkp_check_write = 593,               /* -fchkp-check-write */
  OPT_fchkp_first_field_has_own_bounds = 594,/* -fchkp-first-field-has-own-bounds */
  OPT_fchkp_flexible_struct_trailing_arrays = 595,/* -fchkp-flexible-struct-trailing-arrays */
  OPT_fchkp_instrument_calls = 596,          /* -fchkp-instrument-calls */
  OPT_fchkp_instrument_marked_only = 597,    /* -fchkp-instrument-marked-only */
  OPT_fchkp_narrow_bounds = 598,             /* -fchkp-narrow-bounds */
  OPT_fchkp_narrow_to_innermost_array = 599, /* -fchkp-narrow-to-innermost-array */
  OPT_fchkp_optimize = 600,                  /* -fchkp-optimize */
  OPT_fchkp_store_bounds = 601,              /* -fchkp-store-bounds */
  OPT_fchkp_treat_zero_dynamic_size_as_infinite = 602,/* -fchkp-treat-zero-dynamic-size-as-infinite */
  OPT_fchkp_use_fast_string_functions = 603, /* -fchkp-use-fast-string-functions */
  OPT_fchkp_use_nochk_string_functions = 604,/* -fchkp-use-nochk-string-functions */
  OPT_fchkp_use_static_bounds = 605,         /* -fchkp-use-static-bounds */
  OPT_fchkp_use_static_const_bounds = 606,   /* -fchkp-use-static-const-bounds */
  OPT_fchkp_use_wrappers = 607,              /* -fchkp-use-wrappers */
  OPT_fchkp_zero_input_bounds_for_main = 608,/* -fchkp-zero-input-bounds-for-main */
  /* OPT_fcilkplus = 609, */                 /* -fcilkplus */
  OPT_fcoarray_ = 610,                       /* -fcoarray= */
  OPT_fcode_hoisting = 611,                  /* -fcode-hoisting */
  OPT_fcombine_stack_adjustments = 612,      /* -fcombine-stack-adjustments */
  OPT_fcommon = 613,                         /* -fcommon */
  OPT_fcompare_debug = 614,                  /* -fcompare-debug */
  OPT_fcompare_debug_second = 615,           /* -fcompare-debug-second */
  OPT_fcompare_debug_ = 616,                 /* -fcompare-debug= */
  OPT_fcompare_elim = 617,                   /* -fcompare-elim */
  OPT_fconcepts = 618,                       /* -fconcepts */
  OPT_fcond_mismatch = 619,                  /* -fcond-mismatch */
  /* OPT_fconserve_space = 620, */           /* -fconserve-space */
  OPT_fconserve_stack = 621,                 /* -fconserve-stack */
  OPT_fconstant_string_class_ = 622,         /* -fconstant-string-class= */
  OPT_fconstexpr_cache_depth_ = 623,         /* -fconstexpr-cache-depth= */
  OPT_fconstexpr_depth_ = 624,               /* -fconstexpr-depth= */
  OPT_fconstexpr_loop_limit_ = 625,          /* -fconstexpr-loop-limit= */
  OPT_fconstexpr_ops_limit_ = 626,           /* -fconstexpr-ops-limit= */
  OPT_fconvert_ = 627,                       /* -fconvert= */
  OPT_fcprop_registers = 628,                /* -fcprop-registers */
  OPT_fcray_pointer = 629,                   /* -fcray-pointer */
  OPT_fcrossjumping = 630,                   /* -fcrossjumping */
  OPT_fcse_follow_jumps = 631,               /* -fcse-follow-jumps */
  /* OPT_fcse_skip_blocks = 632, */          /* -fcse-skip-blocks */
  OPT_fcx_fortran_rules = 633,               /* -fcx-fortran-rules */
  OPT_fcx_limited_range = 634,               /* -fcx-limited-range */
  OPT_fd_lines_as_code = 635,                /* -fd-lines-as-code */
  OPT_fd_lines_as_comments = 636,            /* -fd-lines-as-comments */
  OPT_fdata_sections = 637,                  /* -fdata-sections */
  OPT_fdbg_cnt_list = 638,                   /* -fdbg-cnt-list */
  OPT_fdbg_cnt_ = 639,                       /* -fdbg-cnt= */
  OPT_fdce = 640,                            /* -fdce */
  OPT_fdebug = 641,                          /* -fdebug */
  OPT_fdebug_cpp = 642,                      /* -fdebug-cpp */
  OPT_fdebug_prefix_map_ = 643,              /* -fdebug-prefix-map= */
  OPT_fdebug_types_section = 644,            /* -fdebug-types-section */
  OPT_fdebug_ = 645,                         /* -fdebug= */
  OPT_fdec = 646,                            /* -fdec */
  OPT_fdec_blank_format_item = 647,          /* -fdec-blank-format-item */
  OPT_fdec_format_defaults = 648,            /* -fdec-format-defaults */
  OPT_fdec_include = 649,                    /* -fdec-include */
  OPT_fdec_intrinsic_ints = 650,             /* -fdec-intrinsic-ints */
  OPT_fdec_math = 651,                       /* -fdec-math */
  OPT_fdec_static = 652,                     /* -fdec-static */
  OPT_fdec_structure = 653,                  /* -fdec-structure */
  OPT_fdeclone_ctor_dtor = 654,              /* -fdeclone-ctor-dtor */
  /* OPT_fdeduce_init_list = 655, */         /* -fdeduce-init-list */
  OPT_fdefault_double_8 = 656,               /* -fdefault-double-8 */
  /* OPT_fdefault_inline = 657, */           /* -fdefault-inline */
  OPT_fdefault_integer_8 = 658,              /* -fdefault-integer-8 */
  OPT_fdefault_real_10 = 659,                /* -fdefault-real-10 */
  OPT_fdefault_real_16 = 660,                /* -fdefault-real-16 */
  OPT_fdefault_real_8 = 661,                 /* -fdefault-real-8 */
  OPT_fdefer_pop = 662,                      /* -fdefer-pop */
  OPT_fdelayed_branch = 663,                 /* -fdelayed-branch */
  OPT_fdelete_dead_exceptions = 664,         /* -fdelete-dead-exceptions */
  OPT_fdelete_null_pointer_checks = 665,     /* -fdelete-null-pointer-checks */
  OPT_fdevirtualize = 666,                   /* -fdevirtualize */
  OPT_fdevirtualize_at_ltrans = 667,         /* -fdevirtualize-at-ltrans */
  OPT_fdevirtualize_speculatively = 668,     /* -fdevirtualize-speculatively */
  /* OPT_fdiagnostics_color = 669, */        /* -fdiagnostics-color */
  OPT_fdiagnostics_color_ = 670,             /* -fdiagnostics-color= */
  OPT_fdiagnostics_format_ = 671,            /* -fdiagnostics-format= */
  OPT_fdiagnostics_generate_patch = 672,     /* -fdiagnostics-generate-patch */
  OPT_fdiagnostics_minimum_margin_width_ = 673,/* -fdiagnostics-minimum-margin-width= */
  OPT_fdiagnostics_parseable_fixits = 674,   /* -fdiagnostics-parseable-fixits */
  OPT_fdiagnostics_show_caret = 675,         /* -fdiagnostics-show-caret */
  OPT_fdiagnostics_show_labels = 676,        /* -fdiagnostics-show-labels */
  OPT_fdiagnostics_show_line_numbers = 677,  /* -fdiagnostics-show-line-numbers */
  OPT_fdiagnostics_show_location_ = 678,     /* -fdiagnostics-show-location= */
  OPT_fdiagnostics_show_option = 679,        /* -fdiagnostics-show-option */
  OPT_fdiagnostics_show_template_tree = 680, /* -fdiagnostics-show-template-tree */
  OPT_fdirectives_only = 681,                /* -fdirectives-only */
  OPT_fdisable_ = 682,                       /* -fdisable- */
  OPT_fdoc = 683,                            /* -fdoc */
  OPT_fdoc_dir_ = 684,                       /* -fdoc-dir= */
  OPT_fdoc_file_ = 685,                      /* -fdoc-file= */
  OPT_fdoc_inc_ = 686,                       /* -fdoc-inc= */
  OPT_fdollar_ok = 687,                      /* -fdollar-ok */
  OPT_fdollars_in_identifiers = 688,         /* -fdollars-in-identifiers */
  OPT_fdruntime = 689,                       /* -fdruntime */
  OPT_fdse = 690,                            /* -fdse */
  OPT_fdump_ = 691,                          /* -fdump- */
  OPT_fdump_ada_spec = 692,                  /* -fdump-ada-spec */
  OPT_fdump_ada_spec_slim = 693,             /* -fdump-ada-spec-slim */
  /* OPT_fdump_core = 694, */                /* -fdump-core */
  OPT_fdump_d_original = 695,                /* -fdump-d-original */
  OPT_fdump_final_insns = 696,               /* -fdump-final-insns */
  OPT_fdump_final_insns_ = 697,              /* -fdump-final-insns= */
  OPT_fdump_fortran_global = 698,            /* -fdump-fortran-global */
  OPT_fdump_fortran_optimized = 699,         /* -fdump-fortran-optimized */
  OPT_fdump_fortran_original = 700,          /* -fdump-fortran-original */
  OPT_fdump_go_spec_ = 701,                  /* -fdump-go-spec= */
  OPT_fdump_internal_locations = 702,        /* -fdump-internal-locations */
  OPT_fdump_noaddr = 703,                    /* -fdump-noaddr */
  /* OPT_fdump_parse_tree = 704, */          /* -fdump-parse-tree */
  OPT_fdump_passes = 705,                    /* -fdump-passes */
  OPT_fdump_scos = 706,                      /* -fdump-scos */
  OPT_fdump_unnumbered = 707,                /* -fdump-unnumbered */
  OPT_fdump_unnumbered_links = 708,          /* -fdump-unnumbered-links */
  OPT_fdwarf2_cfi_asm = 709,                 /* -fdwarf2-cfi-asm */
  OPT_fearly_inlining = 710,                 /* -fearly-inlining */
  OPT_felide_constructors = 711,             /* -felide-constructors */
  OPT_felide_type = 712,                     /* -felide-type */
  /* OPT_feliminate_dwarf2_dups = 713, */    /* -feliminate-dwarf2-dups */
  OPT_feliminate_unused_debug_symbols = 714, /* -feliminate-unused-debug-symbols */
  OPT_feliminate_unused_debug_types = 715,   /* -feliminate-unused-debug-types */
  OPT_femit_class_debug_always = 716,        /* -femit-class-debug-always */
  OPT_femit_struct_debug_baseonly = 717,     /* -femit-struct-debug-baseonly */
  OPT_femit_struct_debug_detailed_ = 718,    /* -femit-struct-debug-detailed= */
  OPT_femit_struct_debug_reduced = 719,      /* -femit-struct-debug-reduced */
  OPT_fenable_ = 720,                        /* -fenable- */
  OPT_fenforce_eh_specs = 721,               /* -fenforce-eh-specs */
  OPT_fenum_int_equiv = 722,                 /* -fenum-int-equiv */
  OPT_fexceptions = 723,                     /* -fexceptions */
  OPT_fexcess_precision_ = 724,              /* -fexcess-precision= */
  OPT_fexec_charset_ = 725,                  /* -fexec-charset= */
  OPT_fexpensive_optimizations = 726,        /* -fexpensive-optimizations */
  OPT_fext_numeric_literals = 727,           /* -fext-numeric-literals */
  OPT_fextended_identifiers = 728,           /* -fextended-identifiers */
  OPT_fextern_tls_init = 729,                /* -fextern-tls-init */
  OPT_fexternal_blas = 730,                  /* -fexternal-blas */
  OPT_fexternal_templates = 731,             /* -fexternal-templates */
  OPT_ff2c = 732,                            /* -ff2c */
  OPT_ffast_math = 733,                      /* -ffast-math */
  OPT_ffat_lto_objects = 734,                /* -ffat-lto-objects */
  OPT_ffile_prefix_map_ = 735,               /* -ffile-prefix-map= */
  OPT_ffinite_loops = 736,                   /* -ffinite-loops */
  OPT_ffinite_math_only = 737,               /* -ffinite-math-only */
  OPT_ffixed_ = 738,                         /* -ffixed- */
  OPT_ffixed_form = 739,                     /* -ffixed-form */
  OPT_ffixed_line_length_ = 740,             /* -ffixed-line-length- */
  OPT_ffixed_line_length_none = 741,         /* -ffixed-line-length-none */
  OPT_ffloat_store = 742,                    /* -ffloat-store */
  OPT_ffor_scope = 743,                      /* -ffor-scope */
  /* OPT_fforce_addr = 744, */               /* -fforce-addr */
  OPT_fforward_propagate = 745,              /* -fforward-propagate */
  OPT_ffp_contract_ = 746,                   /* -ffp-contract= */
  OPT_ffp_int_builtin_inexact = 747,         /* -ffp-int-builtin-inexact */
  OPT_ffpe_summary_ = 748,                   /* -ffpe-summary= */
  OPT_ffpe_trap_ = 749,                      /* -ffpe-trap= */
  OPT_ffree_form = 750,                      /* -ffree-form */
  OPT_ffree_line_length_ = 751,              /* -ffree-line-length- */
  OPT_ffree_line_length_none = 752,          /* -ffree-line-length-none */
  OPT_ffreestanding = 753,                   /* -ffreestanding */
  OPT_ffriend_injection = 754,               /* -ffriend-injection */
  OPT_ffrontend_loop_interchange = 755,      /* -ffrontend-loop-interchange */
  OPT_ffrontend_optimize = 756,              /* -ffrontend-optimize */
  OPT_ffunction_cse = 757,                   /* -ffunction-cse */
  OPT_ffunction_sections = 758,              /* -ffunction-sections */
  OPT_fgcse = 759,                           /* -fgcse */
  OPT_fgcse_after_reload = 760,              /* -fgcse-after-reload */
  OPT_fgcse_las = 761,                       /* -fgcse-las */
  OPT_fgcse_lm = 762,                        /* -fgcse-lm */
  OPT_fgcse_sm = 763,                        /* -fgcse-sm */
  OPT_fgimple = 764,                         /* -fgimple */
  OPT_fgnat_encodings_ = 765,                /* -fgnat-encodings= */
  OPT_fgnu_keywords = 766,                   /* -fgnu-keywords */
  OPT_fgnu_runtime = 767,                    /* -fgnu-runtime */
  OPT_fgnu_tm = 768,                         /* -fgnu-tm */
  OPT_fgnu_unique = 769,                     /* -fgnu-unique */
  OPT_fgnu89_inline = 770,                   /* -fgnu89-inline */
  OPT_fgo_c_header_ = 771,                   /* -fgo-c-header= */
  OPT_fgo_check_divide_overflow = 772,       /* -fgo-check-divide-overflow */
  OPT_fgo_check_divide_zero = 773,           /* -fgo-check-divide-zero */
  OPT_fgo_compiling_runtime = 774,           /* -fgo-compiling-runtime */
  OPT_fgo_debug_escape = 775,                /* -fgo-debug-escape */
  OPT_fgo_debug_escape_hash_ = 776,          /* -fgo-debug-escape-hash= */
  OPT_fgo_debug_optimization = 777,          /* -fgo-debug-optimization */
  OPT_fgo_dump_ = 778,                       /* -fgo-dump- */
  OPT_fgo_optimize_ = 779,                   /* -fgo-optimize- */
  OPT_fgo_pkgpath_ = 780,                    /* -fgo-pkgpath= */
  OPT_fgo_prefix_ = 781,                     /* -fgo-prefix= */
  OPT_fgo_relative_import_path_ = 782,       /* -fgo-relative-import-path= */
  OPT_fgraphite = 783,                       /* -fgraphite */
  OPT_fgraphite_identity = 784,              /* -fgraphite-identity */
  OPT_fguess_branch_probability = 785,       /* -fguess-branch-probability */
  OPT_fguiding_decls = 786,                  /* -fguiding-decls */
  /* OPT_fhandle_exceptions = 787, */        /* -fhandle-exceptions */
  /* OPT_fhelp = 788, */                     /* -fhelp */
  /* OPT_fhelp_ = 789, */                    /* -fhelp= */
  OPT_fhoist_adjacent_loads = 790,           /* -fhoist-adjacent-loads */
  OPT_fhonor_std = 791,                      /* -fhonor-std */
  OPT_fhosted = 792,                         /* -fhosted */
  OPT_fhuge_objects = 793,                   /* -fhuge-objects */
  OPT_fident = 794,                          /* -fident */
  OPT_fif_conversion = 795,                  /* -fif-conversion */
  OPT_fif_conversion2 = 796,                 /* -fif-conversion2 */
  OPT_fignore_unknown_pragmas = 797,         /* -fignore-unknown-pragmas */
  OPT_fimplement_inlines = 798,              /* -fimplement-inlines */
  OPT_fimplicit_inline_templates = 799,      /* -fimplicit-inline-templates */
  OPT_fimplicit_none = 800,                  /* -fimplicit-none */
  OPT_fimplicit_templates = 801,             /* -fimplicit-templates */
  OPT_findirect_inlining = 802,              /* -findirect-inlining */
  OPT_finhibit_size_directive = 803,         /* -finhibit-size-directive */
  OPT_finit_character_ = 804,                /* -finit-character= */
  OPT_finit_derived = 805,                   /* -finit-derived */
  OPT_finit_integer_ = 806,                  /* -finit-integer= */
  OPT_finit_local_zero = 807,                /* -finit-local-zero */
  OPT_finit_logical_ = 808,                  /* -finit-logical= */
  OPT_finit_real_ = 809,                     /* -finit-real= */
  OPT_finline = 810,                         /* -finline */
  OPT_finline_atomics = 811,                 /* -finline-atomics */
  OPT_finline_functions = 812,               /* -finline-functions */
  OPT_finline_functions_called_once = 813,   /* -finline-functions-called-once */
  /* OPT_finline_limit_ = 814, */            /* -finline-limit- */
  OPT_finline_limit_ = 815,                  /* -finline-limit= */
  OPT_finline_matmul_limit_ = 816,           /* -finline-matmul-limit= */
  OPT_finline_small_functions = 817,         /* -finline-small-functions */
  OPT_finput_charset_ = 818,                 /* -finput-charset= */
  OPT_finstrument_functions = 819,           /* -finstrument-functions */
  OPT_finstrument_functions_exclude_file_list_ = 820,/* -finstrument-functions-exclude-file-list= */
  OPT_finstrument_functions_exclude_function_list_ = 821,/* -finstrument-functions-exclude-function-list= */
  OPT_finteger_4_integer_8 = 822,            /* -finteger-4-integer-8 */
  OPT_fintrinsic_modules_path = 823,         /* -fintrinsic-modules-path */
  OPT_fintrinsic_modules_path_ = 824,        /* -fintrinsic-modules-path= */
  OPT_finvariants = 825,                     /* -finvariants */
  OPT_fipa_bit_cp = 826,                     /* -fipa-bit-cp */
  OPT_fipa_cp = 827,                         /* -fipa-cp */
  /* OPT_fipa_cp_alignment = 828, */         /* -fipa-cp-alignment */
  OPT_fipa_cp_clone = 829,                   /* -fipa-cp-clone */
  OPT_fipa_icf = 830,                        /* -fipa-icf */
  OPT_fipa_icf_functions = 831,              /* -fipa-icf-functions */
  OPT_fipa_icf_variables = 832,              /* -fipa-icf-variables */
  /* OPT_fipa_matrix_reorg = 833, */         /* -fipa-matrix-reorg */
  OPT_fipa_profile = 834,                    /* -fipa-profile */
  OPT_fipa_pta = 835,                        /* -fipa-pta */
  OPT_fipa_pure_const = 836,                 /* -fipa-pure-const */
  OPT_fipa_ra = 837,                         /* -fipa-ra */
  OPT_fipa_reference = 838,                  /* -fipa-reference */
  OPT_fipa_reference_addressable = 839,      /* -fipa-reference-addressable */
  OPT_fipa_sra = 840,                        /* -fipa-sra */
  OPT_fipa_stack_alignment = 841,            /* -fipa-stack-alignment */
  /* OPT_fipa_struct_reorg = 842, */         /* -fipa-struct-reorg */
  OPT_fipa_vrp = 843,                        /* -fipa-vrp */
  OPT_fira_algorithm_ = 844,                 /* -fira-algorithm= */
  OPT_fira_hoist_pressure = 845,             /* -fira-hoist-pressure */
  OPT_fira_loop_pressure = 846,              /* -fira-loop-pressure */
  OPT_fira_region_ = 847,                    /* -fira-region= */
  OPT_fira_share_save_slots = 848,           /* -fira-share-save-slots */
  OPT_fira_share_spill_slots = 849,          /* -fira-share-spill-slots */
  OPT_fira_verbose_ = 850,                   /* -fira-verbose= */
  OPT_fisolate_erroneous_paths_attribute = 851,/* -fisolate-erroneous-paths-attribute */
  OPT_fisolate_erroneous_paths_dereference = 852,/* -fisolate-erroneous-paths-dereference */
  OPT_fivar_visibility_ = 853,               /* -fivar-visibility= */
  OPT_fivopts = 854,                         /* -fivopts */
  OPT_fjump_tables = 855,                    /* -fjump-tables */
  OPT_fkeep_gc_roots_live = 856,             /* -fkeep-gc-roots-live */
  OPT_fkeep_inline_dllexport = 857,          /* -fkeep-inline-dllexport */
  OPT_fkeep_inline_functions = 858,          /* -fkeep-inline-functions */
  OPT_fkeep_static_consts = 859,             /* -fkeep-static-consts */
  OPT_fkeep_static_functions = 860,          /* -fkeep-static-functions */
  OPT_flabels_ok = 861,                      /* -flabels-ok */
  OPT_flax_vector_conversions = 862,         /* -flax-vector-conversions */
  OPT_fleading_underscore = 863,             /* -fleading-underscore */
  OPT_flifetime_dse = 864,                   /* -flifetime-dse */
  OPT_flifetime_dse_ = 865,                  /* -flifetime-dse= */
  OPT_flimit_function_alignment = 866,       /* -flimit-function-alignment */
  OPT_flinker_output_ = 867,                 /* -flinker-output= */
  /* OPT_flive_patching = 868, */            /* -flive-patching */
  OPT_flive_patching_ = 869,                 /* -flive-patching= */
  OPT_flive_range_shrinkage = 870,           /* -flive-range-shrinkage */
  OPT_flocal_ivars = 871,                    /* -flocal-ivars */
  /* OPT_floop_block = 872, */               /* -floop-block */
  /* OPT_floop_flatten = 873, */             /* -floop-flatten */
  OPT_floop_interchange = 874,               /* -floop-interchange */
  OPT_floop_nest_optimize = 875,             /* -floop-nest-optimize */
  /* OPT_floop_optimize = 876, */            /* -floop-optimize */
  OPT_floop_parallelize_all = 877,           /* -floop-parallelize-all */
  /* OPT_floop_strip_mine = 878, */          /* -floop-strip-mine */
  OPT_floop_unroll_and_jam = 879,            /* -floop-unroll-and-jam */
  OPT_flra_remat = 880,                      /* -flra-remat */
  OPT_flto = 881,                            /* -flto */
  OPT_flto_compression_level_ = 882,         /* -flto-compression-level= */
  /* OPT_flto_odr_type_merging = 883, */     /* -flto-odr-type-merging */
  OPT_flto_partition_ = 884,                 /* -flto-partition= */
  OPT_flto_report = 885,                     /* -flto-report */
  OPT_flto_report_wpa = 886,                 /* -flto-report-wpa */
  OPT_flto_ = 887,                           /* -flto= */
  OPT_fltrans = 888,                         /* -fltrans */
  OPT_fltrans_output_list_ = 889,            /* -fltrans-output-list= */
  OPT_fmacro_prefix_map_ = 890,              /* -fmacro-prefix-map= */
  OPT_fmain = 891,                           /* -fmain */
  OPT_fmath_errno = 892,                     /* -fmath-errno */
  OPT_fmax_array_constructor_ = 893,         /* -fmax-array-constructor= */
  OPT_fmax_errors_ = 894,                    /* -fmax-errors= */
  OPT_fmax_identifier_length_ = 895,         /* -fmax-identifier-length= */
  OPT_fmax_include_depth_ = 896,             /* -fmax-include-depth= */
  OPT_fmax_stack_var_size_ = 897,            /* -fmax-stack-var-size= */
  OPT_fmax_subrecord_length_ = 898,          /* -fmax-subrecord-length= */
  OPT_fmem_report = 899,                     /* -fmem-report */
  OPT_fmem_report_wpa = 900,                 /* -fmem-report-wpa */
  OPT_fmerge_all_constants = 901,            /* -fmerge-all-constants */
  OPT_fmerge_constants = 902,                /* -fmerge-constants */
  OPT_fmerge_debug_strings = 903,            /* -fmerge-debug-strings */
  OPT_fmessage_length_ = 904,                /* -fmessage-length= */
  OPT_fmodule_file_ = 905,                   /* -fmodule-file= */
  OPT_fmodule_private = 906,                 /* -fmodule-private */
  OPT_fmoduleinfo = 907,                     /* -fmoduleinfo */
  OPT_fmodulo_sched = 908,                   /* -fmodulo-sched */
  OPT_fmodulo_sched_allow_regmoves = 909,    /* -fmodulo-sched-allow-regmoves */
  OPT_fmove_loop_invariants = 910,           /* -fmove-loop-invariants */
  OPT_fms_extensions = 911,                  /* -fms-extensions */
  OPT_fmudflap = 912,                        /* -fmudflap */
  OPT_fmudflapir = 913,                      /* -fmudflapir */
  OPT_fmudflapth = 914,                      /* -fmudflapth */
  OPT_fname_mangling_version_ = 915,         /* -fname-mangling-version- */
  OPT_fnew_abi = 916,                        /* -fnew-abi */
  OPT_fnew_inheriting_ctors = 917,           /* -fnew-inheriting-ctors */
  OPT_fnew_ttp_matching = 918,               /* -fnew-ttp-matching */
  OPT_fnext_runtime = 919,                   /* -fnext-runtime */
  OPT_fnil_receivers = 920,                  /* -fnil-receivers */
  OPT_fnon_call_exceptions = 921,            /* -fnon-call-exceptions */
  OPT_fnonansi_builtins = 922,               /* -fnonansi-builtins */
  OPT_fnonnull_objects = 923,                /* -fnonnull-objects */
  OPT_fnothrow_opt = 924,                    /* -fnothrow-opt */
  OPT_fobjc_abi_version_ = 925,              /* -fobjc-abi-version= */
  OPT_fobjc_call_cxx_cdtors = 926,           /* -fobjc-call-cxx-cdtors */
  OPT_fobjc_direct_dispatch = 927,           /* -fobjc-direct-dispatch */
  OPT_fobjc_exceptions = 928,                /* -fobjc-exceptions */
  OPT_fobjc_gc = 929,                        /* -fobjc-gc */
  OPT_fobjc_nilcheck = 930,                  /* -fobjc-nilcheck */
  OPT_fobjc_sjlj_exceptions = 931,           /* -fobjc-sjlj-exceptions */
  OPT_fobjc_std_objc1 = 932,                 /* -fobjc-std=objc1 */
  OPT_foffload_abi_ = 933,                   /* -foffload-abi= */
  OPT_foffload_ = 934,                       /* -foffload= */
  OPT_fomit_frame_pointer = 935,             /* -fomit-frame-pointer */
  OPT_fonly_ = 936,                          /* -fonly= */
  OPT_fopenacc = 937,                        /* -fopenacc */
  OPT_fopenacc_dim_ = 938,                   /* -fopenacc-dim= */
  OPT_fopenmp = 939,                         /* -fopenmp */
  OPT_fopenmp_simd = 940,                    /* -fopenmp-simd */
  OPT_foperator_names = 941,                 /* -foperator-names */
  OPT_fopt_info = 942,                       /* -fopt-info */
  OPT_fopt_info_ = 943,                      /* -fopt-info- */
  /* OPT_foptimize_register_move = 944, */   /* -foptimize-register-move */
  OPT_foptimize_sibling_calls = 945,         /* -foptimize-sibling-calls */
  OPT_foptimize_strlen = 946,                /* -foptimize-strlen */
  /* OPT_foptional_diags = 947, */           /* -foptional-diags */
  OPT_fpack_derived = 948,                   /* -fpack-derived */
  OPT_fpack_struct = 949,                    /* -fpack-struct */
  OPT_fpack_struct_ = 950,                   /* -fpack-struct= */
  OPT_fpad_source = 951,                     /* -fpad-source */
  OPT_fpartial_inlining = 952,               /* -fpartial-inlining */
  OPT_fpatchable_function_entry_ = 953,      /* -fpatchable-function-entry= */
  OPT_fpcc_struct_return = 954,              /* -fpcc-struct-return */
  OPT_fpch_deps = 955,                       /* -fpch-deps */
  OPT_fpch_preprocess = 956,                 /* -fpch-preprocess */
  OPT_fpeel_loops = 957,                     /* -fpeel-loops */
  OPT_fpeephole = 958,                       /* -fpeephole */
  OPT_fpeephole2 = 959,                      /* -fpeephole2 */
  OPT_fpermissive = 960,                     /* -fpermissive */
  OPT_fpermitted_flt_eval_methods_ = 961,    /* -fpermitted-flt-eval-methods= */
  OPT_fpic = 962,                            /* -fpic */
  OPT_fpie = 963,                            /* -fpie */
  OPT_fplan9_extensions = 964,               /* -fplan9-extensions */
  OPT_fplt = 965,                            /* -fplt */
  OPT_fplugin_arg_ = 966,                    /* -fplugin-arg- */
  OPT_fplugin_ = 967,                        /* -fplugin= */
  OPT_fpost_ipa_mem_report = 968,            /* -fpost-ipa-mem-report */
  OPT_fpostconditions = 969,                 /* -fpostconditions */
  OPT_fpre_include_ = 970,                   /* -fpre-include= */
  OPT_fpre_ipa_mem_report = 971,             /* -fpre-ipa-mem-report */
  OPT_fpreconditions = 972,                  /* -fpreconditions */
  OPT_fpredictive_commoning = 973,           /* -fpredictive-commoning */
  OPT_fprefetch_loop_arrays = 974,           /* -fprefetch-loop-arrays */
  OPT_fpreprocessed = 975,                   /* -fpreprocessed */
  OPT_fpretty_templates = 976,               /* -fpretty-templates */
  OPT_fprintf_return_value = 977,            /* -fprintf-return-value */
  OPT_fprofile = 978,                        /* -fprofile */
  OPT_fprofile_abs_path = 979,               /* -fprofile-abs-path */
  OPT_fprofile_arcs = 980,                   /* -fprofile-arcs */
  OPT_fprofile_correction = 981,             /* -fprofile-correction */
  OPT_fprofile_dir_ = 982,                   /* -fprofile-dir= */
  OPT_fprofile_exclude_files_ = 983,         /* -fprofile-exclude-files= */
  OPT_fprofile_filter_files_ = 984,          /* -fprofile-filter-files= */
  OPT_fprofile_generate = 985,               /* -fprofile-generate */
  OPT_fprofile_generate_ = 986,              /* -fprofile-generate= */
  OPT_fprofile_note_ = 987,                  /* -fprofile-note= */
  OPT_fprofile_reorder_functions = 988,      /* -fprofile-reorder-functions */
  OPT_fprofile_report = 989,                 /* -fprofile-report */
  OPT_fprofile_update_ = 990,                /* -fprofile-update= */
  OPT_fprofile_use = 991,                    /* -fprofile-use */
  OPT_fprofile_use_ = 992,                   /* -fprofile-use= */
  OPT_fprofile_values = 993,                 /* -fprofile-values */
  OPT_fprotect_parens = 994,                 /* -fprotect-parens */
  OPT_frandom_seed = 995,                    /* -frandom-seed */
  OPT_frandom_seed_ = 996,                   /* -frandom-seed= */
  OPT_frange_check = 997,                    /* -frange-check */
  OPT_freal_4_real_10 = 998,                 /* -freal-4-real-10 */
  OPT_freal_4_real_16 = 999,                 /* -freal-4-real-16 */
  OPT_freal_4_real_8 = 1000,                 /* -freal-4-real-8 */
  OPT_freal_8_real_10 = 1001,                /* -freal-8-real-10 */
  OPT_freal_8_real_16 = 1002,                /* -freal-8-real-16 */
  OPT_freal_8_real_4 = 1003,                 /* -freal-8-real-4 */
  OPT_frealloc_lhs = 1004,                   /* -frealloc-lhs */
  OPT_freciprocal_math = 1005,               /* -freciprocal-math */
  OPT_frecord_gcc_switches = 1006,           /* -frecord-gcc-switches */
  OPT_frecord_marker_4 = 1007,               /* -frecord-marker=4 */
  OPT_frecord_marker_8 = 1008,               /* -frecord-marker=8 */
  OPT_frecursive = 1009,                     /* -frecursive */
  OPT_free = 1010,                           /* -free */
  OPT_freg_struct_return = 1011,             /* -freg-struct-return */
  /* OPT_fregmove = 1012, */                 /* -fregmove */
  OPT_frelease = 1013,                       /* -frelease */
  OPT_frename_registers = 1014,              /* -frename-registers */
  OPT_freorder_blocks = 1015,                /* -freorder-blocks */
  OPT_freorder_blocks_algorithm_ = 1016,     /* -freorder-blocks-algorithm= */
  OPT_freorder_blocks_and_partition = 1017,  /* -freorder-blocks-and-partition */
  OPT_freorder_functions = 1018,             /* -freorder-functions */
  OPT_frepack_arrays = 1019,                 /* -frepack-arrays */
  OPT_freplace_objc_classes = 1020,          /* -freplace-objc-classes */
  OPT_frepo = 1021,                          /* -frepo */
  OPT_freport_bug = 1022,                    /* -freport-bug */
  OPT_frequire_return_statement = 1023,      /* -frequire-return-statement */
  OPT_frerun_cse_after_loop = 1024,          /* -frerun-cse-after-loop */
  /* OPT_frerun_loop_opt = 1025, */          /* -frerun-loop-opt */
  OPT_freschedule_modulo_scheduled_loops = 1026,/* -freschedule-modulo-scheduled-loops */
  OPT_fresolution_ = 1027,                   /* -fresolution= */
  OPT_frounding_math = 1028,                 /* -frounding-math */
  OPT_frtti = 1029,                          /* -frtti */
  OPT_fsanitize_address_use_after_scope = 1030,/* -fsanitize-address-use-after-scope */
  OPT_fsanitize_coverage_ = 1031,            /* -fsanitize-coverage= */
  OPT_fsanitize_recover = 1032,              /* -fsanitize-recover */
  OPT_fsanitize_recover_ = 1033,             /* -fsanitize-recover= */
  OPT_fsanitize_sections_ = 1034,            /* -fsanitize-sections= */
  OPT_fsanitize_undefined_trap_on_error = 1035,/* -fsanitize-undefined-trap-on-error */
  OPT_fsanitize_ = 1036,                     /* -fsanitize= */
  OPT_fsave_optimization_record = 1037,      /* -fsave-optimization-record */
  OPT_fsched_critical_path_heuristic = 1038, /* -fsched-critical-path-heuristic */
  OPT_fsched_dep_count_heuristic = 1039,     /* -fsched-dep-count-heuristic */
  OPT_fsched_group_heuristic = 1040,         /* -fsched-group-heuristic */
  OPT_fsched_interblock = 1041,              /* -fsched-interblock */
  OPT_fsched_last_insn_heuristic = 1042,     /* -fsched-last-insn-heuristic */
  OPT_fsched_pressure = 1043,                /* -fsched-pressure */
  OPT_fsched_rank_heuristic = 1044,          /* -fsched-rank-heuristic */
  OPT_fsched_spec = 1045,                    /* -fsched-spec */
  OPT_fsched_spec_insn_heuristic = 1046,     /* -fsched-spec-insn-heuristic */
  OPT_fsched_spec_load = 1047,               /* -fsched-spec-load */
  OPT_fsched_spec_load_dangerous = 1048,     /* -fsched-spec-load-dangerous */
  OPT_fsched_stalled_insns = 1049,           /* -fsched-stalled-insns */
  OPT_fsched_stalled_insns_dep = 1050,       /* -fsched-stalled-insns-dep */
  OPT_fsched_stalled_insns_dep_ = 1051,      /* -fsched-stalled-insns-dep= */
  OPT_fsched_stalled_insns_ = 1052,          /* -fsched-stalled-insns= */
  OPT_fsched_verbose_ = 1053,                /* -fsched-verbose= */
  OPT_fsched2_use_superblocks = 1054,        /* -fsched2-use-superblocks */
  /* OPT_fsched2_use_traces = 1055, */       /* -fsched2-use-traces */
  OPT_fschedule_fusion = 1056,               /* -fschedule-fusion */
  OPT_fschedule_insns = 1057,                /* -fschedule-insns */
  OPT_fschedule_insns2 = 1058,               /* -fschedule-insns2 */
  OPT_fsecond_underscore = 1059,             /* -fsecond-underscore */
  OPT_fsection_anchors = 1060,               /* -fsection-anchors */
  /* OPT_fsee = 1061, */                     /* -fsee */
  OPT_fsel_sched_pipelining = 1062,          /* -fsel-sched-pipelining */
  OPT_fsel_sched_pipelining_outer_loops = 1063,/* -fsel-sched-pipelining-outer-loops */
  OPT_fsel_sched_reschedule_pipelined = 1064,/* -fsel-sched-reschedule-pipelined */
  OPT_fselective_scheduling = 1065,          /* -fselective-scheduling */
  OPT_fselective_scheduling2 = 1066,         /* -fselective-scheduling2 */
  OPT_fself_test_ = 1067,                    /* -fself-test= */
  OPT_fsemantic_interposition = 1068,        /* -fsemantic-interposition */
  OPT_fshort_enums = 1069,                   /* -fshort-enums */
  OPT_fshort_wchar = 1070,                   /* -fshort-wchar */
  OPT_fshow_column = 1071,                   /* -fshow-column */
  OPT_fshrink_wrap = 1072,                   /* -fshrink-wrap */
  OPT_fshrink_wrap_separate = 1073,          /* -fshrink-wrap-separate */
  OPT_fsign_zero = 1074,                     /* -fsign-zero */
  OPT_fsignaling_nans = 1075,                /* -fsignaling-nans */
  OPT_fsigned_bitfields = 1076,              /* -fsigned-bitfields */
  OPT_fsigned_char = 1077,                   /* -fsigned-char */
  OPT_fsigned_zeros = 1078,                  /* -fsigned-zeros */
  OPT_fsimd_cost_model_ = 1079,              /* -fsimd-cost-model= */
  OPT_fsingle_precision_constant = 1080,     /* -fsingle-precision-constant */
  OPT_fsized_deallocation = 1081,            /* -fsized-deallocation */
  OPT_fsplit_ivs_in_unroller = 1082,         /* -fsplit-ivs-in-unroller */
  OPT_fsplit_loops = 1083,                   /* -fsplit-loops */
  OPT_fsplit_paths = 1084,                   /* -fsplit-paths */
  OPT_fsplit_stack = 1085,                   /* -fsplit-stack */
  OPT_fsplit_wide_types = 1086,              /* -fsplit-wide-types */
  OPT_fsplit_wide_types_early = 1087,        /* -fsplit-wide-types-early */
  OPT_fsquangle = 1088,                      /* -fsquangle */
  OPT_fssa_backprop = 1089,                  /* -fssa-backprop */
  OPT_fssa_phiopt = 1090,                    /* -fssa-phiopt */
  OPT_fsso_struct_ = 1091,                   /* -fsso-struct= */
  OPT_fstack_arrays = 1092,                  /* -fstack-arrays */
  /* OPT_fstack_check = 1093, */             /* -fstack-check */
  OPT_fstack_check_ = 1094,                  /* -fstack-check= */
  OPT_fstack_clash_protection = 1095,        /* -fstack-clash-protection */
  OPT_fstack_limit = 1096,                   /* -fstack-limit */
  OPT_fstack_limit_register_ = 1097,         /* -fstack-limit-register= */
  OPT_fstack_limit_symbol_ = 1098,           /* -fstack-limit-symbol= */
  OPT_fstack_protector = 1099,               /* -fstack-protector */
  OPT_fstack_protector_all = 1100,           /* -fstack-protector-all */
  OPT_fstack_protector_explicit = 1101,      /* -fstack-protector-explicit */
  OPT_fstack_protector_strong = 1102,        /* -fstack-protector-strong */
  OPT_fstack_reuse_ = 1103,                  /* -fstack-reuse= */
  OPT_fstack_usage = 1104,                   /* -fstack-usage */
  OPT_fstats = 1105,                         /* -fstats */
  OPT_fstdarg_opt = 1106,                    /* -fstdarg-opt */
  OPT_fstore_merging = 1107,                 /* -fstore-merging */
  /* OPT_fstrength_reduce = 1108, */         /* -fstrength-reduce */
  OPT_fstrict_aliasing = 1109,               /* -fstrict-aliasing */
  OPT_fstrict_enums = 1110,                  /* -fstrict-enums */
  OPT_fstrict_overflow = 1111,               /* -fstrict-overflow */
  OPT_fstrict_prototype = 1112,              /* -fstrict-prototype */
  OPT_fstrict_volatile_bitfields = 1113,     /* -fstrict-volatile-bitfields */
  /* OPT_fstrong_eval_order = 1114, */       /* -fstrong-eval-order */
  OPT_fstrong_eval_order_ = 1115,            /* -fstrong-eval-order= */
  OPT_fswitch_errors = 1116,                 /* -fswitch-errors */
  OPT_fsync_libcalls = 1117,                 /* -fsync-libcalls */
  OPT_fsyntax_only = 1118,                   /* -fsyntax-only */
  OPT_ftabstop_ = 1119,                      /* -ftabstop= */
  /* OPT_ftail_call_workaround = 1120, */    /* -ftail-call-workaround */
  OPT_ftail_call_workaround_ = 1121,         /* -ftail-call-workaround= */
  /* OPT_ftarget_help = 1122, */             /* -ftarget-help */
  OPT_ftemplate_backtrace_limit_ = 1123,     /* -ftemplate-backtrace-limit= */
  /* OPT_ftemplate_depth_ = 1124, */         /* -ftemplate-depth- */
  OPT_ftemplate_depth_ = 1125,               /* -ftemplate-depth= */
  OPT_ftest_coverage = 1126,                 /* -ftest-coverage */
  OPT_ftest_forall_temp = 1127,              /* -ftest-forall-temp */
  OPT_fthis_is_variable = 1128,              /* -fthis-is-variable */
  OPT_fthread_jumps = 1129,                  /* -fthread-jumps */
  OPT_fthreadsafe_statics = 1130,            /* -fthreadsafe-statics */
  OPT_ftime_report = 1131,                   /* -ftime-report */
  OPT_ftime_report_details = 1132,           /* -ftime-report-details */
  OPT_ftls_model_ = 1133,                    /* -ftls-model= */
  OPT_ftoplevel_reorder = 1134,              /* -ftoplevel-reorder */
  OPT_ftracer = 1135,                        /* -ftracer */
  OPT_ftrack_macro_expansion = 1136,         /* -ftrack-macro-expansion */
  OPT_ftrack_macro_expansion_ = 1137,        /* -ftrack-macro-expansion= */
  OPT_ftrampolines = 1138,                   /* -ftrampolines */
  OPT_ftransition_all = 1139,                /* -ftransition=all */
  OPT_ftransition_checkimports = 1140,       /* -ftransition=checkimports */
  OPT_ftransition_complex = 1141,            /* -ftransition=complex */
  OPT_ftransition_dip1000 = 1142,            /* -ftransition=dip1000 */
  OPT_ftransition_dip25 = 1143,              /* -ftransition=dip25 */
  OPT_ftransition_field = 1144,              /* -ftransition=field */
  OPT_ftransition_import = 1145,             /* -ftransition=import */
  OPT_ftransition_nogc = 1146,               /* -ftransition=nogc */
  OPT_ftransition_tls = 1147,                /* -ftransition=tls */
  OPT_ftrapping_math = 1148,                 /* -ftrapping-math */
  OPT_ftrapv = 1149,                         /* -ftrapv */
  OPT_ftree_bit_ccp = 1150,                  /* -ftree-bit-ccp */
  OPT_ftree_builtin_call_dce = 1151,         /* -ftree-builtin-call-dce */
  OPT_ftree_ccp = 1152,                      /* -ftree-ccp */
  OPT_ftree_ch = 1153,                       /* -ftree-ch */
  /* OPT_ftree_coalesce_inlined_vars = 1154, *//* -ftree-coalesce-inlined-vars */
  OPT_ftree_coalesce_vars = 1155,            /* -ftree-coalesce-vars */
  OPT_ftree_copy_prop = 1156,                /* -ftree-copy-prop */
  /* OPT_ftree_copyrename = 1157, */         /* -ftree-copyrename */
  OPT_ftree_cselim = 1158,                   /* -ftree-cselim */
  OPT_ftree_dce = 1159,                      /* -ftree-dce */
  OPT_ftree_dominator_opts = 1160,           /* -ftree-dominator-opts */
  OPT_ftree_dse = 1161,                      /* -ftree-dse */
  OPT_ftree_forwprop = 1162,                 /* -ftree-forwprop */
  OPT_ftree_fre = 1163,                      /* -ftree-fre */
  OPT_ftree_loop_distribute_patterns = 1164, /* -ftree-loop-distribute-patterns */
  OPT_ftree_loop_distribution = 1165,        /* -ftree-loop-distribution */
  OPT_ftree_loop_if_convert = 1166,          /* -ftree-loop-if-convert */
  /* OPT_ftree_loop_if_convert_stores = 1167, *//* -ftree-loop-if-convert-stores */
  OPT_ftree_loop_im = 1168,                  /* -ftree-loop-im */
  OPT_ftree_loop_ivcanon = 1169,             /* -ftree-loop-ivcanon */
  /* OPT_ftree_loop_linear = 1170, */        /* -ftree-loop-linear */
  OPT_ftree_loop_optimize = 1171,            /* -ftree-loop-optimize */
  OPT_ftree_loop_vectorize = 1172,           /* -ftree-loop-vectorize */
  OPT_ftree_lrs = 1173,                      /* -ftree-lrs */
  OPT_ftree_parallelize_loops_ = 1174,       /* -ftree-parallelize-loops= */
  OPT_ftree_partial_pre = 1175,              /* -ftree-partial-pre */
  OPT_ftree_phiprop = 1176,                  /* -ftree-phiprop */
  OPT_ftree_pre = 1177,                      /* -ftree-pre */
  OPT_ftree_pta = 1178,                      /* -ftree-pta */
  OPT_ftree_reassoc = 1179,                  /* -ftree-reassoc */
  /* OPT_ftree_salias = 1180, */             /* -ftree-salias */
  OPT_ftree_scev_cprop = 1181,               /* -ftree-scev-cprop */
  OPT_ftree_sink = 1182,                     /* -ftree-sink */
  OPT_ftree_slp_vectorize = 1183,            /* -ftree-slp-vectorize */
  OPT_ftree_slsr = 1184,                     /* -ftree-slsr */
  OPT_ftree_sra = 1185,                      /* -ftree-sra */
  /* OPT_ftree_store_ccp = 1186, */          /* -ftree-store-ccp */
  /* OPT_ftree_store_copy_prop = 1187, */    /* -ftree-store-copy-prop */
  OPT_ftree_switch_conversion = 1188,        /* -ftree-switch-conversion */
  OPT_ftree_tail_merge = 1189,               /* -ftree-tail-merge */
  OPT_ftree_ter = 1190,                      /* -ftree-ter */
  /* OPT_ftree_vect_loop_version = 1191, */  /* -ftree-vect-loop-version */
  OPT_ftree_vectorize = 1192,                /* -ftree-vectorize */
  /* OPT_ftree_vectorizer_verbose_ = 1193, *//* -ftree-vectorizer-verbose= */
  OPT_ftree_vrp = 1194,                      /* -ftree-vrp */
  OPT_funconstrained_commons = 1195,         /* -funconstrained-commons */
  OPT_funderscoring = 1196,                  /* -funderscoring */
  OPT_funit_at_a_time = 1197,                /* -funit-at-a-time */
  OPT_funittest = 1198,                      /* -funittest */
  OPT_funroll_all_loops = 1199,              /* -funroll-all-loops */
  OPT_funroll_loops = 1200,                  /* -funroll-loops */
  /* OPT_funsafe_loop_optimizations = 1201, *//* -funsafe-loop-optimizations */
  OPT_funsafe_math_optimizations = 1202,     /* -funsafe-math-optimizations */
  OPT_funsigned_bitfields = 1203,            /* -funsigned-bitfields */
  OPT_funsigned_char = 1204,                 /* -funsigned-char */
  OPT_funswitch_loops = 1205,                /* -funswitch-loops */
  OPT_funwind_tables = 1206,                 /* -funwind-tables */
  OPT_fuse_cxa_atexit = 1207,                /* -fuse-cxa-atexit */
  OPT_fuse_cxa_get_exception_ptr = 1208,     /* -fuse-cxa-get-exception-ptr */
  OPT_fuse_ld_bfd = 1209,                    /* -fuse-ld=bfd */
  OPT_fuse_ld_gold = 1210,                   /* -fuse-ld=gold */
  OPT_fuse_ld_lld = 1211,                    /* -fuse-ld=lld */
  OPT_fuse_linker_plugin = 1212,             /* -fuse-linker-plugin */
  OPT_fvar_tracking = 1213,                  /* -fvar-tracking */
  OPT_fvar_tracking_assignments = 1214,      /* -fvar-tracking-assignments */
  OPT_fvar_tracking_assignments_toggle = 1215,/* -fvar-tracking-assignments-toggle */
  OPT_fvar_tracking_uninit = 1216,           /* -fvar-tracking-uninit */
  OPT_fvariable_expansion_in_unroller = 1217,/* -fvariable-expansion-in-unroller */
  /* OPT_fvect_cost_model = 1218, */         /* -fvect-cost-model */
  OPT_fvect_cost_model_ = 1219,              /* -fvect-cost-model= */
  OPT_fverbose_asm = 1220,                   /* -fverbose-asm */
  /* OPT_fversion = 1221, */                 /* -fversion */
  OPT_fversion_loops_for_strides = 1222,     /* -fversion-loops-for-strides */
  OPT_fversion_ = 1223,                      /* -fversion= */
  OPT_fvisibility_inlines_hidden = 1224,     /* -fvisibility-inlines-hidden */
  OPT_fvisibility_ms_compat = 1225,          /* -fvisibility-ms-compat */
  OPT_fvisibility_ = 1226,                   /* -fvisibility= */
  OPT_fvpt = 1227,                           /* -fvpt */
  OPT_fvtable_gc = 1228,                     /* -fvtable-gc */
  OPT_fvtable_thunks = 1229,                 /* -fvtable-thunks */
  OPT_fvtable_verify_ = 1230,                /* -fvtable-verify= */
  OPT_fvtv_counts = 1231,                    /* -fvtv-counts */
  OPT_fvtv_debug = 1232,                     /* -fvtv-debug */
  OPT_fweak = 1233,                          /* -fweak */
  OPT_fweb = 1234,                           /* -fweb */
  /* OPT_fwhole_file = 1235, */              /* -fwhole-file */
  OPT_fwhole_program = 1236,                 /* -fwhole-program */
  OPT_fwide_exec_charset_ = 1237,            /* -fwide-exec-charset= */
  OPT_fworking_directory = 1238,             /* -fworking-directory */
  OPT_fwpa = 1239,                           /* -fwpa */
  OPT_fwpa_ = 1240,                          /* -fwpa= */
  OPT_fwrapv = 1241,                         /* -fwrapv */
  OPT_fwrapv_pointer = 1242,                 /* -fwrapv-pointer */
  OPT_fxref = 1243,                          /* -fxref */
  /* OPT_fzee = 1244, */                     /* -fzee */
  OPT_fzero_initialized_in_bss = 1245,       /* -fzero-initialized-in-bss */
  OPT_fzero_link = 1246,                     /* -fzero-link */
  OPT_g = 1247,                              /* -g */
  OPT_gant = 1248,                           /* -gant */
  OPT_gas_loc_support = 1249,                /* -gas-loc-support */
  OPT_gas_locview_support = 1250,            /* -gas-locview-support */
  OPT_gcoff = 1251,                          /* -gcoff */
  OPT_gcoff1 = 1252,                         /* -gcoff1 */
  OPT_gcoff2 = 1253,                         /* -gcoff2 */
  OPT_gcoff3 = 1254,                         /* -gcoff3 */
  OPT_gcolumn_info = 1255,                   /* -gcolumn-info */
  OPT_gdescribe_dies = 1256,                 /* -gdescribe-dies */
  OPT_gdwarf = 1257,                         /* -gdwarf */
  OPT_gdwarf_ = 1258,                        /* -gdwarf- */
  OPT_gen_decls = 1259,                      /* -gen-decls */
  OPT_ggdb = 1260,                           /* -ggdb */
  OPT_ggnu_pubnames = 1261,                  /* -ggnu-pubnames */
  OPT_gimple_stats = 1262,                   /* -gimple-stats */
  OPT_ginline_points = 1263,                 /* -ginline-points */
  OPT_ginternal_reset_location_views = 1264, /* -ginternal-reset-location-views */
  OPT_gnat = 1265,                           /* -gnat */
  OPT_gnatO = 1266,                          /* -gnatO */
  OPT_gno_ = 1267,                           /* -gno- */
  OPT_gno_pubnames = 1268,                   /* -gno-pubnames */
  OPT_gpubnames = 1269,                      /* -gpubnames */
  OPT_grecord_gcc_switches = 1270,           /* -grecord-gcc-switches */
  OPT_gsplit_dwarf = 1271,                   /* -gsplit-dwarf */
  OPT_gstabs = 1272,                         /* -gstabs */
  OPT_gstabs_ = 1273,                        /* -gstabs+ */
  OPT_gstatement_frontiers = 1274,           /* -gstatement-frontiers */
  OPT_gstrict_dwarf = 1275,                  /* -gstrict-dwarf */
  OPT_gtoggle = 1276,                        /* -gtoggle */
  OPT_gvariable_location_views = 1277,       /* -gvariable-location-views */
  OPT_gvariable_location_views_incompat5 = 1278,/* -gvariable-location-views=incompat5 */
  OPT_gvms = 1279,                           /* -gvms */
  OPT_gxcoff = 1280,                         /* -gxcoff */
  OPT_gxcoff_ = 1281,                        /* -gxcoff+ */
  OPT_gz = 1282,                             /* -gz */
  OPT_gz_ = 1283,                            /* -gz= */
  OPT_h = 1284,                              /* -h */
  OPT_help = 1285,                           /* -help */
  OPT_idirafter = 1286,                      /* -idirafter */
  OPT_imacros = 1287,                        /* -imacros */
  OPT_imultiarch = 1288,                     /* -imultiarch */
  OPT_imultilib = 1289,                      /* -imultilib */
  OPT_include = 1290,                        /* -include */
  OPT_iplugindir_ = 1291,                    /* -iplugindir= */
  OPT_iprefix = 1292,                        /* -iprefix */
  OPT_iquote = 1293,                         /* -iquote */
  OPT_isysroot = 1294,                       /* -isysroot */
  OPT_isystem = 1295,                        /* -isystem */
  OPT_iwithprefix = 1296,                    /* -iwithprefix */
  OPT_iwithprefixbefore = 1297,              /* -iwithprefixbefore */
  OPT_k8 = 1298,                             /* -k8 */
  OPT_l = 1299,                              /* -l */
  OPT_lang_asm = 1300,                       /* -lang-asm */
  OPT_list = 1301,                           /* -list */
  OPT_mabi_ = 1302,                          /* -mabi= */
  OPT_malign_data_ = 1303,                   /* -malign-data= */
  OPT_march_ = 1304,                         /* -march= */
  OPT_mbranch_cost_ = 1305,                  /* -mbranch-cost= */
  OPT_mcmodel_ = 1306,                       /* -mcmodel= */
  OPT_mdiv = 1307,                           /* -mdiv */
  OPT_mexplicit_relocs = 1308,               /* -mexplicit-relocs */
  OPT_mfdiv = 1309,                          /* -mfdiv */
  OPT_mplt = 1310,                           /* -mplt */
  OPT_mpreferred_stack_boundary_ = 1311,     /* -mpreferred-stack-boundary= */
  OPT_mrelax = 1312,                         /* -mrelax */
  OPT_mriscv_attribute = 1313,               /* -mriscv-attribute */
  OPT_msave_restore = 1314,                  /* -msave-restore */
  OPT_msmall_data_limit_ = 1315,             /* -msmall-data-limit= */
  OPT_mstrict_align = 1316,                  /* -mstrict-align */
  OPT_mtune_ = 1317,                         /* -mtune= */
  OPT_n = 1318,                              /* -n */
  OPT_name_sort = 1319,                      /* -name-sort */
  OPT_no_canonical_prefixes = 1320,          /* -no-canonical-prefixes */
  OPT_no_integrated_cpp = 1321,              /* -no-integrated-cpp */
  OPT_no_pie = 1322,                         /* -no-pie */
  OPT_nocpp = 1323,                          /* -nocpp */
  OPT_nodefaultlibs = 1324,                  /* -nodefaultlibs */
  OPT_nolibc = 1325,                         /* -nolibc */
  OPT_nophoboslib = 1326,                    /* -nophoboslib */
  OPT_nostartfiles = 1327,                   /* -nostartfiles */
  OPT_nostdinc = 1328,                       /* -nostdinc */
  OPT_nostdinc__ = 1329,                     /* -nostdinc++ */
  OPT_nostdlib = 1330,                       /* -nostdlib */
  OPT_o = 1331,                              /* -o */
  OPT_objects = 1332,                        /* -objects */
  OPT_p = 1333,                              /* -p */
  OPT_pass_exit_codes = 1334,                /* -pass-exit-codes */
  /* OPT_pedantic = 1335, */                 /* -pedantic */
  OPT_pedantic_errors = 1336,                /* -pedantic-errors */
  OPT_pg = 1337,                             /* -pg */
  OPT_pie = 1338,                            /* -pie */
  OPT_pipe = 1339,                           /* -pipe */
  OPT_print_file_name_ = 1340,               /* -print-file-name= */
  OPT_print_libgcc_file_name = 1341,         /* -print-libgcc-file-name */
  OPT_print_multi_directory = 1342,          /* -print-multi-directory */
  OPT_print_multi_lib = 1343,                /* -print-multi-lib */
  OPT_print_multi_os_directory = 1344,       /* -print-multi-os-directory */
  OPT_print_multiarch = 1345,                /* -print-multiarch */
  OPT_print_objc_runtime_info = 1346,        /* -print-objc-runtime-info */
  OPT_print_prog_name_ = 1347,               /* -print-prog-name= */
  OPT_print_search_dirs = 1348,              /* -print-search-dirs */
  OPT_print_sysroot = 1349,                  /* -print-sysroot */
  OPT_print_sysroot_headers_suffix = 1350,   /* -print-sysroot-headers-suffix */
  OPT_print_value = 1351,                    /* -print-value */
  OPT_quiet = 1352,                          /* -quiet */
  OPT_r = 1353,                              /* -r */
  OPT_remap = 1354,                          /* -remap */
  OPT_reverse_sort = 1355,                   /* -reverse-sort */
  OPT_s = 1356,                              /* -s */
  OPT_save_temps = 1357,                     /* -save-temps */
  OPT_save_temps_ = 1358,                    /* -save-temps= */
  OPT_shared = 1359,                         /* -shared */
  OPT_shared_libgcc = 1360,                  /* -shared-libgcc */
  OPT_shared_libphobos = 1361,               /* -shared-libphobos */
  OPT_size_sort = 1362,                      /* -size-sort */
  /* OPT_specs = 1363, */                    /* -specs */
  OPT_specs_ = 1364,                         /* -specs= */
  OPT_static = 1365,                         /* -static */
  OPT_static_libasan = 1366,                 /* -static-libasan */
  OPT_static_libgcc = 1367,                  /* -static-libgcc */
  OPT_static_libgfortran = 1368,             /* -static-libgfortran */
  OPT_static_libgo = 1369,                   /* -static-libgo */
  OPT_static_liblsan = 1370,                 /* -static-liblsan */
  OPT_static_libmpx = 1371,                  /* -static-libmpx */
  OPT_static_libmpxwrappers = 1372,          /* -static-libmpxwrappers */
  OPT_static_libphobos = 1373,               /* -static-libphobos */
  OPT_static_libstdc__ = 1374,               /* -static-libstdc++ */
  OPT_static_libtsan = 1375,                 /* -static-libtsan */
  OPT_static_libubsan = 1376,                /* -static-libubsan */
  OPT_static_pie = 1377,                     /* -static-pie */
  /* OPT_std_c__03 = 1378, */                /* -std=c++03 */
  /* OPT_std_c__0x = 1379, */                /* -std=c++0x */
  OPT_std_c__11 = 1380,                      /* -std=c++11 */
  OPT_std_c__14 = 1381,                      /* -std=c++14 */
  OPT_std_c__17 = 1382,                      /* -std=c++17 */
  /* OPT_std_c__1y = 1383, */                /* -std=c++1y */
  /* OPT_std_c__1z = 1384, */                /* -std=c++1z */
  OPT_std_c__2a = 1385,                      /* -std=c++2a */
  OPT_std_c__98 = 1386,                      /* -std=c++98 */
  OPT_std_c11 = 1387,                        /* -std=c11 */
  OPT_std_c17 = 1388,                        /* -std=c17 */
  /* OPT_std_c18 = 1389, */                  /* -std=c18 */
  /* OPT_std_c1x = 1390, */                  /* -std=c1x */
  OPT_std_c2x = 1391,                        /* -std=c2x */
  /* OPT_std_c89 = 1392, */                  /* -std=c89 */
  OPT_std_c90 = 1393,                        /* -std=c90 */
  OPT_std_c99 = 1394,                        /* -std=c99 */
  /* OPT_std_c9x = 1395, */                  /* -std=c9x */
  OPT_std_f2003 = 1396,                      /* -std=f2003 */
  OPT_std_f2008 = 1397,                      /* -std=f2008 */
  OPT_std_f2008ts = 1398,                    /* -std=f2008ts */
  OPT_std_f2018 = 1399,                      /* -std=f2018 */
  OPT_std_f95 = 1400,                        /* -std=f95 */
  OPT_std_gnu = 1401,                        /* -std=gnu */
  /* OPT_std_gnu__03 = 1402, */              /* -std=gnu++03 */
  /* OPT_std_gnu__0x = 1403, */              /* -std=gnu++0x */
  OPT_std_gnu__11 = 1404,                    /* -std=gnu++11 */
  OPT_std_gnu__14 = 1405,                    /* -std=gnu++14 */
  OPT_std_gnu__17 = 1406,                    /* -std=gnu++17 */
  /* OPT_std_gnu__1y = 1407, */              /* -std=gnu++1y */
  /* OPT_std_gnu__1z = 1408, */              /* -std=gnu++1z */
  OPT_std_gnu__2a = 1409,                    /* -std=gnu++2a */
  OPT_std_gnu__98 = 1410,                    /* -std=gnu++98 */
  OPT_std_gnu11 = 1411,                      /* -std=gnu11 */
  OPT_std_gnu17 = 1412,                      /* -std=gnu17 */
  /* OPT_std_gnu18 = 1413, */                /* -std=gnu18 */
  /* OPT_std_gnu1x = 1414, */                /* -std=gnu1x */
  OPT_std_gnu2x = 1415,                      /* -std=gnu2x */
  /* OPT_std_gnu89 = 1416, */                /* -std=gnu89 */
  OPT_std_gnu90 = 1417,                      /* -std=gnu90 */
  OPT_std_gnu99 = 1418,                      /* -std=gnu99 */
  /* OPT_std_gnu9x = 1419, */                /* -std=gnu9x */
  /* OPT_std_iso9899_1990 = 1420, */         /* -std=iso9899:1990 */
  OPT_std_iso9899_199409 = 1421,             /* -std=iso9899:199409 */
  /* OPT_std_iso9899_1999 = 1422, */         /* -std=iso9899:1999 */
  /* OPT_std_iso9899_199x = 1423, */         /* -std=iso9899:199x */
  /* OPT_std_iso9899_2011 = 1424, */         /* -std=iso9899:2011 */
  /* OPT_std_iso9899_2017 = 1425, */         /* -std=iso9899:2017 */
  /* OPT_std_iso9899_2018 = 1426, */         /* -std=iso9899:2018 */
  OPT_std_legacy = 1427,                     /* -std=legacy */
  OPT_symbol_ = 1428,                        /* -symbol= */
  OPT_symbolic = 1429,                       /* -symbolic */
  OPT_t = 1430,                              /* -t */
  OPT_time = 1431,                           /* -time */
  OPT_time_ = 1432,                          /* -time= */
  OPT_traditional = 1433,                    /* -traditional */
  OPT_traditional_cpp = 1434,                /* -traditional-cpp */
  OPT_tree_stats = 1435,                     /* -tree-stats */
  OPT_trigraphs = 1436,                      /* -trigraphs */
  OPT_type_stats = 1437,                     /* -type-stats */
  OPT_u = 1438,                              /* -u */
  OPT_undef = 1439,                          /* -undef */
  OPT_v = 1440,                              /* -v */
  OPT_version = 1441,                        /* -version */
  OPT_w = 1442,                              /* -w */
  OPT_wrapper = 1443,                        /* -wrapper */
  OPT_x = 1444,                              /* -x */
  OPT_z = 1445,                              /* -z */
  N_OPTS,
  OPT_SPECIAL_unknown,
  OPT_SPECIAL_ignore,
  OPT_SPECIAL_warn_removed,
  OPT_SPECIAL_program_name,
  OPT_SPECIAL_input_file
};

#ifdef GCC_C_COMMON_C
/* Mapping from cpp message reasons to the options that enable them.  */
#include <cpplib.h>
struct cpp_reason_option_codes_t
{
  /* cpplib message reason.  */
  const enum cpp_warning_reason reason;
  /* gcc option that controls this message.  */
  const int option_code;
};

static const struct cpp_reason_option_codes_t cpp_reason_option_codes[] = {
  {CPP_W_BUILTIN_MACRO_REDEFINED,           OPT_Wbuiltin_macro_redefined},
  {CPP_W_CXX_OPERATOR_NAMES,                OPT_Wc___compat},
  {CPP_W_CXX11_COMPAT,                      OPT_Wc__11_compat},
  {CPP_W_C90_C99_COMPAT,                    OPT_Wc90_c99_compat},
  {CPP_W_COMMENTS,                          OPT_Wcomment},
  {CPP_W_WARNING_DIRECTIVE,                 OPT_Wcpp},
  {CPP_W_DATE_TIME,                         OPT_Wdate_time},
  {CPP_W_DEPRECATED,                        OPT_Wdeprecated},
  {CPP_W_ENDIF_LABELS,                      OPT_Wendif_labels},
  {CPP_W_EXPANSION_TO_DEFINED,              OPT_Wexpansion_to_defined},
  {CPP_W_INVALID_PCH,                       OPT_Winvalid_pch},
  {CPP_W_LITERAL_SUFFIX,                    OPT_Wliteral_suffix},
  {CPP_W_LONG_LONG,                         OPT_Wlong_long},
  {CPP_W_MISSING_INCLUDE_DIRS,              OPT_Wmissing_include_dirs},
  {CPP_W_MULTICHAR,                         OPT_Wmultichar},
  {CPP_W_NORMALIZE,                         OPT_Wnormalized_},
  {CPP_W_PEDANTIC,                          OPT_Wpedantic},
  {CPP_W_TRADITIONAL,                       OPT_Wtraditional},
  {CPP_W_TRIGRAPHS,                         OPT_Wtrigraphs},
  {CPP_W_UNDEF,                             OPT_Wundef},
  {CPP_W_UNUSED_MACROS,                     OPT_Wunused_macros},
  {CPP_W_VARIADIC_MACROS,                   OPT_Wvariadic_macros},
  {CPP_W_NONE,                              0},
};
#endif

#endif /* OPTIONS_H */
